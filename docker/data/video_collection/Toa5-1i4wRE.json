{
    "id": "Toa5-1i4wRE",
    "title": "Binary? How does that work?  | Free CCNA 200-301 Course | Video #13",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2020-08-30T14:30:04Z",
    "video_url": "https://www.youtube.com/watch?v=Toa5-1i4wRE",
    "category": "Science & Technology",
    "tags": [
        "binary",
        "binary options",
        "computer science",
        "decimal",
        "binary to decimal",
        "binary to decimal conversion",
        "computers",
        "numbers",
        "binary decimal",
        "binary numbers",
        "ccna",
        "packet tracer",
        "cisco packet tracer",
        "ccna 200-301",
        "networking",
        "ccna training",
        "cisco ccna",
        "free ccna",
        "ccna study",
        "ccna certification",
        "ccna exam",
        "new ccna",
        "ccna full course",
        "ccna tutorial",
        "ccna 2020",
        "200-301",
        "cisco training",
        "binary option",
        "number system",
        "binary conversion",
        "how to convert decimal to binary",
        "binary converter"
    ],
    "views": 30215,
    "likes": 942,
    "comments_count": 95,
    "description": "How do binary numbers work? How do you convert Decimal numbers to Binary; and Binary numbers to Decimal numbers? Join my Discord here:  Buy the full course here for $10:  Or support the mission, join thisisIT:  Binary Slides:   This is video #13 of my FREE CCNA Course 200-301 - a complete CCNA course for the new Cisco CCNA exam. I am going to be covering all the topics in the exam blueprint in this course.   I want to make this content practical and it will include a lots of labs and demonstrations to help you better understand topics on the exam.  The course will contain: - Videos - Labs using Cisco Packet Tracer - Quiz Questions - And more!  Menu: Binary Joke: 0:00 Analogy 0:35 Computer systems: 1:48 Binary examples: 2:20 Three cables: 4:40 Four cables: 5:22 Binary powers: 6:54 Binary table: 8:34 Decimal to Binary example: 10:26 Thank you to my supporters: 12:10  CCNA 200-301 Playlist:   Support me via thisisIT: support the mission, join thisisIT:   Or, buy the CCNA course and support me: DavidBombal.com: CCNA ($10):  Udemy CCNA Course:  GNS3 CCNA Course: CCNA ($10):   Get Packet Tracer here:   ====================== Special Offers: ====================== Cisco Press: Up to 50% discount Save every day on Cisco Press learning products! Use discount code BOMBAL during checkout to save 35% on print books (plus free shipping in the U.S.), 45% on eBooks, and 50% on video courses and simulator software. Offer expires December 31, 2020. Shop now.  Link: bit.ly/ciscopress50  Boson software: 15% discount Link: bit.ly/boson15 Code: DBAF15P  binary binary numbers CCNA Free CCNA 200-301 ccna 200-301 free ccna course network networking thisisit osi model tcp/ip model  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #binary #decimal #ccna",
    "description_links": [
        "http://discord.davidbombal.com",
        "https://bit.ly/ccnafor10",
        "https://bit.ly/thisisitccna",
        "http://bit.ly/binarypdf1",
        "https://bit.ly/freedbccna",
        "https://bit.ly/thisisitccna",
        "http://bit.ly/yt999ccna",
        "https://bit.ly/ccnafor10dollars",
        "https://bit.ly/gns3ccna10",
        "https://www.netacad.com/courses/packet-tracer"
    ],
    "transcript": "- There are only 10 types of people in the world. Those that understand binary and those that don't. How would you read that? Would you read that number as one zero, as in 10, or would you read it as two? If you're not sure what I'm talking about, you don't understand this joke, don't worry. That 10 means two in binary. So the joke is there are only two types of people in the world, those that understand binary and those that don't. If you didn't get the joke, don't worry, by the end of this video, you'll understand this joke and understand where the 10 comes from. As an analogy, to help us understand binary, let's use the analogy of electricity. Because computers, let's be honest, they have chips in them. Routers and switches have specific types of chips known as ASICs or Application Specific Integrated Circuits. It's basically a circuit. So computers have circuits and they run on electricity. In electricity, we either have two states, something is on, as in this current or power to the device, or it's off. So as an analogy, notice that bigger light there, that's an old antique lamp, but I've put a huge bowl in that lamp. So that's on. That's off, no power. On, there's power. That's off, no power. That's on, on means current is applied. Off means current is removed. So a computer basically only has two states, current or no current on a circuit. That however, let me turn that back on again. That however, gives us two states. So one cable gives us two states. So remember this, all computers function by using a system of switches that can either be on or off. Off equals zero, on equals one. Our binary values are either zero or one. So once again, our analogy, that's one, that's zero. One, zero. I won't bore you too much doing that. The moral of the story is, make sure you understand that binary consists of two states or two values, zero or one. That becomes really important now, as we scale this analogy. Here we have a cable, it's turned off, no current is flowing, binary value is zero. I'll turn that on. So current is now flowing, binary value is one. We have two states, either current or no current, two binary values, zero or one. So one cable, two states, either current or no current. If we extend that now and we've got two cables, binary value is currently 00. There's no current on either cable. If I put current on the one, binary value is now 01. Change that current on the left, no current on the right, binary value is now 10. Turn them both on, we've got current on two cables, binary value is now 11. So we either have no current on both binary value 00 or 01, or 10, and lastly, 11. We have two states, either on or off, we have two cables, two to the power of two is four. At the moment, current is applied, the bulb is on, that indicates one. I can turn that off, that indicates zero. That's how a computer can send information to another computer. Or that's how programs are written. We might write a program in a high level programming language like Python, but as it goes down, we end up doing assembly language. We end up writing zeros and ones to tell the computer what it needs to do. Now the important lesson here, is we have two states, either on or off. If we have one cable, we have two states, on, off on one cable. But if we've got two cables, we end up having four states. We've either got 00, no current on both cables, or 01, or 10, or 11, current on both cables. So two states, two cables means that we end up having four values. You can write that as two times two equals four, or two to the power of two equals four. Two states, two cables equals four. Now I don't wanna spend too much time on this analogy, but let's assume we've got three cables. In this example, we have three cables, we've got two states, current state is off. So the binary value is 000. Once again, and I won't go through all the combinations, we could have 001, or as an example 101 or 111. So we have two states either on or off. We have three cables. So two times two times two is eight, or two to the power of three is eight. There are eight different combinations or options here. Now, I won't bore you extending that too much, but we could do something very similar. You tell me, what binary value do we have here if we've got four cables? On (indistinct), 0111. How many combinations do we have? We have two states, four cables, two times two times two times two equals 16, or two to the power of four equals 16. 16 different combinations. In this example, they are all on. We have two states, four cables, 16 combinations. So we've either got no current on the first cable, no current on the second, none on the third, none on the fourth. Or as an example, no current, no current, no current, current. Or no current, no current, current, no current. And if we go through all the possible combinations, we're gonna end up having 16 binary values. So two states, as shown over here, four cables, means two to the power of four, 16 possible combinations. Again, two states, four cables, gives us 16. If we've got two states and we've got five cables, that would give us 32. Or if we have two states and six cables, that gives us 64 combinations. Now, you could manually work this out, you could manually go through every combination, but we're not gonna do that. But if you wanted to test this and verify that I'm talking the truth, then you could do that. So just to summarize, if we've got two states and one cable, two to the power of one is two. So two possible combinations. If we've got two states and two cables, that gives us four combinations, or four possible states. Two to the three is eight, two to the four is 16. Now this is one that causes confusion. In decimal, we don't start at one, we start at zero. And then we count zero, one, two, three. Ignoring negative numbers, obviously, but let's assume positive integer numbers, we start at zero, and then we count up. Now in binary, we've got two to the power of zero. So two to no cables as an analogy equals one. So we don't start with one cable, we start with zero cables. Now this is once again, just an analogy. So if the analogy doesn't work too well for you, then just stick with the math. Just work with the math or maths if you prefer. So, what I need you to remember, is two to the power of zero is one. Two to the power of one is two. Two to the power of two is four. Two to the power of three is eight. Two to the power of four is 16. And if we continue, two to the power of five is 32. Two to the power of six is 64. Two to the power of seven is 128. Two to the power of eight is 256. But in an IP version four address, we've got what's called an octet, which is eight binary values. So we've got eight values, but we start counting at zero. So we've got zero, one, two, three, four, five, six, seven. And let's formalize that by showing you a really important table. Now, if you're ever gonna learn a table, then this is the table that I suggest that you learn. It's really important for the CCNA exam. Make sure that you know this table before you go and take your exam. Notice we have at the top here, two to the power of zero. Two to the power of one. Two to the power of two. Two to the power of three, four, five, six and seven. Notice we counting from zero to seven, but that's one, two, three, four, five, six, seven, eight. If we set this value to one in binary, in decimal that equates to one. If we set this value to one in binary, it equates to two. This value equates to four. This equates to eight, this to 16, this to 32, this to 64, this to 128. Remember that two to the power of seven is 128. And these are seven. Two to the power of six equals 64. Or if you like two to the power of two equals four. So when this part is set on, it means four in decimal. Now, in the real world, you're gonna use a calculator, but you need to understand the basics before you use calculators. So we're gonna do a lot of this manually first. So in this table, we have what's called the base exponent. So we've got, starting on the right hand side, two to the power of zero. Two to the power of one. Two to the power of two. Two to the power of three, four, five, six and seven. And then we've got a binary equivalent. So if we set this to binary one, then the decimal equivalent is 128. If I set this to binary one, decimal equivalent is two. So to help you understand that, let's do an example. Let's say I gave you a number of 255. 255, if we take the decimal equivalent is equal to 128. In other words, this part is set on. 64, in other words, this part is set on. 32, 16, eight, four, two and one. In other words, if I add 128 plus 64 plus 32 plus 16 plus eight plus four plus two plus one, I get 255 in decimal. That is represented as this in binary. So in binary, eight binary ones equates to 255 because this equals binary one. This equals 128 in decimal. But to prove this, let's use a calculator. Here's the calculator on my Mac. If I type 255, notice in binary, that's eight binary ones. That's not very clear. So let me use a windows calculator. So here's my windows calculator. I'm gonna specify binary, one, two, three, four, five, six, seven, eight. Notice the windows calculator puts a gap between the four binary values. Makes it easier to read, but in a IP address, there is no gap like that, but I often write it that way just to make it easier to read. Notice the value is 255 in decimal, but in binary, it's eight binary ones. Now we'll talk about hexadecimal later. That's FF in hexadecimal. But 255 in decimal equates to eight binary ones. We both deserve it all",
    "transcript_keywords": [
        "binary",
        "power",
        "current",
        "states",
        "cables",
        "equals",
        "cable",
        "understand",
        "decimal",
        "combinations",
        "analogy",
        "understand binary",
        "set",
        "read",
        "times",
        "end",
        "start",
        "calculator",
        "notice",
        "equates"
    ],
    "transcript_entity_values": [
        "first",
        "six",
        "zeros",
        "01",
        "three",
        "255",
        "only two",
        "32",
        "000",
        "001",
        "only 10",
        "seven",
        "third",
        "11",
        "five",
        "One",
        "two",
        "four",
        "64",
        "256",
        "eight",
        "zero",
        "second",
        "ASICs",
        "16 plus eight",
        "16",
        "IP",
        "00 or 01",
        "Python",
        "Mac",
        "101",
        "32",
        "one",
        "Application Specific Integrated Circuits",
        "11",
        "FF",
        "CCNA",
        "Two",
        "five",
        "64",
        "eight",
        "111",
        "fourth",
        "0111",
        "16",
        "10",
        "128"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORDINAL",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORDINAL",
        "ORG",
        "CARDINAL",
        "DATE",
        "ORG",
        "DATE",
        "ORG",
        "PERSON",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "DATE",
        "DATE",
        "DATE",
        "CARDINAL",
        "ORDINAL",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL"
    ]
}