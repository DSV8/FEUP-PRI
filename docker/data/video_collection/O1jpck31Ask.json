{
    "id": "O1jpck31Ask",
    "title": "iPhone and Android WiFi Man-in-the-middle attack // PYTHON Scapy scripts for attacking networks",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2021-11-12T15:01:04Z",
    "video_url": "https://www.youtube.com/watch?v=O1jpck31Ask",
    "category": "Science & Technology",
    "tags": [
        "python",
        "scapy",
        "arp",
        "arp mitm",
        "arp mitm attack",
        "iphone",
        "apple",
        "android",
        "samsung",
        "android phone",
        "ios",
        "apple ios",
        "apple iphone",
        "kali linux",
        "ceh",
        "oscp",
        "wifi hacking",
        "ethical hacking",
        "scapy python",
        "scapy python3",
        "public wifi",
        "python scapy",
        "kali linux python",
        "scapy sniffing",
        "arp spoofing",
        "arp poisoning",
        "man in the middle",
        "scapy python pcap",
        "wireshark",
        "scapy in python",
        "scapy python script",
        "scapy python sniff",
        "man in the middle attack",
        "arp spoofing attack",
        "arp spoofing linux",
        "cisco",
        "ccna"
    ],
    "views": 342206,
    "likes": 15382,
    "comments_count": 370,
    "description": "Simple Python script to run a man in the middle attack on a WiFi network   You need to learn to code! Learn Python. Learn Networking. You are going to be very powerful and very scary if you combine knowledge of networking with Python scripting! But, do good.  Learn to code. Learn Linux. Learn Networking.  // MENU // 0:00    Introduction 1:01    Man in the middle attack 1:37    Network setup 2:02    iPhone Private MAC Addresses 2:44    ARP Posioning 3:11    Script overview 3:26    Linux IPv4 forwarding 4:22    Warning! 5:21    Kali WiFi Setup 5:44    Kali Script and command format 7:02    Run ARP MITM script 8:15    Issues with MITM attacks 9:15    Capture username and password 10:34  Follow TCP stream 11:10  Prove that MAC addresses have changed 13:15  What about Internet Traffic 13:55  VPN company advertisement warnings   // SCRIPTS // Python ARP MITM:   Playlist:   // SCAPY RESOURCES // Website:  Documentation:   // SCAPY INSTALLATION // sudo apt update sudo apt install python3-pip sudo pip3 install scapy  // SOCIAL // Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:  YouTube:    // SPONSORS // Interested in sponsoring my videos? Reach out to my team here: sponsors@davidbombal.com  python iphone android samsung arp wifi  wifi arp arp mitm mitm wifi wifi mitm python mitm python arp scapy python scapy ccna cisco routers ccna 200-301 python scripts kali linux linux kali kali linux 2021.3 kali linux 2021 oscp ceh security+ pentest+  Disclaimer: This video is for educational purposes only. I own all equipment used for this demonstration. No actual attack took place on any websites.  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #wifi #hacking #mitm",
    "description_links": [
        "https://davidbombal.wiki/arpmitn",
        "https://davidbombal.wiki/scapy",
        "https://scapy.net/",
        "https://scapy.readthedocs.io/en/latest/",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal"
    ],
    "transcript": "- Before we get started, this video is not sponsored by a VPN provider. In this video, I'm going to show you how to use a Python script to intercept traffic sent from a phone to its default gateway on a Wi-Fi network. In other words, if you went to a coffee shop and you're using their Wi-Fi network as an example, all your traffic sent to the internet would be captured by my Kali virtual machine or Kali PC, depending on if you're using bare metal or not with a Python script. Now there are applications out there that do this, but I want to show you that if you understand Python, if you understand how to write scripts using Python and Scapy, you can do a whole bunch of things. In this series of videos, I've shown you how to attack many protocols. I've shown you how to attack EIGRP, BGP, spanning tree, a whole bunch of protocols. And this is just another example of that, where I'm attacking ARP. ARP is used on ethernet networks. ARP is used on Wi-Fi networks. This allows you to run a man-in-the-middle-attack where you can see all traffic send from one device to another on the local segment or the Wi-Fi network. Now this script has taken a lot of time and a lot of effort to put together. If you enjoy these types of ethical hacking videos, if you enjoy these type of ethical hacking content, please consider subscribing to my YouTube channel, please like this video and click on the bell to get notifications so that you know when I upload a new video, that really does help me with a YouTube robots. Okay, without further ado, let me show you how you can intercept traffic using the script. (upbeat music) In this example, I'm running Kali within a virtual machine on a Windows computer. This Windows laptop is connected to the Wi-Fi network. This iPhone is connected to the same Wi-Fi network. By default, when sending traffic to the internet, as an example, or to another device on the network, the phone is going to send the traffic to either the device directly in the network or to its default gateway. So in this example, if I have a look at my Wi-Fi settings, you can see that I'm using a private MAC address. One of the updates that apple made to better secure iPhones, as an example, is to use random or private MAC addresses, which change all the time. Can see the IP address of this device is 192. 168.1.132, default gateway or router 192.168.1.249. So if this iPhone was sending traffic to a website such as, Facebook or Google or another website, it would send it to that IP address. And to do that, it will send a opera request onto the network requesting the MAC address of this device and then it will send traffic to that MAC address directly. So for this laptop to see the traffic sent from the iPhone to its default gateway, we going to run ARP poisoning and poisoned the ARP cache of both the phone and its default gateway, in other words, the router, so that traffic is sent via the laptop to the default gateway. So rather than traffic going directly to its default gateway, the phone will send traffic to the route of via this Kali virtual machine. Now, the script that we using is fairly complicated, but we've put a lot of comments in the script to make it easier to understand. So hopefully by reading the comments in the script, it will make a lot of sense to you. Most of the script is simply comments explaining what each line of code does. One of the things we need to do as an example is set up a Linux to forward traffic. So when traffic hits the Linux virtual machine or computer if you're using a physical device, we need to forward that on to the default gateway. So traffic needs to be bridged or forwarded through this virtual machine. And hence we've got the command ipv4.ip_forward=1 We want to forward traffic through the virtual machine. There's a whole bunch of other code here. It's a fairly complicated script, but hopefully the comments in the script will make it a lot easier to understand. Now, there are examples online showing you how to run a man-in-the-middle-attack using Python and Scapy. But a lot of them don't seem to work properly with devices such as iPhones. So this works with an iPhone and various other devices. We were able to intercept all traffic for all devices that we tested. Let me know if it works for you. Now, as always, a warning. What I'm sharing here is for educational purposes only, please do not use the script in Starbucks or some other Wi-Fi network and get into trouble. You should only use scripts such as these or other ethical hacking tools ethically. So only test this on Wi-Fi networks that you own, only test this on Wi-Fi networks that you have permission to attack. In this example, I'm using my own Wi-Fi network. So all the devices that I'm using here are devices that I own, my iPhone, my laptop, my Wi-Fi network. I need to say this, unfortunately, just to be on the safe side. So disclaimer, this is for educational purposes only. Do not go out there and get into trouble. Don't do something that you shouldn't do. Make sure that you only test this on networks that you own or have permission to attack. Okay, so once again, I've put a lot of comments in the code here. I'm not going to explain every single line of code because that'll take a long time. So what I'll do is copy the script. In Kali, this is running within a virtual machine. I'll go to manage virtual machine settings. And what you'll see is I've breached the network adapter to the Wi-Fi network within this laptop. This laptop is only connected to the Wi-Fi network. It's connected to no other networks. Okay, so in Kali, I'll open up a terminal and I'll create a script called arphack1.py. And I'll paste that script in, Ctrl + X, and I'll save that script. Now notice the format of the command that you need to use. If you don't do that, you'll be prompted to use the right command. So as an example, I just type python3 arphack1.py, the script's going to tell us that we need to use sudo when running this command. So we've tried to add a lot of help information to make it easier to run the script. And notice we told that we need a valid IP range. So the correct format for my local network is going to be this command, sudo python3, the script name, whatever you decide to call that, -ip_range and the range that you're going to use. So I'll paste that in. This is my local subnet. You can see that once again on the iPhone 192.168.1.132 is the IP address. You can see the Subnet Mask, 255.255.255.0 is a slash 24 mask. Router is 192.168.1.249. So I'll press enter. Scrolling up. There's the command that we used. We can see that the sub-net that's going to be checked is 192.168.1.0/24. That's a valid range. Linux forwarding of traffic has been enabled. We've got a little banner here and then it shows us various MAC addresses and IP addresses that have been discovered in the network. Okay, so the IP address of this device is 192.168.1.132. That's this device. And the MAC address has been correctly discovered. MAC address here is BE:87:55:CE:46:DF. So that's the private MAC address that's been discovered. So I'm going to use the command 25 because that's the device that I want to intercept. So traffic for 25. And we've told that information has been written to pcap file. What I'll do now is run wire shock and see what traffic we capture. So I'll get wire shock to (indistinct). You can see a whole bunch of traffic is being intercepted, but for this test, I'll use Telnet. Now, one of the problems with man-in-the-middle-attacks is a lot of traffic today is actually encrypted. But just to prove the point I'm going to use Telnet, which has clear text, and I'm going to connect to the router. As you can see now, traffic is already being captured. And if we look at the wire shock capture, we can see the actual Telnet information. So hopefully what we'll see is a prompt. And there you go. Username verification, that's what we see on the phone. And we asked to enter our username. I'll enter the username here, which is Peter. And I'll enter a password of Cisco, this a Cisco router. Obviously you don't want to use a password like that. Show version, that will show us the version of operating system that this router is using. That has all been captured by wire shock running within Kali, within a virtual machine on this Windows laptop. Traffic is being sent to via that laptop. Now, can we see the username? We can see here that we are prompted for username and we can see P-E-T-E-R as a username. And then we can see the password prompt, and then we can see the password of Cisco displayed there. Now that's not so easy to read, so I'll right-click and then say, follow TCPStream. And what we can see now is the whole TCPStream. Now, what you'll notice is the username is repeated and that's because we are capturing traffic from the phone to the router, and then from the router back to the phone. So we see both the packet that was sent P and the echo. So what you may notice is there's different colors here. We've got blue and red. So P being sent to the router and then red is the echo back. So we've got the username Peter. Password wasn't echoed back by the router so we see the password just once, Cisco, and then we see the output of the router. Now this is my real home router. So I won't type every command that's possible and show you the passwords, et cetera, of my real accounts. This is just a quick fake account. But show IP interface brief, shows me the interfaces on this router. And once again, if I typed follow TCPStream, I should see all the information about the version of operating system that the routers is using. Plus here we go, show IP interface brief, and the interfaces on the router. I have successfully been able to capture traffic from this phone to the router on the local segment. So this is an ARP attack, traffic from the phone to the router is going through the Kali virtual machine. And let's just prove that all connect to the router, directly. And I'll log in with my proper username, David. Show ARP will show us the ARP cache on the router. And if we look for 192.168.1.132, which is the phone, what you'll notice is the MAC address of the phone is different to the MAC address that the router is seeing. So the ARP cache of the router is saying that this IP address uses this MAC address, but that's actually not the MAC address of the phone. So to prove this let's stop our script. So I'll press Ctrl + C to break the script. And then on the router, show ARP, and I'll just include 132. That MAC address should change to this MAC address. So what I'll do is open up a browser and go to a website such as kali.org. Now it may take a while for the ARP cache to timeout. Notice it's still using the old MAC address. If I type clear ARP and let's just press Enter there. Show ARP pipe include 132. Notice the MAC address is updated. Now it's showing the correct MAC address of BE ending in DF. ARP caches can take a while to be flushed and to be updated. But in that example, notice the MAC address has successfully updated, but let's run the script again. And we want to do 132. So in this case, it's 24 on the router. Notice MAC address has changed. So the router is no longer sending traffic to the MAC address of the phone, it's sending it to the MAC address of the Kali virtual machine. Okay, so there you go. I've now shown you how to poison the ARP caches of devices in your network to run a man-in-the-middle-attack so that a Kali virtual machine can capture all the traffic sent from a phone to its default gateway. Now this will apply to traffic sent to the internet. The problem that you're going to encounter is that a lot of traffic sent from a device to the internet is encrypted. We typically use HTTPS or SSL these days or other encrypted protocols. So even if you capture the traffic using a man-in-the-middle-attack, doesn't mean that you're going to be able to read all the traffic sent to the internet because the traffic is encrypted. And this is why you have to be careful with some of the advertising of VPNs that you see on the internet. Some people will say, you should use a VPN because you need to be protected when you're in a cafe and you using the Wi-Fi hotspot. There's some truth in that because I am capturing the traffic, but the traffic is encrypted. So VPN doesn't always help you because generally traffic today is encrypted. Very few websites today are using HTTP. Most are using HTTPS. You don't want to connect to websites that are using HTTP or use protocols, such as Telnet, which are clear texts. You want to use SSH or HTTPS or encrypted protocols. Now VPN can give you an added level of protection, if you like, because you now sending SSL down a VPN connection. It's all about trust. Do you trust the Wi-Fi network? Do you trust that they won't be people like me hanging around trying to intercept your traffic? Or do you trust the VPN provider? I think for a lot of us, we would prefer to trust a VPN provider, some of the big ones and send out traffic to a VPN provider rather than just using the Wi-Fi network with no added protection. But be aware that traffic is encrypted. So these man-in-the-middle- attacks aren't as potent or as powerful as they used to be. (upbeat music)",
    "transcript_keywords": [
        "MAC address",
        "traffic",
        "MAC",
        "WiFi network",
        "address",
        "ARP",
        "router",
        "script",
        "network",
        "Kali virtual machine",
        "WiFi",
        "virtual machine",
        "Kali",
        "Kali virtual",
        "phone",
        "Python",
        "Python script",
        "default gateway",
        "private MAC address",
        "virtual"
    ],
    "transcript_entity_values": [
        "python3",
        "Starbucks",
        "these days",
        "Linux",
        "Facebook",
        "SSH",
        "25",
        "192.168.1.249",
        "192.168.1.132",
        "Cisco",
        "Wi-Fi",
        "ARP",
        "VPN",
        "Router",
        "One",
        "SSL",
        "iPhones",
        "BGP",
        "192",
        "YouTube",
        "iPhone",
        "Google",
        "today",
        "David",
        "IP",
        "Notice MAC",
        "Kali",
        "Python",
        "EIGRP",
        "one",
        "Linux",
        "HTTPS",
        "MAC",
        "192.168.1.249",
        "132",
        "TCPStream",
        "ARP",
        "Cisco",
        "Peter",
        "DF",
        "24",
        "192.168.1.0/24",
        "VPN",
        "the Wi-Fi",
        "TCPStream",
        "Windows",
        "Wi-Fi"
    ],
    "transcript_entity_types": [
        "PRODUCT",
        "ORG",
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "LOC",
        "ORG",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "DATE",
        "PERSON",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "PRODUCT",
        "CARDINAL",
        "GPE",
        "ORG",
        "ORG",
        "DATE",
        "CARDINAL",
        "PERSON",
        "PRODUCT",
        "GPE",
        "PERSON",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "NORP",
        "PRODUCT",
        "ORG"
    ]
}