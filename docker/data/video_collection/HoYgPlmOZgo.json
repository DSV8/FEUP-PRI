{
    "id": "HoYgPlmOZgo",
    "title": "tshark and Termshark tutorial: Capture and view wireshark captures in a console",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2019-07-08T19:22:00Z",
    "video_url": "https://www.youtube.com/watch?v=HoYgPlmOZgo",
    "category": "Education",
    "tags": [
        "wireshark",
        "tshark",
        "termshark",
        "wireshark tutorials",
        "wireshark 2019",
        "wireshark download",
        "wireshark filters",
        "wireshark basics",
        "tshark cli",
        "tshark tutorial",
        "termshark tshark",
        "wireshark tshark",
        "tshark vs wireshark",
        "hacking",
        "linux",
        "wireshark tutorial",
        "ethical hacking",
        "ethical hacking course",
        "kali linux",
        "kali",
        "kali linux tutorial",
        "kali linux install",
        "kali linux course",
        "gns3",
        "CCNA",
        "INE",
        "CBT Nuggets",
        "CCNA Study",
        "Cisco Training",
        "cisco ccna",
        "ccna 2019",
        "gns3 wireshark",
        "packets",
        "tcp",
        "ccnp",
        "ccna"
    ],
    "views": 44261,
    "likes": 1010,
    "comments_count": 41,
    "description": "Get the course for $10 on Udemy:  or GNS3 Academy:  This is a tshark and Termshark tutorial: It is now possible to capture and view Wireshark captures directly in a console window. No need for a graphical user interface (GUI) - you can do all of this directly within a Linux terminal or console.   tshark and Termshark installation: ============================== tshark: apt-get install tshark  Termshark: wget  tar -xf termshark_1.0.0_linux_x64.tar.gz cd termshark_1.0.0_linux_x64 install termshark /usr/local/bin  How to use:  tshark -w tshark1.pcap  termshark -r tshark1.pcap   Help: termshark UserGuide:   Course overview: Do you know network protocols? Do you know how to hack? Want to learn wireshark and have some fun with Ethical hacking? This is the course for you:   Learn Wireshark practically. Wireshark pcapng files provided so you can practice while you learn! There is so much to learn in this course:  - Capture Telnet, FTP, TFTP, HTTP passwords. - Replay VoIP conversations. - Capture routing protocol (OSPF) authentication passwords. - Troubleshoot network issues. - Free software. - Free downloadable pcapng files. - Answer quiz questions.  The course is very practical. You can practice while you learn!  Learn how to analyze and interpret network protocols and leverage Wireshark for what it was originally intended: Deep Packet Inspection and network analysis.  Protocols we capture and discuss in this course include: - Telnet - FTP - TFTP - HTTP - VoIP - OSPF - EIGRP - DNS - ICMP  Who this course is for: Network Engineers Network Architects Ethical hackers Networking Students  #wireshark #termshark #tshark",
    "description_links": [
        "http://bit.ly/2IXZnn8",
        "http://bit.ly/2J4PzIb",
        "https://github.com/gcla/termshark/releases/download/v1.0.0/termshark_1.0.0_linux_x64.tar.gz",
        "https://github.com/gcla/termshark/blob/master/docs/UserGuide.md"
    ],
    "transcript": "- Now this is a sample from my Wireshark course. You can buy the course using the link below for only $10. So you could buy it from Udemy, GNS3 Academy, as an example. For only $10, you'll be able to access my Wireshark course, but I'm gonna show you something that I think is really cool in this video, which is namely tshark and Termshark. I'm gonna show you how you can capture packets off the network and view those packets without a graphical user interface. So you can now open PCAP files simply through a console. You don't need a graphical user interface to do that. So let's get started. (upbeat techno music) In this video, I'm gonna show you how to use tshark as well as Termshark. tshark to capture traffic off the wire, and Termshark to view Wireshark captures through a terminal. Sometimes, you don't have access to a GUI interface. Sometimes you want to be able to capture packets off the wire using a terminal, and tshark is great for doing that. As an example, you may run a capture application on a Linux server or a Linux host, which doesn't have a graphical user interface installed. You could, as an example, run it on a Raspberry Pi, so capture traffic off the wire, using a Raspberry Pi, but do that without a graphical user interface. So simply using a console, capture the traffic. And you may wanna be able to view those Wireshark captures through a console, so that's what I'm gonna demonstrate in this video. In this GNS3 topology, I've got an Ubuntu host. This Ubuntu host does not have a graphical user interface, so if I type clear, all I get is a console connection. There is no graphical user interface. So as an example, if I want to view the interfaces on this device, I'm doing that through a CLI. I'm not doing it through a graphical user interface. All I have is a console connection. So as an example, I'll edit this file so that the host gets an IP address from a DHCP server. What I'll do is close that console connection down, or terminal down, stop the Ubuntu client, start it up again, open up a console. Notice here I now have an IP address that has been allocated to me via DHCP. The NAT cloud is allocating IP addresses to the Ubuntu client. This is a built-in GNS3 switch. This is a Cisco switch. This is a Cisco router running within GNS3. So the problem here is I can't run a graphical Wireshark application. I need to run Wireshark directly through the console. So the first thing I'm gonna do is, so the first thing I'm gonna do is type apt-get update to update my Ubuntu references. Okay, now that my Ubuntu references have been updated through apt-get update, what I'm gonna do is install tshark. So to do that I type apt-get install tshark. Say yes to install the application. So what this is doing is connecting to the Ubuntu cloud and essentially downloading and installing tshark on this Ubuntu client. I'm asked, \"Should non-superusers \"be able to capture packets?\" I'm gonna say yes, but in this example I'm actually logged in as root, so I'm simply gonna capture using root. So I've now installed tshark. I can start it by simply typing tshark. And notice it's capturing packets on ethernet zero. It's essentially capturing packets on this interface and what we're seeing at the moment are spanning tree messages that are sent by the switch. What I'll do on the router is enable OSPF, and we should be able to see OSPF updates. So we'll get this device to use DHCP, and then enable OSPF on all interfaces. It's now received an IP address through DHCP. Notice we can see information such as spanning tree ARP messages and so forth. Now that's not great, that's just showing me the updates in real time. So I can see, as an example, DHCP Offer, DHCP Request. So what you may find more useful is to push that to a file, so write it to a file, in this case tshark1.pcap, as an example. So that's capturing the traffic, and dumping it into that file. So as an example, show IP OSPF interface brief. We're running OSPF on this router now. If I type clear, IP OSPF process and clear all the OSPF processes, OSPF messages will be captured. Let's enable EIGRP. So E-I-G-R-P, and I'll enable that on all interfaces. Hopefully this tshark application is now capturing messages including spanning tree, including CDP, DTP, EIGRP, OSPF and so forth. So I'll stop that by pressing Control + C, and notice I now have a tshark.pcap file. Now I want to be able to view that. I could copy that to my Windows computer, as an example, or my Mac, or a Linux computer with a GUI, and then open that up with Wireshark, but let's view the files directly through this console. Okay, so let's install Termshark. The first thing I'm gonna do is install Wget. This is gonna allow me to download an application from GitHub. I could use Git, but I'm simply gonna use Wget. What I'm gonna do now is use Wget and connect to GitHub and download Termshark. I'll put the links below this video. This is essentially a GitHub page, and I'm downloading Termshark from GitHub. So here's the GitHub page for Termshark, a terminal UI for tshark, and we can see a little bit of information about the application. You can also do a clone or download. So I'm simply downloading this file from GitHub. So ls shows me that I've got the file downloaded. The next thing I'm gonna do is unzip or untar that file, so untar the file. There it is. I'm gonna move to that directory, and I see Termshark. So what I'm gonna do is install Termshark to user local bin, and then I'm gonna go back to my home directory, so back in my home directory of root. I'll clear the screen. Notice I've got this file which I previously created by capturing traffic off the network, so what I can do now is type Termshark read tshark PCAP file. So I'm gonna read my PCAP file. And what you can see through a terminal window now is the traffic that's being captured. So as an example, I could filter for OSPF and apply my filter. Notice I see my OSPF messages. So as an example, this is the source MAC address of the router. Show interface gigabit zero zero. Notice MAC address of router. IP address of router. And that's what we see over here. Destination is 224.0.0.5, which is the multi-cast address for OSPF. There's the layer two MAC address. Open up the IP header. I can use my Up and Down Arrow keys. Use Enter to open this up. Notice DSCP is set to CS6, very important traffic. Scrolling down I can see that the protocol is 89, which is OSPF. So at layer four, notice we have OSPF, press Enter there. Press Enter here. The version of OSPF is version two. This is a hello packet. Source IP address is this, as we saw over here. IP address of router. Area is the backbone area. So I can see all the traffic that I would normally see through a graphical user interface directly through a terminal. Notice once again, if I quit outta here, I am in a terminal. There's no graphical user interface here. It's a simple terminal. But Termshark allows me to read what Wireshark captures through a terminal window. I'll filter for EIGRP. Notice there's our EIGRP messages. I can go up and down through my messages, use the Up and Down Arrows if I like. I can press Tab to jump from one window to another. So Tab takes me down here. Tab to the first window, second window. Press Enter to collapse that, Enter to open it up. I can press Forward Slash, and that'll allow me to change the protocol, so to STP as an example. Now I can see spanning tree messages. Once again, click any if I like, EIGRP, click Apply. There's my EIGRP messages, once again. Source IP address, destination, 224.0.0.10. Well-known multi-cast address for EIGRP. So I'm using my mouse but I could use a keyboard, so Up and Down keys, Enter key, Enter key again, Enter key here to see parameters. Notice they're my K values. Enter key to see software version information. Enter, Up key, Enter, press Tab, and now I can go up and down through the protocols. Forward Slash, I could specify, let's say STP again, and click Apply. Here's my spanning tree protocol, so I can see the root identifier, et cetera et cetera. So I'm not gonna bore you through all the options in this application. Have a look on GitHub, load of good examples and documentation on GitHub, but I'm hoping this has shown you a really nice application. You can run Termshark through a console and read tshark messages. tshark is great because I could put sniffers in different parts of my network and not have to use a application with a graphical user interface. I can also schedule it, so I could use cron just to schedule tshark to capture traffic if I wanted to. There are a lot of options with tshark, and Termshark is great because is allows you to view the tshark captures directly through a console. Okay, so I hope you've learned something. I hope you've enjoyed this video. If you have, please like this video, and please subscribe to my YouTube channel. That really does help me. (upbeat techno music)",
    "transcript_keywords": [
        "graphical user interface",
        "OSPF",
        "Termshark",
        "user interface",
        "graphical user",
        "tshark",
        "Enter",
        "interface",
        "Wireshark",
        "Ubuntu",
        "graphical",
        "user",
        "Wireshark captures",
        "EIGRP",
        "file",
        "console",
        "address",
        "Notice",
        "capture",
        "DHCP"
    ],
    "transcript_entity_values": [
        "first",
        "only $10",
        "Linux",
        "STP",
        "UI",
        "Mac",
        "EIGRP",
        "router",
        "Cisco",
        "GNS3",
        "two",
        "four",
        "Wireshark",
        "Wireshark",
        "Udemy, GNS3 Academy",
        "224.0.0.5",
        "zero",
        "PCAP",
        "NAT",
        "Tab",
        "second",
        "YouTube",
        "Git",
        "89",
        "IP",
        "Notice MAC",
        "Down Arrows",
        "224.0.0.10",
        "one",
        "OSPF",
        "Down Arrow",
        "GNS3",
        "MAC",
        "GitHub",
        "GUI",
        "Termshark",
        "Wireshark",
        "Windows",
        "DHCP",
        "CLI",
        "Forward Slash",
        "Control + C",
        "a Raspberry Pi",
        "CDP",
        "DTP"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "MONEY",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "PERSON",
        "ORDINAL",
        "ORG",
        "PERSON",
        "CARDINAL",
        "ORG",
        "ORG",
        "PERSON",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "PERSON",
        "PRODUCT",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "ORG",
        "ORG",
        "ORG"
    ]
}