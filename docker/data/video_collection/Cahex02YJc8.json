{
    "id": "Cahex02YJc8",
    "title": "What are clients, servers, protocols and ports numbers? | Free CCNA 200-301 Course | Video #4",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2020-07-27T15:29:19Z",
    "video_url": "https://www.youtube.com/watch?v=Cahex02YJc8",
    "category": "Science & Technology",
    "tags": [
        "ccna",
        "ccna 200-301",
        "ccna full course",
        "protocols",
        "port numbers",
        "port numbers in networking",
        "networking",
        "networking course",
        "networking basics",
        "network fundamentals",
        "computer network",
        "ccna course",
        "ccna 2020",
        "ccna networking",
        "ccna tutorial",
        "200-301",
        "free ccna",
        "free cisco",
        "new ccna",
        "cisco",
        "ccna exam",
        "cisco ccna",
        "pass ccna",
        "iphone",
        "iphone airdrop",
        "airdrop",
        "introduction to networking",
        "netacad",
        "ipv4",
        "ethernet",
        "ccna training",
        "ccna certification",
        "ccna study",
        "ccna routing and switching"
    ],
    "views": 91640,
    "likes": 2363,
    "comments_count": 154,
    "description": "What are clients and servers? Are they physical devices? Or are they performing a type of service? DavidBombal.com: CCNA ($10):  support the mission, join thisisIT:   Udemy CCNA Course:  GNS3 CCNA Course: CCNA ($10):   There are many types of nodes in networks today. Two of the most common are clients and servers. We will discuss the definition of a client and server in this video.  This is video #4 of my FREE CCNA Course 200-301 - a complete CCNA course for the new Cisco CCNA exam. I am going to be covering all the topics in the exam blueprint in this course.   I want to make this content practical and it will include a lots of labs and demonstrations to help you better understand topics on the exam.  The course will contain: - Videos - Labs using Cisco Packet Tracer - Quiz Questions - And more!  Menu: Overview: 0:00 What is a server? 0:21 What is a client? 1:00 Server examples: 1:42  Laptop acting as a server: 3:28 Network Automation: 4:10 What are protocols and ports? 4:45 Thank you to my supporters: 8:17  PDF with slides:   CCNA 200-301 Playlist:   ====================== Special Offers: ====================== Cisco Press: Up to 50% discount Save every day on Cisco Press learning products! Use discount code BOMBAL during checkout to save 35% on print books (plus free shipping in the U.S.), 45% on eBooks, and 50% on video courses and simulator software. Offer expires December 31, 2020. Shop now.  Link: bit.ly/ciscopress50  Boson software: 15% discount Link: bit.ly/boson15 Code: DBAF15P  CCNA Free CCNA 200-301 ccna 200-301 free ccna course network networking thisisit  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!    #ccna #ccna200301 #networking",
    "description_links": [
        "http://bit.ly/yt999ccna",
        "https://bit.ly/thisisitccna",
        "https://bit.ly/ccnafor10dollars",
        "https://bit.ly/gns3ccna10",
        "https://bit.ly/dbccna4",
        "https://www.youtube.com/playlist?list=PLhfrWIlLOoKPc2RecyiM_A9nf3fUU3e6g"
    ],
    "transcript": "- Now, in the definition of what a network is, we're told that a computer network is used for sharing resources between nodes, which are computing devices. In other words, we have devices that are sharing resources between each other, and there're two main devices that you need to be aware of initially, and that's a server and a client. Now, what is a server? Let's ask of the robots, once again. Alexa, what is a computer server? - [Alexa] In computing, a server is a computer program or a device that provides functionality for other programs or devices, called clients. This architecture is called the client-server model, and a single overall computation is distributed across multiple processes or devices. - Notice, a server is providing a service or functionality to clients, in what's called, a client-server model. Servers provide functionality to clients, and that begs the question, what is a client? Alexa, what is a client? - [Alexa] A client is a piece of computer hardware or software that accesses a service made available by a server. The server is often on another computer system, in which case the client accesses the service by way of a network. - Now, listen to that, that's very important to remember. A client accesses a service provided by a server. Typically, the server is a different computer or different computing device to the client across a network. We're going to access a service hosted by a server across a network. Here's an example of a server. Big server, right here. Inside here, are a lot of drive bays. Here's a hard drive. Here's another one, and another one, and another one, and I could continue. The whole idea of a server is to provide resources or functionality to clients. This server is big because we want a lot of storage, we want a lot of computing power and a lot of memory in a server, especially if we want to scale it up. If you've got thousands and thousands of queries from many many clients to a server, you want it to have the capacity, so memory, CPU, storage, to handle those queries, so hence big device. It needs to have the capacity to service the requests. If only one or two people are requesting a webpage from the server, that's not a problem, but if we've got thousands and thousands of requests, one server may not even be enough. Then we have distributed services, so we have a service such as a webpage, that's distributed across multiple servers. Google is an example, will have thousands upon thousands upon thousands of servers, to service the request from millions of clients. They will have many many servers, to service or provide a service to the clients. When you go to the Google website and you type in a request, that's querying databases and retrieving information from databases to give you a answer about some query that you've made, so the server is providing a service to a client. Now, you don't need to dedicated hardware like this to have a server, a client device such as, a laptop, can act as a server, so the role will determine how that device is acting. A physical laptop, such as this laptop, could be a client requesting a service from a server, but it could also be hosting a service. It may be running some kind of server and then sharing a file as an example, with another PC, so it's hosting a file sharing service. Clients access servers to make use of a service that the server is providing. A website will serve a web page to a client, which is then displayed on your computer, as an example. Later in the course, we're going to learn about network automation and network programmability, that's becoming really important. In that kind of scenario, you'll have one application or program, providing a service to another program. Typically, using what's called, an API or Application Programming Interface. We're going to ignore that example for the moment. We'll get to that later, where we've got machine talking to machine, basically application talking to application, one application interacting with another application. Let's for the moment, concentrate on physical devices. Now, a server as such as this server over here, one physical computer will be listening on different port numbers for different protocols. What is a protocol? It's basically a set of rules used for communication between devices. As an example, I'm speaking English here. Hopefully, you can hear what I'm saying, and hopefully you can understand what I'm saying because I'm using a set of conventions in my speech. In English, we speak a certain way. As an example, some languages will use numbers differently to English. The protocol that we're speaking here is English, so I will say, 21, but in a different language like Afrikaans, I'll say, (speaking in foreign language), which is basically saying, one to two, to denote 21. The way that words are pronounced or the way that numbers are pronounced, is reversed in a different language to English. The point is, you and I are using a specific protocol. We are listening to English as the transmission, and you can understand what I'm saying, but if I switched my language or my protocol and started saying, (speaking in foreign language), you might struggle to understand me unless you understand South African, or should I say, Afrikaans. The point is, is that a server doesn't just automatically switch like we do in our brains from one language to another, it has to listen on specific port numbers. Your ears are listening on the same frequencies for both English and Afrikaans, and then your brain just switches from one language to another. A server is not as clever as that, it has to listen on specific port numbers for specific protocols. As an analogy, here's an analog radio. Old technology I know, but notice here I'm not receiving anything because I'm not listening on a good port number, but as I tune to a specific port number, (gentle music) (radio interference) (slow music) (radio interference) (piano music) I can pick up a transmission, I have to be careful because of copyright what I transmit here, but that is a different radio station or a different protocol, (radio interference) (upbeat music) to say that radio station. Different radio stations transmit on different frequencies. Think of that as an analogy to what a computer server is doing. A computer server, like this, is listening on specific port numbers. If you want to get a webpage, your browser is automatically configured or programmed to talk to port 80 or to port 443. If you're using an application like FTP, the application is automatically going to talk to the server on port 21, and the server is listening on port 21. A server can run multiple services and provide multiple services to clients. Client-server model, a client requests something from a server, the server provides the file or the service to the client. (electrical dance music)",
    "transcript_keywords": [
        "server",
        "service",
        "client",
        "clients",
        "computer",
        "English",
        "computer server",
        "port",
        "Servers",
        "devices",
        "application",
        "network",
        "thousands",
        "device",
        "sharing",
        "sharing resources",
        "numbers",
        "specific",
        "port numbers",
        "listening"
    ],
    "transcript_entity_values": [
        "South African",
        "21",
        "Afrikaans",
        "80",
        "Alexa",
        "443",
        "API",
        "millions",
        "two",
        "Application Programming Interface",
        "only one",
        "CPU",
        "Google",
        "thousands upon thousands upon thousands",
        "English",
        "21",
        "one",
        "Alexa",
        "thousands and thousands"
    ],
    "transcript_entity_types": [
        "NORP",
        "DATE",
        "NORP",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "CARDINAL",
        "LANGUAGE",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "CARDINAL"
    ]
}