{
    "id": "x4AE5yOF9pE",
    "title": "Python nmap port scanner",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2021-03-15T16:50:07Z",
    "video_url": "https://www.youtube.com/watch?v=x4AE5yOF9pE",
    "category": "Science & Technology",
    "tags": [
        "python",
        "port scanner python",
        "port scanner",
        "port scanning",
        "port scanner download",
        "port scanning explained",
        "python tutorial",
        "python hacking",
        "wifi",
        "scanner",
        "wifi scanner",
        "python scan",
        "hacking",
        "hackers",
        "ethical hacker",
        "ethical hacking",
        "hacker",
        "hacking course",
        "learn hacking",
        "ethical hacking tutorial",
        "ceh",
        "kali linux",
        "oscp certification",
        "elearnsecurity",
        "ine",
        "ctf",
        "how to hack",
        "learn ethical hacking",
        "python wifi",
        "python 3",
        "learn python",
        "nmap",
        "nmap python",
        "nmap scan network",
        "nmap tutorial"
    ],
    "views": 94258,
    "likes": 3284,
    "comments_count": 241,
    "description": "Learn how to create both a Python sockets and a Python nmap port scanner. These are the beginning of a journey into Python Ethical hacking.  ================ Scripts using regex: ================ Socket method:   nmap method:   ==================== Scripts using IP address: ==================== Socket method:  nmap method:   Menu: Python port scanner nmap and sockets: 0:00 This is a journey: 0:20 Sockets on Windows: 1:09 Download and install Python: 1:40 Run python socket port scanner: 2:40 Test against a web server: 4:07 Timeout to check connection: 5:00 Kali Linux example: 5:25 Test sockets Python script on Kali Linux: 6:06 Catching mistakes: 6:42 Sockets Python Code: 7:08 nmap script on Kali: 7:38 Troubleshooting nmap issues: 8:18 Python nmap port scanner: 9:22 Comparison of the scripts: 10:04 Sockets script explanation: 10:50 nmap Python script explanation: 13:25  ================ Connect with me: ================ Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:  YouTube:    ================ Support me: ================ DavidBombal.com: CCNA ($10):   Udemy CCNA Course:  GNS3 CCNA Course: CCNA ($10):   ====================== Special Offers: ====================== Boson software: 15% discount Link: bit.ly/boson15 Code: DBAF15P  nmap python nmap nmap scan nmap scanner python hacking python python wifi python network scan python port scanner port scanner port scan python scanner python scan oscp  elearnsecurity  oscp certification ethical hacking ceh oscp ine try hack me hack the box hacking ethical hacker ctf for beginners  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #python #nmap #hacking",
    "description_links": [
        "https://github.com/davidbombal/red-python-scripts/blob/main/port_scanner_regex.py",
        "https://github.com/davidbombal/red-python-scripts/blob/main/nmap_port_scanner.py",
        "https://github.com/davidbombal/red-python-scripts/blob/main/port_scanner_ip_obj.py",
        "https://github.com/davidbombal/red-python-scripts/blob/main/nmap_port_scanner_ip_obj.py",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal",
        "http://bit.ly/yt999ccna",
        "https://bit.ly/ccnafor10dollars",
        "https://bit.ly/gns3ccna10"
    ],
    "transcript": "- In this video, I'm gonna show you how to create a basic port scanner using Python. I'm going to show you two ways to do this. The first method is to use a built in function within Python and the second method is to use nmap. You can use the sockets method directly on Windows or within Kelly. If you want to use the nmap script, you have to install nmap. Now, please note these scripts are very simple. I'm hopefully gonna be taking you on a journey. We're gonna start with simple Python scripts, and then we're going to make them more and more powerful. Learning Python can really open doors for you. Doesn't matter if you wanna be an ethical hacker. As an example, you want to write a fencer scripts that can break into networks. So you wanna be part of the red team, or if you wanna use Python to make sure that there aren't vulnerabilities in your network. So you wanna be part of the blue team. Or if you just wanna become a better developer. It's really well worth your time learning how to code in Python. Okay, let's get started. (upbeat music) I'll demonstrate the first script in Windows, and then I'll show you what it can do on Kelly. You're gonna get similar kind of results, whether you use the sockets method or you use nmap. So on Windows, I'll open up a command prompt. In my example, I've stored my scripts in the downloads Python directory. Here's my port scanner nmap Python script and my port scanner socket script. So the version of Python that I'm using, and I can verify that by using the command Python dash dash version is 3.9.1. You can download Python from the python.org website. So if you haven't got Python installed on Windows, go to python.org, go to downloads. And in this example, I could download Python 3.9.2. It's a very simple installation. Now, note this is really important. What you're gonna wanna do is you're gonna wanna click this option, add Python 3.9 two PATH. So make sure that install launcher for all users is selected. Make sure that add Python two PATH is selected, and then you can click install and click yes to install the software. Software is now installing so you just have to wait for that installation to complete. Installation has completed, so I'm gonna click close. So back in my command prompt, if I typed Python dash dash version, my version is now Python 3.9.2. I'll clear the screen. DOR once again, shows me my two scripts. I've got my nmap scanner and my socket scanner. I'm gonna type Python portscanner, press Tab because I wanna run the portscanner of sockets application. Script runs, we can see some details about the script, but the important part is enter the IP address that you wanna scan. It's gonna be 192.168.248 in my example. This is once again, a very simple scanner. Notice I'm running it on Windows. All I installed was Python. This is a device in my network. So I press enter, the script checks that I've entered a valid IP address, which I have. And then it asks me the range of port numbers to scan. So in my example, I'll say 20 to 24, for example and press enter. As you can see here, port 22 and port 23 are open. That is a switch in my network. Port 23 is SSH, port 23 is Telnet. I shouldn't be running Telnet on devices today. So that tells me that there's a problem. Let's run the script again, I'll scan the same device. This is a device in my local network, but you could scan a device on the internet if you wanted to. Let's specify a range such as 80 to 80. And as you can see, that port is open. I'm running a web server on that switch. I shouldn't actually be doing that. Now, I could ping a website. So let's say davidbombal.com. IP address of that website is this. So let's test the script against that website. This is a public facing website on the internet. So 217.160.069. Is port 80 open on that website? And as you can see, it is open. Now you could run the script against many, many ports, but be careful doing that 'cause it'll take a long time. So if I scan my local switch once again and scan ports 20 to 80, that will take time because it's gonna try and connect to every single port and see if it's open. Now, if we look at the actual script, what the script has been written to do, and I'll talk about more of the details in a moment is it's using a timeout of 0.5 seconds. So half a second is the amount of time that it takes to connect to a port and see if it's open. So if you use a long range or a wide range of port numbers, it's gonna take time to scan those ports. But in this example, we can see that on the switch port 22, 23 and 80 are open. Now you may prefer to run this on Kelly, Linux or on a Linux server. So I'll log into my Kelly Linux server. This is running as a virtual machine on Windows. So I'm actually demonstrating everything on this Windows laptop, running within Windows and now running within Kelly. Alice here shows me that I have no script so I'll create a script called portscan-sockets.py And what I'll do is copy the script into Kelly, Control + X to save that. So I've used nanobot Bur you could use VI or something else to edit the script. But once again, if I type Python3--version, you can see that I'm running 3.9.1. You should be using Python 3 today. So I'm using Python 3 in this example. In this case, I'm using the latest release of Kelly at the time of this recording 2021.1, but let's say Python3 portscan-sockets.py. I'll scan the same switch and I'll use ports 20 to 25 just to demonstrate that it also works on Kelly. Now, the script has been written so that if you make a mistake, so you put in the wrong IP address. So you put in your IP address something like this as an example, it's gonna tell you that you've made a mistake and you need to fix the IP address. Same with ports, if you do something like this, it's gonna ask you to use the right format. So 20 to 80 as an example. So the script is once again using sockets within Python. So the actual code is very, very simple, but what I've done to try and make it better for you is I've put a lot of comments on the code. So most of the script is just comments. Rather than me trying to explain every single line and making this video very, very long, I've put a link in the description and pin comment on this video so you can download the script from my GitHub and have a look at it. And there you go, you can see that port 22, 23 and 80 are open on the switch. But that's the first script, but you may prefer using nmap. Now to run the script, you need to install Python3-pip if it's not installed and installed Python-nmap. So if I copy the script onto my Kelly server, I'll clear the screen. I've currently got this portscan sockets script, but let's create a portscan and let's call this nmap.py. And I'll paste that script in Control + X, Y to save. So I've got two scripts now, let's run this script. So Python3 portscan-nmap.py. Notice we're told that this command is not a valid. I need to install nmap. Now in map is installed by default in Kelly. And I'll just point that to more. So I've got nmap installed, but I need to use the Python version of nmap. So I need to use that pip (indistinct). So let's see if pip is installed on this Kelly server. So clear the screen, and I'll paste that in. Notice we're told that pip is not installed. So I can use this command to install it. So I'll select that and right click and paste it in. So sudo apt install Python3-pip, I'll put in my Kelly password and say Y to install pip. Pip is now installed so I can use the command pip install Python-nmap. So pip is installed so hopefully I can run portscan-nmap.py. And there you go. So I'll scan the same device, similar port range, but notice here, we're getting more information. The nmap script is more powerful. It's telling us if a port is filtered or if it's closed or if it's open. And as you can see the port 22 and 23 are opened. If I run that script again, and I did say 20 to 80. This tells you if a port is blocked once again or if it's filtered or if it's opened. And all you need to do now is wait for that script to run. So while that's running, let's have a look at the script. The main difference between the two scripts is this last portion where I use either nmap, or I use basic socket port scanning. Nmap is more powerful, but it does require that you have nmap installed. Most of the first part of both of these scripts is the same, very, very similar. Once again, not gonna spend a lot of time going through all the details. There's a lot of comments in the scripts to help you understand what every single line does. You could strip the comments out as an example, and then your script will be very, very small. But one of the issues I often see with scripts on the internet is they don't explain what they're doing. They just have the code. So I've tried to give you a lot of information about what every line of the script does. So the first thing we're gonna do is import socket. This is required to make a socket connection to a device. In other words, connect to its IP address and port number. We are then importing regular expressions. Regular expressions are used to allow us to recognize an IP address. So once again, if you typed in your IP address incorrectly, the script would know that. So if I just typed in some random number here, it's gonna ask me to type in the IP address again because I've made a mistake in the IP address. So this regular expression is used to recognize IP version four addresses. At the moment, the script is only scanning IP version four addresses, but if you're interested, I'll create an IP version six version of this port scanner. Here is a port range. This regular expression allows us to specify the lowest and maximum port range. These two just initialize the port numbers, but we change those values later. Now, please note, this is a very basic script. It doesn't differentiate between faulted and closed ports. So if you've got an access list blocking traffic to a specific port, that's not differentiated in the script. Where's the nmap script allows us to determine the difference. This is a basic user interface. You could delete all of this if you wanted to. We are then asking the user to enter the IP address, and that's what runs over here. So I'll cancel that script and run it again. So that portion of it is where we asking the user to put in the IP address, something like that. We determined that it's a valid IP address. You can see that we printing that out here and then we breaking this while loop and then we have another loop checking for port numbers. So notice we told to put in the port range. So once again, I'll just do 20 to 25 and then when I press Enter, it actually connects to the device to determine if the ports are opened or closed. So while true, we checking the port range to make sure that the port range is correct and then we connect to the device using a socket object. Timeout is half a second. We connect to the IP address that the user entered and the port number, and then we grouped together the open ports so that we can print that information out later. Now, again, there are a lot of comments in the code to help you read this and understand what every line does. Have a look at the GitHub link that I've put below if you wanna download the script. On the nmap script, something very similar gets done. This is the nmap portion. We basically looping through the ports in the specified range. And then we are using this nmap command in the background to connect to the device to see if it's open. So we are basically scanning through a list of port numbers that the user specified and then connecting using nmap and then we either print the port status or if we can't access the port. Now this video is getting too long. So I'm gonna end it now. Use the links below to download these scripts. Please let me know if you enjoy this top of content. If you do, please like this video, please consider subscribing to my YouTube channel and clicking on the bell to get notifications. I'm David Bombal, wanna wish you all the very best. (upbeat music)",
    "transcript_keywords": [
        "Python",
        "script",
        "port",
        "Kelly",
        "nmap",
        "scripts",
        "Windows",
        "address",
        "nmap Python script",
        "ports",
        "open",
        "port range",
        "nmap script",
        "installed",
        "range",
        "download Python",
        "run",
        "simple Python scripts",
        "port numbers",
        "Python scripts"
    ],
    "transcript_entity_values": [
        "first",
        "2021.1",
        "six",
        "Linux",
        "Bur",
        "192.168.248",
        "Python",
        "Kelly Linux",
        "20 to 25",
        "SSH",
        "Nmap",
        "VI",
        "half",
        "Kelly, Control + X",
        "80",
        "two",
        "four",
        "Y",
        "second",
        "Kelly",
        "Tab",
        "YouTube",
        "3",
        "23",
        "today",
        "Kelly",
        "IP",
        "Windows",
        "Python",
        "3.9.2",
        "0.5 seconds",
        "one",
        "Learning Python",
        "Linux",
        "GitHub",
        "Alice",
        "Python",
        "3.9 two",
        "Control + X",
        "3.9.1",
        "python.org",
        "Windows",
        "20 to 80",
        "David Bombal",
        "Pip",
        "Port 23",
        "22",
        "20"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "PERSON",
        "CARDINAL",
        "PERSON",
        "PERSON",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORDINAL",
        "PERSON",
        "PERSON",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "GPE",
        "ORG",
        "WORK_OF_ART",
        "ORG",
        "PRODUCT",
        "TIME",
        "CARDINAL",
        "WORK_OF_ART",
        "GPE",
        "ORG",
        "PERSON",
        "WORK_OF_ART",
        "CARDINAL",
        "LOC",
        "CARDINAL",
        "ORG",
        "PRODUCT",
        "CARDINAL",
        "PERSON",
        "PERSON",
        "FAC",
        "CARDINAL",
        "CARDINAL"
    ]
}