{
    "id": "0f19JuhhQvM",
    "title": "Is it the end? (Or can YOU do something in 2024?)",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2024-01-09T14:30:00Z",
    "video_url": "https://www.youtube.com/watch?v=0f19JuhhQvM",
    "category": "Science & Technology",
    "tags": [
        "ccna",
        "ccnp",
        "ai",
        "ccie",
        "cisco",
        "free ccna",
        "ccna 200-301",
        "ccna training",
        "ccna certification",
        "cisco ccna",
        "ccna full course",
        "new ccna",
        "ccna course",
        "ccna exam",
        "devnet",
        "cisco devnet",
        "jncia",
        "juniper",
        "aruba",
        "devnet associate",
        "devnet cisco",
        "devnet certification",
        "python",
        "linux",
        "aws",
        "azure",
        "gcp",
        "cloud",
        "networking",
        "api",
        "vmware",
        "docker",
        "ccna study",
        "ccnp training",
        "ccnp study",
        "cisco devnet associate",
        "ccna routing and switching",
        "certs worth it",
        "ccna 2020",
        "cumulus linux",
        "arista",
        "cumulus",
        "ansible",
        "network+"
    ],
    "views": 96963,
    "likes": 2793,
    "comments_count": 258,
    "description": "What should you be learning in 2024 to be successful as a network engineer? Which skills and trends are most important. Or am I wasting my time because AI will take away our jobs?  // Free content // Webinars:  netlab:  Ivan's website: Website:   // Previous Videos // 2023 Network Engineer path to success:   // Book REFERENCE // EIGRP Network Design Solutions by Ivan Pepelnjak:   // Ivan Social // Website:  Twitter:  LinkedIn:   // Russ White SOCIAL // LinkedIn:  Twitter:   // David SOCIAL // Discord:  Twitter:  Instagram:  LinkedIn:  Facebook:  TikTok:  YouTube:   // MY STUFF //    // MENU // 00:00 - Coming up 01:02 - Story time 02:38 - Intro 04:01 - Network Engineer in 2024? 07:31 - Lets talk AI 14:09 - Chat GPT 18:07 - What is AI? 22:57 - What jobs are safe from AI? 23:43 - AI is a helping tool 26:37 - Top 10 Skills 2024 31:05 - Coding mediums 32:58 - Automating the setup 39:20 - More about the vendors 43:24 - Top 10 Skills 2024 47:11 - Are Certifications valuable in 2024? 49:59 - Jack of trades vs know it all 51:42 - Certificates 56:44 - Do market research 58:47 - Broad job market 01:01:33 - Walk your path 01:02:19 - Why networking? 01:04:20 - Lab project 01:06:51 - How do I get experience? 01:10:35 - Advice 01:12:14 - Go to Ipspace.org 01:14:54 - Outro  ccna linux devnet python ansible  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #ccna #python  #cisco",
    "description_links": [
        "https://www.ipspace.net/Subscription/Free",
        "https://blog.ipspace.net/tag/netlab.html",
        "https://www.ipspace.net/Main_Page",
        "https://youtu.be/Q9LZZ4ur-bU",
        "https://amzn.to/3RyWxIp",
        "https://www.ipspace.net/Main_Page",
        "https://twitter.com/ioshints",
        "https://www.linkedin.com/in/ivanpepelnjak/",
        "https://www.linkedin.com/in/riw777/",
        "https://twitter.com/rtggeek",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal",
        "https://www.amazon.com/shop/davidbombal"
    ],
    "transcript": "2024, if I want to get into networking, give me a path, give me skills that I should study. I'll just throw one out. We've always mentioned Linux, but perhaps you can like mention the skills, top five, top 10 skills that you think I should get. The one thing that people are always missing is understanding the fundamentals. Everyone thinks that configuring the boxes is the important thing. It's not. That's trivial. Once you know what you need to do, then it's just figuring out the right command syntax. If you know what you're looking for, every box these days has some help functions. Ivan, I always ask this question, but it's important because there's a lot of people watching in the beginning of their journey. Are they moving from say some other kind of sphere into into networking or whatever? Certs still have value in 2024? Absolutely. Ivan, I just want to stop right here and talk about your website, ipSpace. And there's been some changes and there's some good news for people who want to watch content for free, right? Ivan, before we even get started with the interview, you mentioned something offline about you were writing viruses when you were younger. Is that right? Yeah, I was probably like 16, 17. And let me add that this was a tightly contained proof of concept. I was always scared that the whole thing would escape in the wild. Yeah, we just wanted to, I was at the university at that time, we wanted to understand how things really work. And at that time, there were like two types of commonly used viruses. You remember when you still had to boot your PC with a floppy disk. And if that floppy disk had a virus, then that virus would be transferred. And then the next time someone would insert a floppy disk in that machine, the virus would be copied to the floppy disk. So we figured out how to do that. And the other one was, and that was really hard under the old MS-DOS because code was, oh no, it was relocatable, but not as easy as it is today. So, you know, the viruses you have where the virus attaches itself to an executable program. When you run that program, it finds some other program and checks whether that other program already has this virus. And if not, it attaches itself to that one as well. So that was also pretty easy to do. I was always scared that the whole thing would just escape and contaminate everything I'm doing, which would be a nightmare for me. Yeah, I'm glad you didn't do that because you might've ended up in jail and had a different path. Yeah, that would be a different podcast then. Everyone, it's David Bombal back with the amazing Ivan. Ivan, you've got to introduce yourself because people who are watching this video may have not seen our previous videos. And I always butcher your surname, but Ivan Pepelnjak, welcome. That was excellent. So you had years of practice, I can see that. That's right. So Ivan, tell us about yourself. You've been in networking for about two years, is that right? Two and a half probably, on and off. I started in late 70s probably. In those days, we had the PDP 11s and the Vax 11 750s. And we were running a decknet between them on these lines that had the maximum speed of 2,400 bits per second. That's insane. That would be 300 bytes for you guys, which is like, what? No, 100 pixels in your JPEG image every second. Ivan, what I really appreciate about you and just for everyone who hasn't seen our previous videos, Ivan doesn't mince his words. He doesn't beat around the bush. And that's what I really appreciate. Ivan, you've been in this game for a long time. And we often like to laugh. Vendors come up with the new unicorn hype and one of the big elephants in the room at the moment is AI. I want you to cut through all the hype and all the nonsense and give it to us. What's your opinion about AI and should I become a network engineer in 2024? Well, let's start with the second part. Should I become the networking engineer in 2024? Obviously, I would say yes. I never regretted being one. It's an interesting life to say it politely. It's definitely not a nine to five job. So if you need a nine to five job, go into public service. Don't become a networking engineer. Then you will rubber stamp the papers and you will have an excellent life for the next 40 years. Anyway, networking engineer, do keep in mind that we're plumbers. So all the sexiness is gone from the network engineering. If you tell a girl you like because I'm a guy or whatever your preference is, hey, I'm a networking engineer. They will call you. Yeah, so whatever. Yeah, whatever. So it's not sexy. It's interesting. It's still interesting. It's more complex than most other IT disciplines. I was told. Not my words. Someone from HP once told me that they freely allow people to migrate between, you know, different disciplines within the company because you get bored after a while and they try to retain people so you can move from storage to servers to security to whatever. But he said, well, unless you're in networking and then they don't allow you to move because it takes so long to get someone fluent with networking that no, you can't move out. If you are that special type of person, then yes, absolutely become a networking engineer. If you're looking for an easy life, if you're looking for a sexy job, if you're looking for brand recognition, if you're looking to attract other people with your, you know, infinite sexiness, then maybe you should choose something else. I think the example we've used in the past is plumbing, electrical transmission, stuff like that. It's not sexy, but it's totally necessary. Yeah, and there will always be jobs for people doing that stuff because the world has to keep running. It's interesting. I was interviewing someone at Cisco and they were saying, you know, the world today, I mean, we don't have to say this, but it's obvious, you know, relies totally on networks. If the internet went down or an ISP got hacked, you know, you're talking food problems, you're talking about huge problems to like life. Well, I don't think it's that hard. So if an ISP gets hacked, okay, yeah, a lot of people will be inconvenienced and you won't be able to, I don't know, do e-banking, you won't be able to have your favorite food delivered in 20 minutes, but I don't think anyone would die of hunger yet. However, if someone manages to hack the mission critical systems like power transmission control or waterworks or trains, so, you know, one of those things that should never be connected to public internet, but we all know they sometimes are, or if someone hacks a hospital, then yes, you could get to loss of life, but that's not because of networking. That's because people are simply not prepared for lack of networking. I mean, hospitals were running, you know, and saving people for the last two or three thousand years, the last time I looked, and they only had networks for the last 10 years. So if they can't do their job without networks today, maybe there's something wrong with their processes. Let's talk about this, the elephant in the room, right? AI. I've seen people demonstrate AI talking to network devices, and I think a concern a lot of people have, especially young people, is it's pointless going into tech, whether that's cybersecurity, whether that's networking, whatever, because AI is just going to eat all the jobs. And the, what was it, the power looms will eat all the jobs and we'll all be jobless? Yep. Set whoever in 1800 something. And all the tractors will eat all the farmer jobs and all the farmers will be jobless. What else? Well, whatever, you know the drill. Yep. Every time there is this new technical innovation, there is someone, you know, earning money and today clicks and views claiming how it will take away all the jobs. And it turns out that A, you still need local presence. Yes. You know, some jobs are going to go away. For example, I was just listening to a PR podcast yesterday or so, and they were explaining how the UK royal family is using AI to judge the mindset of comments that people are making about them on social media. Yep. Interesting. So instead of, you know, a PR consultant sifting through the comments and saying, well, 30 of them are positive and 50 of them are negative. And people are saying that things, and honestly, anyone can do that. They are just using AI to do it. And obviously AI can process not 50 comments, it can process 50 million comments. But if your job is, you know, as simple as processing social media comments, then well, don't be surprised when you're replaced. On the other hand, if you need a plumber, someone still has to come to your house. If you need a device to be fixed, probably someone still needs to, you know, fix that stuff. And then there's the problem of the unknown unknowns, the things that we can't program or teach the AI how to do or whatever, because, you know, we just can't envision them. I was just writing a blog post today, making fun of that. You know, good old BGP, the what is it now, 30 year old protocol. Yep. It has one attribute that can be used as a metric. So it's, you should compare it among competing entries, but that attribute could be absent. And the original RFC didn't specify what to do when that attribute was absent. So do you ignore it? Do you assume absent equals zero or do you assume absent equals infinity? So simple things like that, if you don't tell the AI what to do, it will do something. Guess how many times it will be the wrong choice. Well, people also make wrong choices, but at least, you know, we have the capability to step back and recover from them. Because the problem with AI is always the training data, because, you know, that thing doesn't have intelligence. It's called artificial intelligence, but there's no intelligence in it. I mean, it's either statistics or it's decision trees or it's neural networks, which is just statistics on steroids, excuse me. And that thing needs to be trained. And it can be trained either adversarially where it teaches itself, but that works only if you have a very limited domain with very strict rules like chess, Go, things like that are a perfect example of that. You can't adversarially train an AI system to detect malware, unless obviously you are willing to create a system that will create all possible malware and then, you know, train the other system to, well, that's actually a good idea. There's your startup idea. Yeah. Great idea. Thank me later. Someone's probably already doing that. So unless you either are able to generate the training set using whatever strict rules, and we know that in real life, the strict rules simply don't work. Just look at self-driving cars. Or if you have a very large training set that's properly labeled, without that, you know, you can't train your model. And the big news of this year was that someone just trained the large language model on billions and billions of web pages and then sort of filtered out all the bad web pages that the model was trained on so that, you know, it doesn't start behaving like that for Microsoft's Twitter bots that got hardcore Nazi in what, 30 minutes or something. So they made better filters this time. But, you know, it's still statistics. It's still statistical manipulation of whatever it has ingested and has been trained on. There is no inside knowledge. There is no deeper understanding of the world. There is no model of how the world works. It's just 100 billion weights in a neural network. So, you know, it's quite easy to ask it, well, how do you configure something in Junos or Cisco or what have you. But as someone nicely said a while ago, it's like you would be asking that question to a sloppy over-hyped intern who never admits he's wrong. I mean, there's huge knowledge in there, but it's all statistics. So always with statistics, you have false positives, you have false negatives. You might get the correct answer. You might get an incorrect answer. Now, as a research tool, that's great. Yeah. So if you want to configure something on Junos and you've never seen Junos before, and you can ask ChatGPT, for example, well, how do you configure B-Lance or BGP or what have you on Junos? And it will tell you something that might or might not be correct. And I have many funny examples where it's not correct, but you know, remember sloppy over confident intern. So if you are willing to learn Junos by speaking with a sloppy over confident intern, well, be my guest. But anyway, you take that and then you start researching. At least you have a starting point. You know what to search for. And then you get some good examples and then eventually you figure out how to do things. A few of my personal examples, and I blogged about them. I asked chat GPT three and a half, I think, to generate some router conflicts for a simple three, four router network. It didn't get even the subnet masks on the loopback interfaces correct. So it looked okay, you know. If you would glance at it, oh, and some interfaces were present on one router, but not on the router on the other side of the link, you know, the small details like that. It looked great. ChatGPT 4 did a better job. Then the other problem I had was, now I want to wait for a process in Linux to complete. And so I said, well, you know, I am not a Linux guru, so let's ask ChatGPT. And he says, oh, no, that's not a problem. You just use the wait command and that's it. I tried that. And of course it says, well, you know, you can't wait on a process you don't own. Oh, thank you. You forgot to tell me that. And then I go like, well, how do I wait on a process I don't own? And it's like, oh, you write this C program. Oh, thank you. And in the end somewhere, some stick overflow or something. So I said, well, forget it. I'll start Googling. In five minutes, I got my answer. There is this command that can execute, can look at all processes and do whatever when a process is gone. And well, that was my solution. It's been my experience. I mean, I started, I asked ChatGPT to create some BGP configs and so it's OSPF configs. And it was, it's very similar. It looks 90% right. But when you dig into it, it's like, it makes some really bad mistakes. If you applied that config on a live network, it'd be a disaster. Well, you know, the worst one I had was I needed the signing of URLs of the AWS S3 URLs. There's this complex mechanism how you have to put this and this together. Then you run MD5 over it and you add something else to the hash and then you run MD5 over it. Disaster. I needed that in Perl. Okay. Hey, I made a choice 15 years ago because in those days Perl was the only language that could process PDF files with a library that you didn't have to pay for. So it was, I needed AWS URL signing in Perl. So I asked the ChatGPT, you know, to tell me how to do that. So, oh, no problem. You just install that library and it's all there and there you go. Installing that library took like three hours because it has so many broken dependencies. It just doesn't install. So I finally got it working and then I figured out that that library has everything apart from URL sign. So ChatGPT just hallucinated that code completely. I didn't give up. So I said, well, you know, now give me pure Perl code for this. It gave me some pure Perl code and it didn't work. Two hours later, I figured out that you have to take the binary MD5 cache and combine it with everything else. Whereas the codes ChatGPT gave me was perfectly correct. Only the caches were in hex, not in binary. You know how long I spent? And then I found some code that probably ChatGPT copied on GitHub. It was exactly the same code, only the function calls were correct. So just stepping back, the concern is networking could be eaten by AI. Your take on it is that that's not going to happen. Networking is perhaps too complex. There's not enough data, stuff like that. Sorry, go on. As always, the simple stuff will be eaten by AI. It will not be ChatGPT. It will be some sane solution that uses something like ChatGPT, but probably not that. You could use, you know, one of the smaller models as a language interface because parsing and understanding human language and intent of your question is hard. And if you can offload that to something, that's beautiful. But then you need some hardcore deterministic knowledge base in the background. You know, ChatGPT and friends can collect the meaning of your question and then pass that to some plugin and that plugin does the hard work. And then ChatGPT and friends glorify that back into English or Chinese or Spanish or whatever text. And that would work beautifully. The problem is that someone has to build that knowledge base. So I've seen at Cisco Live when I was there in 2023 in Vegas, they were talking about like AI on firewalls and stuff like that. So it looks like, I mean, there was talk about AI from Cisco and other vendors. It looks like, and Juniper have like AI Mist. So that's AI Wi-Fi. Well, that's a totally different thing. We had those things in 1990s. They were called expert systems. The problem is that the definition of AI is that AI is anything that does something that looks like human could be doing it. And gives me lots of money. Yeah. Well, that's a different story. That's why you need AI in your VC pitch. If you want to get VC money this year, it better have AI and ML in it and LLM today. Last year you didn't need LLM, but this year you do need it. And don't mention OpenFlow anymore, please. That's so outdated. What else should go into the VC pitch? Cloud. Cloud, yes. Must be cloud. Infinite growth. Total addressable market measured in trillions. There's another startup idea. Let's do something with IPv6 because it has trillions of addresses. So AI is anything, you know? Yep. It's decision trees. That stupid thing that tries to troubleshoot your wireless connection on your Windows PC and never gives you any useful answer. That's AI. Because someone built a decision tree saying, well, if this, then this. If not, then that, you know. Then you have decision trees with statistical weights and it's called fuzzy logic. Then you interview people and you ask people to draw the decision trees for you. And then you hard code the decision trees or maybe you add some weights to them. And that's expert systems. All that is AI, according to, you know, some definition of AI. And I have no idea what vendors are doing, but you know, it's easy to claim you're using AI. You just take, you know, something that Windows had forever and now you implement that on your wireless access point and you call that AI. You've been doing statistics for a long time. I think you mentioned previously you were looking at AI for many, many years, right? Well, I was programming in Prologue, which was the AI language of choice in 1980s. I even wrote a system that understood some tiny bit of natural language in Prologue in 1990s. So do you think it's just hype again? It's another hype cycle or is it, is there actually a change with large language models? The change is that they are so big and have so much knowledge that they seem to be useful to general population. You know, you keep throwing compute cycles and you have a hundred billion weights in your statistical model and something good will come out of that. But it's still not intelligence. It can generate things that look intelligent. If you give it good input data, then it will generate sane answers. But, you know, trying to ask it to find a new law of gravity, not today. So do you think like people are starting out or is that the AI is a big worry? AI is going to take a lot of the basic jobs. I think it's kind of like automation we've said in the past, right? It's going to take a very basic job. So where should I spend my time? Well, find something that AI cannot replace. It can either be, I don't know, creativity. It can be human relations. It can be bleeding edge stuff. It can be something that's too small to be automation or AI worthy. So some niche market. Yeah, it will become harder to find something that is not replaceable by AI. But, you know, as I always say, if it's easier than anyone else, everyone else is doing it as well. So why bother? So in networking, you become a more than expert and then you can use AI as a template or a beginning place, but you still got to have the intelligence to actually vet it and see if it's good enough to implement and troubleshoot, right? Well, you know, it depends on your level. So, yeah, if you're a beginner, then definitely AI is a nice helping tool. I use AI like constantly every day. It's called Grammarly. You know, my English is whatever it is and my English grammar is whatever it is. But that thing sanitizes my texts and sometimes I disagree with it and sometimes it's a sloppy intern. But it's pretty good most of the time and makes sane suggestions. So, yeah, I go with that most of the time. Well, now, of course, they are more AI enabled than they were. And so it takes away some of my writing style and I fight that. But that's a different story. So anyway, yes, absolutely use it as a tool to help you figure out where it is helpful, figure out what you can offload to AI. That's, you know, things like large language models that, you know, we can just take. They're on the net, you can use them, whatever. Or you could decide that you want to dig deeper and then you can actually start working on stuff and programming stuff like anomaly detection. You take, I don't know, net flow data or just interface usage data or whatever data you're collecting in your network and you just start running statistical methods on it and try to figure out, you know, that well, every Friday the traffic is higher than it is on Wednesdays. Then one Friday the traffic is not higher and that should immediately raise an alert saying, hey, what's going on? There's something wrong with the network. The phones aren't ringing yet, but there's something wrong. We had optical connections for how long? 30 years. I still haven't seen a system that would reliably tell you that your optical link will fail in three to five weeks. And it's like, we're measuring errors. The error rate is increasing. You see the trend, you see whether it's exponential or logarithmical. Do something with it. No vendor does that. That's amazing because I mean, with all the hype about AI and all the management stuff, it still feels like there's so much to do. Yeah, there's so many low-hanging fruits. You just have to, you know, figure out what data you're collecting, what you want to know. And then there's the hard part. What's the best tool for the job? So now I'm going to switch gears Ivan. We've mentioned this in the past, but perhaps for people who haven't seen the video, 2024, if I want to get into networking, give me a path, give me skills that I should study. I'll just throw one out. We've always mentioned Linux, but perhaps you can like mention the skills, top five, top 10 skills that you think I should get. Well, the one thing that people are always missing is understanding the fundamentals. Everyone thinks that configuring the boxes is the important thing. It's not. That's trivial. Once you know what you need to do, then it's just figuring out the right command syntax. And if you know what you're looking for, every box these days has some help functions. So second, as you mentioned, yes, Linux is everywhere. Arista is Linux, Nexus OS is Linux. Yeah, they are hidden behind the scenes, but they still Linux. Cumulus is Linux by definition. Junos is now Linux. It's called Junos Evolved because it evolved to be Linux. But IOS XE is Linux. You just can't see it, but you get the idea. Also, more and more the servers are integrated with the network. So people are running routing daemons on the servers. And once you start doing Kubernetes or any other virtual networking, then your server becomes a router. And most of those servers run Linux anyway. So getting Linux networking skills is definitely not a bad idea. I think we mentioned Git the last time. Absolutely. For me, Git would be like number two, probably, just after the fundamentals. Because even if you don't care about Linux, and I understand that, is there any reason why you wouldn't have your configuration files under version control? Yeah, good point. Whatever you do, as long as it's in text form, and it can be your blog posts, it can be your credit card numbers, but maybe not credit card numbers. At least don't push them to GitHub, please. Yeah, exactly. Yeah. Oh, don't push your passwords to GitHub. At least not to public repos. Please. Pretty please. Happens too often. Yeah. Anyway, whatever is in text form, if you don't have it under version control, you're doing it wrong. Because you will mess up things and you will make changes. And six months from now, you will have no idea why the stuff is not where it should be and why it has changed, and Git is a life saver. We mentioned in the past, programming, it sounds like it's just something that you have to learn. It's like one of those basic skills in networking. Yeah. Everyone should speak English, at least a bit. Sorry about that. It's easy for you. Stop laughing. Oh, yeah. So it's easy for me. It's so funny when you say about your writing, because I read your writing and I think, man, you write so well. So I don't know. You say that your writing is excellent. Well, that's totally due to Lady I Never Met and Russ White and one other Cisco guy. My first book was horrific, and that editor made miracles. And Russ White literally rewrote paragraph after paragraph after paragraph in my EIGRP book. So I'm eternally grateful to Russ for improving my English. That's amazing. Just for people who don't know, I've linked Russ's details below as well. He's also written a book recently. He's also got a book on CCST, which I believe is coming out, well, it's come out in 2023 or 2024. Yeah, he's still writing books. I gave that up like years ago. When did you write EIGRP book? That was 98 or something. I remember reading that. Years and years ago, yeah. Yeah, exactly. Previous millennium. So we've got basic networking. We've got Git as number two, perhaps, Python, sorry, Linux, Python. Well, you didn't mention Python, but I'm assuming it's Python is the language that you're talking about, not Perl. Well, training, of course. There is no better language if you want to parse the show IPBGP printout than Perl. That's interesting. Of course not Perl. Yeah, it's Python. Well, let's put it this way. Python seems to be the language with the lowest barrier to entry these days. If you are serious about programming, then probably Go or Rust. They seem to be more serious languages. I'm always missing the good old type languages like Pascal where a variable could be an integer or a string or a pointer, but not all three in four different lines of code. So I'm trying to bring that to my Python code with typing hints and type checker. And it's amazing how many errors that catches. So yeah, if you are willing to invest in a strongly typed language, do so. It pays off. Your code will be better. Your errors will be found by the compiler, not by your users. So go for that. But if you're looking for something easy to start, then yes, Python is the way to go. Ansible has always been something that Python versus Ansible was a discussion a few years ago. Yeah, look at you. So Ansible, would you even recommend that as someone starting out or would you say look at Python instead? Well, you know, it yet again depends on how easy you want your life to be. Are you old enough to remember the ZX Spectrum? Yes. So that was basic on ZX Spectrum. It had like five different commands and in the early version it didn't even have lists or arrays as we would call them in those days. But you know, you could program the space invaders with it. That's Ansible for you. If you want something really simple and if you don't want to deal with how's that called? Undifferentiated heavy lifting. Like connect to the device, execute a command on the device, deal with passwords, deal with authentication, deal with threads, run on five devices in parallel, all that crap. If you don't want to deal with that, Ansible is the way to go. And in my lab building tool, I'm actually using Ansible to deploy configurations to devices. I was thinking about replacing Ansible because it's a pain in the whatever. So I was thinking about throwing it out so many times, but then I would have to deal with 20 different devices and I would have to test stuff on 20 different devices because we actually support that many devices. With Ansible, it's like Ansible module, do it for me, I don't care. I just put together the configuration commands and Ansible does the heavy lifting. On the other hand, it's slow, it's crazily stupid, it's limited whichever way you turn. But if you just need to push configs to devices, Ansible is the way to go. While we do all the hard work previously in Python, so we generate the data model that is very specifically tailored to what the device should do and then you just plug the variables into templates and push it out. That's what Ansible can do. But any data manipulation, any hard work, massaging data, any queries, any transformations, run away from Ansible. Do it in Python. The thing you're talking about is that the BGP project that you're working on, was this another project as well? Well, I started an open source project three, four years ago. I always hated the GUI labs, the virals of the world and the GNS3s of the world. Those things would give me the carpal tunnel syndrome. I just hate using my mouse to connect devices together. I always wanted to have something where I would just create some text file and then execute one command. I'm a text guy, sorry about that. And have the lab running. Then people started saying, well, Vagrant, that's the way to go. And Vagrant with the proper plugin on Linux, it's really fast, it all work is great. Let's do it. Let's build one lab with Vagrant. I wanted to create my DNVPN lab, which was like six, seven routers at that time. It took me like half a day to put together that Vagrant file because you are working with tunnels and list like three parameters on this end that have to match the three parameters on the other end. And you get one of them wrong and nothing worse. And you get no error message. And so I said, well, there has to be a better way. And that was like step 0.1 of the NetLab project, where I said, what if I would define the nodes and I would define the links and something would build the Vagrant file for me? And that was like a huge step forward. But instead of doing all that crap, I have this simple tool that has nodes and links and the lab configuration comes out of that. And the lab is started and I have the devices. And then you know what I hate even more than that? I hate logging into all the devices and typing in all the IP addresses because I always get them. Yeah. And so I was like, what if I would have some IPAM in there? What if I would have the address pools and then I would assign the prefixes to the links and then I would assign the IP addresses to the devices, to the interfaces. And then here we come to Ansible. Then I would create this initial device configurations where you know the crap like no DNS lookup because we're in the lab and this is the default username and do logging to console, all that stuff that needs to be done. And I would create that for every device and then I would add the interfaces in the IP addresses and the no shutdowns of the world and the descriptions, push that to the devices. And then I would have an almost running lab. And then of course I got greedy. I could do OSPF. If I can do OSPF, then I can do ISIS and EIGRP easily. Yeah. We're still not doing grip. No, well, that's BGP I hope. Well, and then it was like BGP configuring those neighbors as bringing really cumbersome. And I always get the IP addresses and the AS numbers wrong. So now the tool takes a look at your lab and it says, oh, on this link, you have two nodes connected and they are in different AS numbers. So I will set up an EBGP session between the directly connected IP addresses. Oh, and this four nodes are in the same AS. So I'm assuming you want them to be connected with IBGP sessions over loop backs. And I'm hoping you're smart enough. You already configured OSPF for that. And then it would build the full mesh of IBGP sessions unless you said, well, by the way, these two nodes are route reflectors. And then it would build a perfect hub and spoke route reflector. And then of course, you know, we couldn't stop there. So now it's MPLS and MPLS VPN and 6PE and BGP LU and EVPN and VXLAN and segment routing and SRV6 and all the variants of EVPN and the VLANs and the VRFs and the Anycast gateways and HSRP and VRRP. I probably forgot about 26. All running on 20 different platforms from 10 different vendors. I wanted to mention that because it's Cisco, it's Juniper, it's, well, I mean, you've a whole bunch of vendors, right? Cisco, iOS, iOS XC, iOS XR, Nexus OS, ASA, Junos, VSRX, VMX, VQFX, I think, VPTX, Arista, Cumulus, FRR on Linux, Dell OS X, Viata, Fortinet, Microtic, version6 and version7. Probably three other platforms that I can't remember. Oh, Nokia, SROS and SR Linux. So basically this is like GNS3 or CML or something like that, right? But it's text-based and it does a lot of the configuration automatically with those platforms you have to drag and drop and then manually configure everything. Yeah. So it's totally text-based. Although we found a tool that can do GUI. So you give that tool the description of the network and then it will create a webpage and then you can click on the boxes and SSH into them. So if you need GUI, we have GUI. But the whole thing is text-based and obviously there are different levels of support. So not all devices support all the configuration modules. Like some devices maybe don't have ISIS and some devices don't have VXLAN implemented, but it's pretty consistent. Like you can do a hundred percent of the stuff on the core 10 or so devices and on most other devices you can do like 80% of the stuff, which means that you can effectively build a multi-vendor EVPN network with VXLAN and BGP. And we even support running IBGP over EBGP if someone is crazy enough to want to test that. And you get a running lab with everything configured after a few minutes. And big question, how much does it cost? Zero. That's great. I'll put the links below. Is it on GitHub? Where do we find it? It's on GitHub. It uses only open source tools. So the only thing you have to invest is some hardware unless you're running on Oracle cloud because Oracle has forever free instances. All the tools we're using are open source. The other thing that is a problem and there's nothing we can do about that are the vendor images. Yeah. So the good ones, Cumulus, freely downloadable, FRR freely downloadable, Nokia SR Linux freely downloadable as a container. You just put it in the lab and boom, it comes up. Then you have the Juniper VPTX is now freely downloadable, no registration required. Then you have the sort of distant guys that would be Arista, both container and VM. You need to register, but no strings attached. Cisco Nexus OS, the same thing. And then you have the bad guys. Cisco iOS XR, Cisco iOS XE, the CSR router, iOS V. You can't even legally run it anywhere outside of viral. Then we have the Nokia SR OS where you have to talk with the account team to get the license. And then you have vendors that have the VM images, but you can't get them. So you really have to know someone in the R&D to give you... But it's all supported by the tool. If someone- That's amazing. ... can get their hands... Oh, Aruba. We're supporting EVPN in symmetrical mode in Aruba as of today. That's great. There's a guy in Italy that does all the new stuff on Aruba. So he took half a dozen weird platforms. He implemented Microtic, he implemented Viata, he implemented Dell OS, and now he's working on Aruba. So for everyone who's watching, I'll put the links below. I know Ivan, you've been working on this for years, and it's amazing that you're contributing back to the community by making this freely available. So I really appreciate you doing that. I want to go back to top 10 skills. So we had basic networking, Linux, Git, Python. We spoke about Ansible. I'm assuming cloud is a big one, right? Absolutely. It's another one of those low-hanging fruits because every single cloud provider will give you some free credits to play with. They will also take your credit cards, so be careful. I understand why they have to take your credit card because they have to create some barrier to entry. Otherwise, people would be creating a gazillion free accounts. Yeah. So the credit card info and maybe the requirement that you can't use the same credit card on 200 accounts stops the biggest scammers. On the other hand, at least with Amazon, be careful because there is no hard limit. When you burn through your free credits, you will be charged and they will not work. There are horror stories of people being charged thousands of dollars out of blue. And then Amazon supports sometimes being helpful and just throwing away those charges and telling people to be more careful the next time, but you can't count on them. But yeah, Amazon has some free stuff. Azure has some free stuff. Google Cloud has some free stuff. Oracle, I was told, has some forever free stuff. So yeah, if someone wants to practice networking, take the Oracle forever free stuff and run containers. Running virtual machines in the cloud on another virtual machine is a problem because you need nested virtualization. And that works with Google and doesn't work with Azure at all, if I remember correctly. And you need hardware instances on AWS, which is like bloody expensive. But if you work with containers and you can get Nokia in container and you can get Arista in container and you can get Cumulus in container. So you already have three different vendors. You can build a nice multi-vendor setup in a public cloud, free of charge. And we didn't have this on our previous list, but I'm assuming we have to add it as AI. Yeah, absolutely. At least, you know, get to know your enemy. And I mean, you're going to want that on your resume or CV. Yeah, of course you have to have it there. Otherwise you're not seen as, you know, serious individuals. Last time you mentioned stuff like- Prompt creator. Yeah, prompt creator. I love it. Anything else? Because I've got some other ones that you mentioned previously, but this is getting more into like soft skills, but like application architecture or something you mentioned before. Any other like sort of skill that you think we should get? Well, soft skills. Actually learn how to communicate with people, figure out how to listen and try to understand what people are saying. Trying to figure out what they actually want is another skill because they will never tell you. I love, you know, when I get this convoluted technical question like, how do I configure this thing on this platform? I can probably tell you, but why do you need that? Exactly. And then, you know, five emails later, we figure out that the poor guy has painted himself in the corner and then he thinks that he needs a ladder to climb out. Whereas what he really needs is he has to wait for the paint to dry and then walk out and do it again. I've always asked this question, but it's important because there's a lot of people watching in the beginning of their journey, are they moving from say some other kind of sphere into networking or whatever. Certs have value in 2024? Absolutely. I mean, as I said before, if you understand all the caveats and you know that this is not a sexy job and all that, it can be a rewarding profession. I always loved working on networking and there are people who went into networking because they didn't want to become programmers, which doesn't mean today, unfortunately, it doesn't mean you don't have to know Python. I mean, do yourself a favor and learn some Python because, you know, it will help you. But if you don't want to write code 10 hours a day, then maybe networking is an interesting opportunity. Because you always differentiate between scripting and networking versus being a proper hardcore programmer, right? It's totally different. Yeah. I mean, even, you know, we all say, well, programming, there's no such thing as programming. There are people who write code. There are like people who are configuring VLANs. Anyone can do that. And like 80% of all the code written in this world, probably more like 90%, is like the VLAN stuff. The boring front-end, back-end stuff that just needs to happen. You have to code the thing that has been coded like a hundred times, but this company has slightly more red color in their logo, so the whole thing needs to be changed. You can call that programming if you wish. You can call a VLAN jockey a network engineer. But, you know, then you have people who actually write the hard stuff and, yeah, you can call them programmers or what I would call a networking engineer. Someone who actually understands what they're doing and can tell you what the advantages or disadvantages are of what he's doing and can explain the trade-offs. I mean, if you can't explain the trade-offs, you're not an engineer by definition. And then you have the architects or designers or whatever you want to call them. And you have them in networking, you have them in software development. Because someone has to take a look at a big picture and someone has to say, well, we'll split this elephant into this hundred chunks so that we can edit a chunk at a time. Someone has to do it. And, you know, the person who has been changing the colors of the logo on the webpage for the last 30 years can't do that. I love what you've said in the past. You said it's easier to have multiple skills rather than trying to be the 0.1% in a specific skill. Yet again, it depends on your mindset, depends on what you like doing. Some people like to focus on one thing and then they can become the world expert in one thing, like the quantum theory of gravity. That skill is not transferable. You can know everything about the quantum theory of gravity and you still can't fry an egg. On the other hand, you have people who, you know, are interested in many things. And if you're one of them, then yes, definitely. Unfortunately, due to HR reasons, you have to be stronger in one of your skills because, you know, they still want to put you in a bucket. So you have to choose what your core skill will be. But then, yeah, just explore around and whatever you find interesting, either just go and do it because it's interesting or you could say, well, where do I want to be five years from now? And I have these three interesting things and which one of these three things will help me get there? Because, you know, if you are a networking engineer and you want to become a senior networking engineer or you want to change jobs or something, then mastering automation or mastering cloud or mastering AI will help you get there. Getting a black belt in Taekwondo will not. But it's interesting. Yeah. So let's talk about certs because a lot of people are starting, you know, not sure which certs to go for. If you want to become a network engineer, still CCNA, sort of the recommendation to start with? Probably. As much as I hate that, probably. Yeah. They have some useful value for you because they give you a blueprint what a vendor, remember, what a vendor thinks is worth learning. And half of that is actually worth learning and half of that is their marketing because they just want to, you know, indoctrinate you so that in five years from now when you will be in a position where you can make decisions, you will buy their boxes. That's why they invest in certifications. It's not because of karma points or, you know, trying to make the world a better place or whatever. So there's always some vendor conspiracy theory behind certifications. They're always doing it for their own reasons. It's never for your own. But as the thing is there, use it and, you know what, get the blueprint out of that. Oh, these are the things that a lot of people think I should learn, which is good. Second unfortunate role of certifications is that they are HR filters. So if you're in a position where you're not known well enough so that you could just ask around whether anyone has any decent job or even better, someone comes to you saying, well, you know, we have this job that you could fit in, which is perfect. So if you are in the job market and you have to send around a gazillion resumes and hope that one of them will stick, but you know what, everyone else is sending out the gazillion resumes. So the HR person is looking at the gazillion resumes. So the chance of you being the one he is looking at is like close to zero anyway. And now the AI is doing it. So anyway, they use certifications as filters because there are tons of people totally unqualified for the job they're applying to. And the poor HR person has to do the first selection. And they usually have to throw away like 90% of all the applications without ever looking at them because there's so many, you know, now that we don't have to write the letter or use a typewriter to type it and then sign it and put it into an envelope and bring it to the post office and pay whatever, 20 P to have it sent. Now everyone is applying to everything. And so the poor guy on the other end has to throw away 90% of the stuff by definition because he just can't process it. The barrier to entry is just too low. And so they have to create artificial barriers to entry and certifications are one of those artificial barrier. So if you want to be in this game, you have to figure out what the job listings are asking for. And then you just go for whatever you think is achievable. And I don't know whether it's still CCNA today, but probably it is. Also look at the low level cloud certifications. Amazon associate, Azure, whatever, Google, whatever. Yet again, do some market research, figure out which of the three big cloud providers is popular in your environment. It could be AWS in US. It could be Azure if you are in some European country. Interestingly, in some countries, Azure is more popular than AWS for whatever reason. So do your homework, figure out which one is most interesting in the local job market because they're all the same, honestly. Go for that. Just remove that barrier to entry and you'll learn something on the way. Does CCNA do something like AWS associate? What about DevNet certs? DevNet has two things in it, right? Developer and networking. So if you don't know networking fundamentals, how good will you be at the DevNet? Yeah, exactly. Now I would say, yeah, absolutely do that. Yet again, do the market research. If your local market is not asking for this, then honestly, you can do it just for the giggles. Or if you're interested in the stuff, just take the blueprint and make sure you learn the stuff that someone thought is worth learning even without going to a certification. But if the local job market is not asking for whatever you're interested in, either you have to change the job market or you have to invest some of your time into some other certification. When you say market research, you're basically saying go and look on job sites, right? So Indeed or whatever. Yeah, whatever's popular in your country because it varies by countries. And particularly in Europe, we have 20 different languages and each language area has its own job size or its own local variants of whatever. So yeah, you do the local market research. And also keep in mind that, as someone said, the future is here, but it's not equally distributed. And a friend of mine wrote about three geographies of IT in early 2000s, I think. And he said, well, you have the Silicon Valley and they are talking about AI and LLM and whatever today. And then you have the US today and today they might be talking about automation. And then you get the Gartner report that says, well, 30% of organizations are doing any reasonable automation. And you know that Gartner is talking to the big guys, so the small guys are not doing anything. And then you have Europe. I'll just tell you a funny story. I was invited to a conference in one of the European countries and it was like, yeah, sure, I can come. What would you like me to talk about? Hmm, I don't know. IPv6 or automation or something like that. I was like, dude, I stopped talking about that years ago because it's boring. But he was like, yeah, but you know, for us, this is still the bleeding edge stuff. Yeah, good point. So just because we are talking about AI and whatever, it doesn't mean that in your local job market, anyone knows how to spell Python. Yeah, that's a good point. You could be the only person that knows how to program network devices with Python. I think it's important that you differentiate between the hype cycle and actually what's on the ground. And I'm glad you've said that. So go and look at your own job market, look at the job sites where you are, see what skills are in demand, but as a general guideline for networking CCNA and that rather than perhaps like Network Plus or some other certs from Arista or whatever, right? Yet again, Cisco still has the dominant market position. I mean, I would totally love someone like Cumulus Linux creating a networking on Linux certification. I actually brought the idea to them a decade ago at least, and even had the development team who could do it for them, but I'm not interested. Whatever. Yeah, that would be ideal. I mean, and I would make it open source and I would do everything to destroy CCNA. And it would cost you like 100 quid or something, and you would have the competing material freely available online, but nah. And the question always asked, is it worth going for CCMP, CCIE? It really depends on whether you are the one skilled person or the broader view person. Obviously 20 years ago, I would say, yeah, absolutely go for a CCIE, but A, Cisco doesn't have such a dominant position anymore. There are many alternatives. I have no idea how CCIEs are doing in the job market because there were generating too many CCIEs, but there's nothing you can do about that. If something is valuable, everyone goes for that and then it stops being valuable. The biggest generator of the CCIE needs were the Cisco partners with discounts tied to the number of CCIEs they had on stuff. So I have no idea how that's doing right now. So yet again, do the local job research, figure out what the average salary is for which CCNA is a requirement, what the average salary is for which CCMP is a requirement. Do the same for CCIE, figure out how many jobs are out there, figure out how much time you will need because getting a CCIE can take people years. A lot of people are not going to take years. I love what you said, Ivan, that in the old days it was like this was the path, right? CCNA, CCMP, CCIE, but now like you said, you either go that route or you become more of a generalist and look at other technologies because the world's changed a lot now where someone's expected not just to know writing and switching, but they have to know a whole bunch of stuff it seems. Well, there is that and there are also many comparable paths. I mean, AWS has something like that. Maybe not today, but in a few years, every organization that's using Cisco today and has the need for a CCIE, which means they are pretty big, they're either a Cisco partner or they are a big shop. They are, or they will be using one of the big cloud providers. So Ivan, why did you decide to go into networking rather than like writing code or like cybersecurity? Well, I was doing all of that, probably not as much security. We were building firewalls in those days, the two Unix boxes and two routers or whatever the recipe was. I always found networking more challenging than the regular programming. As you know, writing code for accounting systems is boring, but there's money there. So I didn't write code for the accounting systems. I was writing code for point of sale terminals. So all the duty-free shops at the borders of our little country were running on my software. But you know, that's utterly boring. So first I had to develop a programming language so I could make it less boring. Compared to that, networking is just a totally different dimension. It's real time, so you have to deal with events that happen, you know, asynchronously in real time, not like scanning the cigarette boxes for barcodes, which is totally boring, trust me. And distributed systems are way more complex than whatever commercial software ever will be. Well, in those days, today, obviously, everything is distributed and everyone thinks that you just throw some HTTP magic into the mix and everything works until it doesn't. And then you need the networking engineer. Ivan, you were telling me, like offline, that your lab project has actually evolved into something else and you were mentioning BGP, right? Yeah, exactly. So the tool that we've been discussing, it's a lab setup and configuration tool. So it's an infrastructure project. It gives you a working lab, pre-configured with whatever you want to have pre-configured, but it doesn't tell you what to do. So if you want to practice, you know, you have to dream up the scenario, you have to dream up the lab topology, all that stuff. On the other hand, if you want to get into some new technology, like BGP, for example, and BGP is my favorite because that was the very first course I developed for Cisco in 1990s. Nice. So I'm always fond of those days. You know, it's a complex topic and there are so many moving parts and people get lost in that complexity. And now imagine that, like going to a gym and you want to train just this muscle because this muscle is where you think your problem is. And then you take the weights and you do 20 repetitions of this particular muscle. I created the BGP labs that use that infrastructure project, but you can use them to train just that one muscle. And because we have the infrastructure project, you start with pre-configured lab and it only, and it describes what's in the lab and what you're supposed to be doing and why you're doing this and where you will use this in real life. And then it tells you now you configure, for example, the first one is now let's configure eBGP session with your service program. And because I don't believe in monkey labs, monkey see, monkey do, I just say, well, now you go and find the command to configure a BGP neighbor on your device. And I will not tell you what the command is, but if you're doing the right thing, this is what you should see when the BGP session is up and running. And then you have two BGP sessions and then you have IBGP and you have eBGP and you have BGP weights and local preference and MED and communities and drought filters and prefix filters and AS path filters, the AS path prepending, you get the idea. Right now, 20 labs for 20 individual muscles to train. That's great. Plus 20 more coming because there are so many things that people were just throwing at me because I wrote a blog post saying, hey guys, I will do this. And any ideas what should we go in there? It's like, oh, and this and this and this and this. That's great. I'll link it below. Ivan, again, I really appreciate you giving back to the community, not just wisdom like what we're talking about now, but also that kind of stuff where the next generation can learn so much easier than us old people that struggle. Yeah. I hope it will be helpful. So you guys, you let me know. Ivan, sorry, just before we end off, the question that always comes up and you've given great advice on this in the past, but just for people who are new to this, old, old question. How do I get experience without a job? Because I need a job to get experience, but I can't get a job if I don't have experience. Well, we did talk about those BGP labs, do them. We did talk about free credits on all three major cloud providers, use them. There are always simple things you can do like, oh, I want to set up a web server in the cloud. That will involve getting a cloud account, starting a VM, figuring out how to figure NGINX or Apache or what have you on that one and uploading one file and setting up the usernames and passwords and creating the virtual network and mapping the inside IP address to the outside IP address. So you've learned a lot just by doing that one simple thing here. Or if you want to, set up those BGP labs, you will have to create a Linux instance, hopefully in Oracle free cloud. Then you will have to install some software on that Linux instance and you will have to download the Arista container and install Python and set up this and that and that and that. That's experience for you. Not good enough? Don't have any ideas? Well, I will publish the lab exercises for my online courses now that I am officially going off from the commercial market and I will not give you the solutions. I cannot give you access to all the materials you need, but you will have the lab exercises. For the cloud, for example, they are as simple as, well, start one VM. Start two VMs in two subnets and they should talk to each other, but only on this one port. Well, now use the second VM as the backend server for the first VM. When the request comes in, the first VM asks the second VM and replies with the answer. They're like six, seven different exercises building on one another. That's amazing. Go through those and you can redo them on AWS, on Azure, on Google, on Oracle, and you will know more about those four clouds than many networking engineers out there. Participate in an open source project. Doesn't matter what it is. Doesn't matter if all you're doing is fixing grammar of people who can't type English. You will figure out what branches are. You will figure out what a pull request is. You will figure out what a commit is. So you will learn Git. Not good enough? Find some non-profit around you. Everyone needs a helping hand. If you can spare two hours a week, that's two hours a week. You will get two hours a week experience doing something. Always document what you're doing. There are people doing tons of stuff and they can't even tell you what they're doing. Write blog posts about what they're doing, what you're doing. Oh, don't do it on LinkedIn. Do it on GitHub pages because that will require that you master markdown, that you master Git, that you master some content management system like Hugo or Jekyll or MKDots or Sphinx or Read the Docs. Whatever. You will master one system that can set up a static website. And then when you go to a job interview, you can say, well, guys, I did this. Ivan, you've been in this game a long time. You've seen a lot of changes, a lot of hype, a lot of unicorns, whatever we want to call it. What's your advice looking back to say your younger self or to someone who's starting out? Looking back over all these years, what's your advice? Don't believe in unicorns. As always, invest in fundamentals because they never change. TCP is 40 years old or something. Ethernet is 40 or 50 or whatever years old. We are still using the same frame forward on Ethernet that we were using at 10 megabit speeds. Now we are at what, 400 gig. It's still the same frame forward. It's still the same forwarding mechanism that we were using when we were at 100 meg. So we have 4,000 times higher speeds, but we're still using the same principles. TCP has improved and yeah, now we have QUIC and all that, but you know, it's been around forever. Internet is still running on this 30 year old stuff called BGP. So fundamentals are there to stay. Make sure you master them. Second, invest in soft skills. You might be the smartest person in the room, but if you're not listening to others, your value is zero. Next, master presentation skills. If you can't persuade people, and I mean persuade in a good way, not in sleazy marketing ways. If you can't persuade people that your ideas have value, you will not get anywhere. If you can't persuade your boss that you deserve a raise, you will not get a raise. Yeah, it's a good one. Yeah, yelling at your boss will not help presentation skills. Ivan, I just want to stop right here and talk about your website, IP Space, and there's been some changes and there's some good news for people who want to watch content for free, right? Well, yeah, the news is that I'm effectively winding down or by the time you'll publish this, my commercial operations will be over, which means you won't be able to buy anything from ipspace.net anymore, but A, all the content will still be there and I will be working on new stuff because I get bored too easily and all the old stuff will be available indefinitely or until my credit cards expire. So the blog will be there, the website will be there, the Netlab project is getting more and more contributors, so we'll keep doing that. I will probably work on other lab frameworks, not just BGP, there's EVPN, there's VXLand, there's the cloud stuff, so I will probably work on that. And as you mentioned, all the videos that previously required registration are now totally free to watch with no strings attached, no rag wall or anything, thanks to Cloudflare because they have no egress fees. The reason I had to require registration was because I was on AWS S3 and the S3 egress fees were like 80% of my cloud bill, which by the way is why I needed that URL signing thing that I had to solve in Perl. So if everyone is watching, go and get the free content on Ivan's website. Ivan is one of those people in the industry that a lot of us really respect and has huge experience. There's a complaint often on YouTube that people say the content is too light, so if you want really hardcore information about technologies, please go and visit Ivan's website. I've put the link below. Go and show the support. Ivan, I really want to thank you for making that freely available to everyone who's watching and empowering the next generation. At free and with no complaints about ad blockers. Ivan, I really want to thank you for giving back to the younger generation or people who are moving into this field. Thank you so much for not just sharing technical knowledge. You've written books over the years. You've shared so much on your website and your blogs, but you're also giving older person advice, I would say, or the elder advice to the younger people or people who are starting out. I really want to thank you so much for sharing. Well, you're most welcome and thanks for having me.",
    "transcript_keywords": [
        "Yeah",
        "people",
        "networking",
        "Linux",
        "stuff",
        "thing",
        "BGP",
        "job",
        "Ivan",
        "Python",
        "years",
        "things",
        "Cisco",
        "Ansible",
        "time",
        "lab",
        "networking engineer",
        "Cloud",
        "good",
        "devices"
    ],
    "transcript_entity_values": [
        "Microsoft",
        "the Vax 11 750s",
        "these days",
        "Linux",
        "three",
        "like three hours",
        "Cisco Live",
        "Nazi",
        "like years ago",
        "SSH",
        "Italy",
        "PDP",
        "1990s",
        "2,400",
        "early 2000s",
        "CV",
        "Cumulus Linux",
        "Cisco",
        "IBGP",
        "the next 40 years",
        "Last year",
        "S3",
        "two",
        "four",
        "Russ",
        "two hours",
        "4,000",
        "Europe",
        "15 years ago",
        "second",
        "markdown",
        "YouTube",
        "Junos",
        "Google",
        "five emails later",
        "Python",
        "English",
        "the last two or three thousand years",
        "Perl",
        "Aruba",
        "Spanish",
        "Linux",
        "Russ White",
        "80%",
        "two VMs",
        "17",
        "50 million",
        "Nexus OS",
        "6PE",
        "hundred",
        "Python",
        "Chinese",
        "three to five weeks",
        "Two hours later",
        "2024",
        "David Bombal",
        "20",
        "Pascal",
        "this 30 year old",
        "the last 10 years",
        "10 megabit",
        "Ivan",
        "Cloudflare",
        "1800",
        "a nine to five",
        "Grammarly",
        "EIGRP",
        "Perl",
        "30 year old",
        "SROS",
        "Oracle",
        "close to zero",
        "the years",
        "Cumulus",
        "trillions",
        "CCMP",
        "Google Cloud",
        "AI Mist",
        "FRR",
        "gazillion",
        "six months from now",
        "IOS XE",
        "30",
        "Dell",
        "today",
        "every day",
        "a hundred billion",
        "Windows",
        "a few minutes",
        "Viata",
        "Juniper",
        "VLAN",
        "30%",
        "the last 30 years",
        "HP",
        "Jekyll",
        "CSR",
        "one",
        "40",
        "Cumulus",
        "Vagrant",
        "Years and years ago",
        "PDF",
        "five years from now",
        "Kubernetes",
        "ML",
        "100",
        "VMX",
        "NGINX",
        "TCP",
        "DNS",
        "five minutes",
        "more like 90%",
        "Cisco Nexus OS",
        "98",
        "MKDots",
        "a decade ago",
        "30 minutes",
        "about three",
        "the Juniper VPTX",
        "AI Wi-Fi",
        "UK",
        "first",
        "Wednesdays",
        "1980s",
        "Ansible",
        "Microtic",
        "a few years",
        "European",
        "about 26",
        "a few years ago",
        "300",
        "three and a half",
        "CML",
        "100 quid",
        "Perl",
        "VPN",
        "half a dozen",
        "Amazon",
        "Hugo",
        "VQFX",
        "90%",
        "AWS",
        "VC",
        "years",
        "ISP",
        "Nokia",
        "0.1",
        "Vegas",
        "2023",
        "ISIS",
        "this year",
        "the Nokia SR OS",
        "like 80%",
        "about two years",
        "VSRX",
        "thousands of dollars",
        "Git",
        "IP",
        "Gartner",
        "just 100 billion",
        "IP Space",
        "Linux",
        "Sphinx",
        "AI",
        "iOS XC",
        "Junos Evolved",
        "40 years old",
        "Ansible",
        "HSRP",
        "Perl",
        "LLM",
        "a hundred percent",
        "GNS3",
        "the old days",
        "IPBGP",
        "Nokia SR Linux",
        "LinkedIn",
        "the 0.1%",
        "CCNA",
        "Two and a half",
        "30 years",
        "VM",
        "Previous millennium",
        "BGP",
        "US",
        "billions and billions",
        "16",
        "Prologue",
        "10",
        "bush",
        "2023",
        "Junos",
        "Ansible",
        "Cisco iOS XE",
        "this hundred",
        "six",
        "CCIE",
        "Python",
        "Zero",
        "iOS",
        "half",
        "VXLAN",
        "CCST",
        "200",
        "XR",
        "VXLand",
        "nine to five",
        "seven",
        "10 hours",
        "MPLS",
        "Arista",
        "the Silicon Valley",
        "five",
        "20 years ago",
        "those days",
        "NetLab",
        "Twitter",
        "JPEG",
        "QUIC",
        "Second",
        "zero",
        "Apache",
        "BGP",
        "ZX Spectrum",
        "iOS XR",
        "SR Linux",
        "Ansible",
        "Network Plus",
        "EBGP",
        "MED",
        "Ivan Pepelnjak",
        "Taekwondo",
        "Netlab",
        "Dell OS X",
        "400",
        "50 or whatever years old",
        "ASA",
        "OSPF",
        "GitHub",
        "Anycast",
        "GUI",
        "late 70s",
        "Cisco",
        "VPTX",
        "CCNA",
        "Ethernet",
        "B-Lance",
        "BGP LU",
        "20 minutes",
        "four years ago",
        "Azure",
        "yesterday",
        "Friday",
        "VRRP",
        "50"
    ],
    "transcript_entity_types": [
        "ORG",
        "PRODUCT",
        "DATE",
        "ORG",
        "CARDINAL",
        "TIME",
        "ORG",
        "NORP",
        "DATE",
        "ORG",
        "GPE",
        "ORG",
        "DATE",
        "CARDINAL",
        "DATE",
        "ORG",
        "PERSON",
        "ORG",
        "ORG",
        "DATE",
        "DATE",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "TIME",
        "CARDINAL",
        "LOC",
        "DATE",
        "ORDINAL",
        "PERSON",
        "ORG",
        "PERSON",
        "ORG",
        "DATE",
        "ORG",
        "LANGUAGE",
        "DATE",
        "NORP",
        "GPE",
        "LANGUAGE",
        "GPE",
        "PERSON",
        "PERCENT",
        "QUANTITY",
        "DATE",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "WORK_OF_ART",
        "LANGUAGE",
        "DATE",
        "TIME",
        "DATE",
        "PERSON",
        "CARDINAL",
        "PERSON",
        "DATE",
        "DATE",
        "QUANTITY",
        "PERSON",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "ORG",
        "WORK_OF_ART",
        "DATE",
        "ORG",
        "ORG",
        "CARDINAL",
        "DATE",
        "PRODUCT",
        "CARDINAL",
        "PRODUCT",
        "ORG",
        "WORK_OF_ART",
        "ORG",
        "CARDINAL",
        "DATE",
        "ORG",
        "CARDINAL",
        "ORG",
        "DATE",
        "DATE",
        "CARDINAL",
        "WORK_OF_ART",
        "TIME",
        "ORG",
        "PRODUCT",
        "ORG",
        "PERCENT",
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "PERSON",
        "DATE",
        "ORG",
        "DATE",
        "PERSON",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "TIME",
        "PERCENT",
        "ORG",
        "DATE",
        "ORG",
        "DATE",
        "TIME",
        "CARDINAL",
        "FAC",
        "ORG",
        "GPE",
        "ORDINAL",
        "DATE",
        "DATE",
        "PERSON",
        "NORP",
        "DATE",
        "NORP",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "DATE",
        "ORG",
        "QUANTITY",
        "LAW",
        "PRODUCT",
        "CARDINAL",
        "ORG",
        "EVENT",
        "ORG",
        "PERCENT",
        "ORG",
        "ORG",
        "DATE",
        "ORG",
        "ORG",
        "CARDINAL",
        "GPE",
        "CARDINAL",
        "ORG",
        "DATE",
        "ORG",
        "PERCENT",
        "DATE",
        "ORG",
        "MONEY",
        "PERSON",
        "ORG",
        "ORG",
        "MONEY",
        "ORG",
        "PERSON",
        "FAC",
        "ORG",
        "ORG",
        "ORG",
        "DATE",
        "WORK_OF_ART",
        "ORG",
        "LANGUAGE",
        "ORG",
        "PERCENT",
        "PRODUCT",
        "DATE",
        "ORG",
        "ORG",
        "PERSON",
        "PERCENT",
        "WORK_OF_ART",
        "CARDINAL",
        "DATE",
        "ORG",
        "DATE",
        "PRODUCT",
        "GPE",
        "MONEY",
        "CARDINAL",
        "WORK_OF_ART",
        "CARDINAL",
        "PERSON",
        "DATE",
        "ORG",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "PRODUCT",
        "PERSON",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "WORK_OF_ART",
        "CARDINAL",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "TIME",
        "ORG",
        "ORG",
        "LOC",
        "CARDINAL",
        "DATE",
        "DATE",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORG",
        "ORDINAL",
        "CARDINAL",
        "PRODUCT",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "PERSON",
        "GPE",
        "ORG",
        "ORG",
        "CARDINAL",
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "DATE",
        "GPE",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "PRODUCT",
        "TIME",
        "DATE",
        "ORG",
        "DATE",
        "DATE",
        "ORG",
        "CARDINAL"
    ]
}