{
    "id": "BZnljKjJLvM",
    "title": "How to Make a One-Click Backup Button",
    "channel": "DIY Perks",
    "channel_id": "UCUQo7nzH1sXVpzL92VesANw",
    "subscriber_count": 4640000,
    "upload_date": "2015-05-27T18:00:00Z",
    "video_url": "https://www.youtube.com/watch?v=BZnljKjJLvM",
    "category": "Science & Technology",
    "tags": [
        "hard drive",
        "backup",
        "automatic",
        "mod",
        "hack",
        "lifehack",
        "button",
        "freefilesync",
        "recovery",
        "repair",
        "external",
        "drive",
        "computer",
        "pc",
        "hdd",
        "disk",
        "laptop",
        "fix",
        "damaged",
        "faulty",
        "recover",
        "data",
        "backup data",
        "diyperks55",
        "cloud unit",
        "software",
        "broken",
        "restore",
        "technology",
        "tech",
        "gadge",
        "nvidia",
        "ati",
        "intel",
        "core",
        "amd",
        "windows",
        "microsoft",
        "google",
        "dekonifenta",
        "melhobankof",
        "data recovery",
        "diy",
        "make"
    ],
    "views": 847312,
    "likes": 28504,
    "comments_count": 833,
    "description": "In this video we'll be making a simple one-click backup button so that you can make data backups regularly with ease.  OFFICIAL LINKS:  Support me on Patreon:   Official Website:   Discord:   Forums:   Twitter:    Parts links:   Disclosure: These are affiliate links. If you click them and make a purchase from the various merchants they link to, DIY Perks may earn a commission. Affiliate programs and affiliations include, but are not limited to the eBay Partner Network and Amazon Associates.  Here's the button I used in this project:  eBay US/Worldwide:    Also, here are some other buttons that are compatible with this project:    FreeFileSync:   Badge vector by Vector Open Stock",
    "description_links": [
        "https://www.patreon.com/DIYPerks/",
        "https://www.diyperks.com/",
        "https://diyperks.com/discord-server/",
        "https://diyperks.com/community/",
        "https://twitter.com/DIYPerks",
        "https://ebay.us/7fyc62",
        "https://docs.google.com/document/d/1E4ua-HKPTDZkk3WHK-iLYYe3Tn9_HDIC8plI-S6jEJM/edit?usp=sharing",
        "http://www.freefilesync.org"
    ],
    "transcript": "Backing up data can be a bit of a tedious task, so many of us don't do it as often as we should, despite our drives being full of so many irreplaceable files these days. So in this video, we'll be making the backup process much easier by making a one-click automatic backup system, that requires no user interaction after pressing it. The net result is that backups are made much more regularly as it's so easy to do. Laptop users can also benefit, as the same system can also be set up for external drives where the backup process will be automatically triggered as soon as the drive is plugged in. This method doesn't require a button, and is entirely software based, so I'll be covering it in more detail later in the video. We'll be building the button into the drive bay of a standard computer to start with, but you can of course reposition the button to wherever you like, or even make it external, depending on your requirements. Using just any old button or switch won't do, as we specifically need one that is latching and has two poles. Having two poles means that a button has two individual switches inside, allowing it to make or break two separate circuits. This is usually shortened as DP, which stands for Double Pole. As these switches are a little less commonly found, I've placed international purchasing links in the description to a variety of suitable switches for you to choose from that will work with this project. So let's begin by removing the drive bay cover. This process varies from case to case, but generally it involves removing the front facade of the chassis and simply unclipping it. Once we've got it, we can place it on some scrap wood and then drill a hole in it for the button. To make the process easier and more accurate, it's a good idea to start with a small drill bit and progressively move to a larger one. If your largest drill bit is still too small for the button to fit through, it's possible to widen it with a circular file. It doesn't have to be perfect, as imperfections in the circle are masked by the button's lip. Now that the button's in we can secure it in place using its nut. As you can see here, I've also drilled a hole for an LED, which we'll later configure to light up when the button is pressed. The next thing we'll need for this build is a SATA male to female power extension cable. To wire up the button to it we'll first cut through the yellow wire, which corresponds to the 12v rail from the power supply, and solder a spare length of yellow wire to one of the ends, wrapping the joint afterwards with electrical tape or heatshrink. The other end of this extension can now be soldered to the button, but first we need to identify which contacts to solder it to. So after making sure that the button is turned on, we can use a multimeter to check which contacts get connected together, and then solder the yellow extension to either one of them. Now we can get yet another length of spare yellow wire, solder it to the other contact. Its loose end can now be soldered to the remaining wire on the power cable. These steps need to be repeated in exactly the same way for the red wire, which is the 5v rail. However, on the spare length of wire that connects to the female side of the extension cable, we need to add an extra little blue wire. This is for wiring up to the LED later. The LED obviously needs a ground connection too, so we can cut through either one of the black wires, and twist them back together after exposing the ends. This leaves us with some exposed copper to which we can solder a ground wire for the LED. After insulating the joint we can solder the end of this wire to the cathode leg of the LED. For reference, the cathode leg of an LED is usually the one that goes to the larger plate inside the diode itself. To the other leg we can solder a current limiting resistor. This drops the 5v rail down to whatever the LED needs, and you can use the values in this chart depending on the colour of your LED. To the other end of the resistor we can solder that extra blue wire that we added earlier. The LED can now be inserted into its hole and glued in place. So that's the backup button completed, and it's ready to fit into the case. However, if you're the kind of user who likes a tidy looking interior to your PC, you might want to consider using some braided sheathing over the wires to give it a more professional appearance. So now we can put the case back together and plug the button in between the power supply and a additional blank hard drive, which will soon function as the backup hard drive. So, after making sure that the backup button is on, we can boot the computer up and enter into the BIOS, as we need to enable SATA hot swapping so that the computer will treat the backup drive as removable storage. This feature is available on most decent motherboards, however if yours doesn't have it you can use a SATA to USB adapter instead. The process of enabling hot swapping will vary depending on your motherboard brand, so you may need to refer to the user manual if you don't know how to do it. So once hot swapping is enabled for the backup drive, we can save the changes and let the computer now boot into Windows. Now when the backup button is pressed the drive should be detected automatically by the system, and we can now set up the software for it. So to get the backup to launch automatically we'll be using a free piece of software called FreeFileSync. As the official installer annoyingly tries to install optional adware, take care to deselect it during installation. After installing it we can launch the main program by double clicking the green icon on the desktop. We'll start by choosing the folders that we want the software to backup by pressing the browse button on the left hand side. For now let's go with the My Documents folder. Now we need to choose the backup destination. So we'll click the browse button on the right hand side and make a new folder on the backup hard drive with the same name as the source folder. It's worth noting that we can add more source folders and destinations by simply pressing the green plus icon. Now we can press the green cog on the right, and change the mode to mirror mode. This mode is what I recommend for most users, as it makes an exact copy of your source files and synchronises deletions. For example, if you were to make a new word document and start the backup process, the file would be copied to the backup drive. If you were to modify it, the backup process would update it, and if you were to delete it, the file would be deleted on the backup as well. Think of it as a one-way synchronisation folder, keeping an always up-to-date version of your important files. If you don't think this mode will suit your needs, there are plenty of other ways you can configure the software, including versioning and historical backups, so have a look at the software's documentation if you want to find out more. So now we can hit ok, and save our settings as a batch job by pressing this icon. Now we can open the second icon that was placed on the desktop, which launches the monitoring configuration, and go to file>open, and select the batch file we just made. As you can see it's added both the source and destination folders. Now we can go to file and again save it to the C drive, and then close the window. Going to the C drive we can see the new red batch file. This red batch file links back to the original batch file, so we need to leave the original one where it is. The red batch file however can be dragged into the startup folder in the start menu. This means that the computer will launch the batch file at system startup, where it will wait for the backup drive to be detected. So now all that's left to do is try it out. So we'll press the backup button, and the backup should initiate by itself. On your first backup a warning will display informing you that the drives are significantly different. This is normal as it's the first backup, and can be ignored. Once the backup's completed, we can simply press close and turn off the backup drive. As the backup drive is physically disconnected from the power supply when it's not actually backing up, data is given another layer of protection against power supply failures and even ransomware. So what about using external drives with this method? Well, the software side of things is exactly the same - just set your backup folders up on your external drive and it will work in the same way when it gets plugged into the computer. Handy! So, what to do if your motherboard doesn't support SATA hot swapping? Well, as I mentioned earlier there is a walkaround, which is simply to get a SATA to USB converter, and hook the drive up to one of the spare USB headers on the motherboard. So if you've enjoyed this video, don't forget to give it a thumbs up, and perhaps consider subscribing to DIYPerks if you haven't already. Also, if you're interested in another hard drive related video, then why not check out this one in which we attempt to recover the data from a dead drive. The results are really surprising. Other than that, I'll see you next time.",
    "transcript_keywords": [
        "backup",
        "backup drive",
        "button",
        "drive",
        "backup button",
        "LED",
        "backup process",
        "backup hard drive",
        "wire",
        "file",
        "batch file",
        "hard drive",
        "solder",
        "process",
        "SATA",
        "backup button completed",
        "drives",
        "software",
        "batch",
        "red batch file"
    ],
    "transcript_entity_values": [
        "first",
        "12v",
        "these days",
        "SATA",
        "two",
        "5v",
        "poles",
        "FreeFileSync",
        "USB",
        "one",
        "second",
        "DP",
        "DIYPerks"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "CARDINAL",
        "DATE",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "NORP",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORDINAL",
        "ORG",
        "ORG"
    ]
}