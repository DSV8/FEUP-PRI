{
    "id": "evN89fdKOxU",
    "title": "Roadmap to ChatGPT and AI mastery",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2023-01-29T15:00:34Z",
    "video_url": "https://www.youtube.com/watch?v=evN89fdKOxU",
    "category": "People & Blogs",
    "tags": [
        "chatgtp",
        "chat gtp",
        "ai",
        "chat gpt coding",
        "chatgtp python",
        "chatgpt c",
        "chatgpt hack",
        "artificial intelligence",
        "terminator",
        "ai movies",
        "ai jobs",
        "ai robots",
        "machine learning",
        "cybersecurity",
        "cyber",
        "cyber ai",
        "ai cybersecurity",
        "chatgpt sentient",
        "chatgpt lamda",
        "chatgpt sentient conversation",
        "chatgpt alive",
        "chatgpt robot",
        "chatgpt chatbot",
        "chatgpt interview",
        "chatgpt self aware",
        "ai sentient",
        "chatgpt",
        "google ai sentient",
        "google ai robot",
        "google ai interview",
        "google ai",
        "lamda"
    ],
    "views": 191793,
    "likes": 6586,
    "comments_count": 382,
    "description": "ChatGPT and AI mastery - how to get started in AI. Big thanks to Brilliant for sponsoring this video! Get started with a 20% discount using this link:   How do you capitalize on this trend and learn AI? Dr Mike Pound of Computerphile fame tells us how to ride this wave. If you are into cybersecurity or any other tech field, you probably want to learn about AI and ML. They can really help your resume and help you increase the $$$ you earn.  AI just become Sentient? And will it take your job? Or is AI just a fantastic opportunity for you to get a better job? In this interview with Dr Michael Pound we discuss hype vs reality and get a quick start guide on how to learn AI.   // MENU // 00:00 - Coming up 00:40 - Sponsored segment 02:28 - A.I. Hype // Should we be worried? 03:37 - Amazing but flawed 08:07 - Is it worth it getting into CompSci? 10:02 - Knowing A.I. makes you valuable // Learn A.I. 13:43 - Resources for learning A.I. 15:58 - Should you get into CompSci? 17:35 - Enhancing your career with A.I. 20:16 - The limits of A.I. 24:57 - A.I in academics // How A.I. affects academic work 31:02 - Conclusion  // Previous Videos // I challenged ChatGPT to code and hack:  The truth about AI and why you should learn it - Computerphile explains:   // BOOK // Deep learning by Ian Goodfellow, Yoshua Bengio and Aaron Courville:   // Courses and tutorials // AI For Everyone by Andrew Ng:  PyTorch Tutorial From Research to Production:  Scikit-learn Machine Learning in Python:   // PyTorch // Github:  Website:  Documentation:   // Mike SOCIAL // Twitter:  YouTube:  Website:   // David SOCIAL // Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:  YouTube:    // MY STUFF //   // SPONSORS // Interested in sponsoring my videos? Reach out to my team here: sponsors@davidbombal.com  chatgpt chatgpt hype chatgpt reality chatgpt truth ai ai jobs  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #chatgpt #computerphile  #ai",
    "description_links": [
        "https://brilliant.org/davidbombal",
        "https://youtu.be/Fw5ybNwwSbg",
        "https://youtu.be/PH9RQ6Yx75c",
        "https://amzn.to/3vmu4LP",
        "https://www.coursera.org/learn/ai-for-everyone",
        "https://www.infoq.com/presentations/pytorch-torchscript-botorch/",
        "https://scikit-learn.org/stable/",
        "https://github.com/pytorch",
        "https://pytorch.org/",
        "https://ai.facebook.com/tools/pytorch/",
        "https://twitter.com/_mikepound",
        "https://www.youtube.com/user/Computerphile",
        "https://www.nottingham.ac.uk/research/beacons-of-excellence/future-food/meet-the-team/michael-pound/index.aspx",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal",
        "https://www.amazon.com/shop/davidbombal"
    ],
    "transcript": "- And I think one of the reasons that ChatGPT and stuff have been so hyped recently is because most people don't know what it is, and so when you see it doing what it does, you think this thing must basically be a person, right? Because it's acting like one. And I should caveat this by saying I'm not selling short these incredible technologies. I'm just saying that it would be very silly to just completely use them blind, and never check what they do, right? Because we know they just make stuff up a lot of the time. - I'm glad you mentioned computer science. Do you think it's time for more of us to learn computer science type stuff because of AI, like maths, and all these computer science stuff not really? (upbeat music) I've been saying that you need to learn artificial intelligence or AI. Question that a lot of you have been asking me is, okay, so how do I learn that? So let's ask another friend. Dawid? - [Dawid] Yes. - You've mentioned this before, but remind me, which place do you recommend that I learn and others learn AI? - [Dawid] I really like Brilliant. It's one of those places where you can go in a visual gamified way to learn concepts and mathematics behind AI machine learning. - You've recommended this a few times to me. The way you said it was, David, if you wanna learn AI, I need to learn like statistics and stuff like that, right? - [Dawid] Yes, they've got these roadmaps that actually helps you with calculus and learning statistics and learning algebra, all the stuff that you need to know for AI. - I'll say this, Dawid is on my team. Really glad that he is. Dawid has strengths that I don't have, and I think that's what's really important in life. You need to learn from others. Dawid will tell us. You've done a lot of maths, and you've done a lot of computer science. You've actually worked with AI stuff, right? - [Dawid] I work in the medical field for with data science stuff. So I really think like you need to know all the statistics and calculus and linear algebra and the discreet mathematics that you need to learn, which actually makes a lot of coding a lot easier for you. - That's Brilliant. So I'm looking on their website now. The one that you've recommended that I go through is the Data Science Foundations, right? That's like probability, applied probability, statistics, fundamentals, and then an introduction to neural networks. And obviously me being me, I just skipped all of that. I went straight to learning neural networks. But as Dawid said, what I really like about this website is it's gamified, as he said, so really great way to get started. Really want to thank Brilliant for sponsoring this video. Brilliant, as they say in the UK, thanks. Everyone, it's David Bombal back with Dr. Mike Pound. Mike, welcome. - Thanks for having me back again. - Mike, it feels like the sky's falling again. You know, we had this interview previously, and it was all this hype about AI, but it seems to just be getting, you know, hotter and hotter. So tell me, is the sky falling? Am I gonna lose my job? Is the future bleak? - I think you're gonna be all right. - So relax. Relax. - Are you just bring me in to calm everything down a bit? That's, you know, I think that the last six months particularly have been, you know, both unbelievable in terms of genuine hype, like things that are really exciting appearing, and also obviously, totally overboard hype that's just getting really quite silly, and everyone needs to calm down, right? So I think there's a bit of everything going on. ChatGPT is an incredibly impressive tool that works very, very well. I've done some really fun tests of it where I've pushed to see what it will do, and some of the things it'll do are quite amazing, right? On the other hand, there are lots of things it doesn't do very well, and one of the big problems we have at the moment is it won't always tell you it's one of those things, and that's I think where we have something that needs addressing. - I've done some tests, and I've mean, a lot of people I know have done tests, and it's amazing what it seems to be able to produce. I think the concern a lot of people have is like, Mike, I'm 18 years old, or let's say I'm older. I wanna switch careers to become a programmer, or I wanna get into cybersecurity, or I wanna be a network engineer, whatever, some technical role, and it feels like I'm just gonna waste my time, because ChatGPT is just gonna obliterate jobs. - The first thing I would observe is that it's very nice for some of these big tech companies if that's the perception, because it makes 'em look very, very impressive, right? And so I think that the cynic in me a little bit is like, this is, you know, no PR is bad PR kind of a situation. They like to drop, you know, these tools get dropped as incredibly impressive tech demos, and I'm not selling them short, right? Very impressive, but maybe not quite as impressive as they first appear on the surface when you start to dig in, and I think that's what's really important. You know, in science, we spend a lot of time checking things and rechecking them, at least that's what we're supposed to do, right? So I, you know, a PhD student comes to my office with some results, and they say, \"Oh, we've got 95% accuracy on some task.\" And I think, okay, let's talk about which data you used, and whether that's really true, and whether when you use it on this new data, you're gonna get that same result. And we spend ages going over and over the data again to make sure that when we actually publish it, it's really as accurate as possible. Large language models are maybe not operating in quite that same way. Yes, they release papers from time to time, but mostly they release these big websites where you can try them out and they do incredibly impressive stuff, and they lie very impressively as well, right? And I think that's the thing that we haven't quite got around. So you know, suppose you are a programmer, and you've been using Copilot, and you've been using, ChatGPT also does code, and you're a bit worried because it's just producing pretty decent code. Maybe you don't see it replacing you right now, but you could see in 10 years, maybe that's gonna be a problem. I think the problem is at the moment is it's very difficult to know where it's going. I think a lot of researchers are suspicious of the idea that we can just make it continually bigger and bigger and more impressive, and it will just get better and better. You know, when we talked about how these models work. They don't really have an internal model of what it is they're trying to do, or anything really. They just map text to other text. You know, when I write a piece of computer code, what I'm really hoping to do is in my mind, come up with an idea of the problem that needs to be solved, so what the number, the variables and things that I'm gonna need, start to get them down on paper, and then start thinking about how would I manipulate those variables using code to produce the result that I want. ChatGPT doesn't really work that way. It just spits out code, right? And it happens, a lot of the time, to look pretty good. At the moment, it's a tool to be used quite carefully, particularly with code. I wouldn't push anything ChatGPT has written straight into production without, you know, quite a few tests, 'cause at the moment there's no grounding in reality, right? The reality is for training data, but once it's finished training, it's kind of random what it gets, and these things actually, I dunno if you've noticed this, David, but when you run it, it can produce different answers each time. - Yep. - And that's because it uses something called temperature to somewhat randomize its output. So instead of saying, okay, the next word in my output is gonna be the, it will say, I think there's an 80% chance that it's the, but it's a 20% chance that it's so. And then what the machine will do is say, well, okay, 20% of a time then we'll pick a different word, and that way you can go in slightly different directions, 'cause if you didn't do that, it would just produce a same output every time. It's not a random object sort of, it's not a random network in that sense. And so you can imagine a situation where there is a really good version of this program that it could write, but it randomly didn't, and produced one with loads of bugs. So you know, I seems- - That's what I've experienced, yeah, sorry. - Yeah, and you know, I suppose there's a question in my mind about how is there an efficiency saving if you have to audit everything you're reading, right? Is reading code as fast as writing code or slower or faster? I don't know, right? I'm undecided. I think sometimes for boiler plate codes, it's probably pretty effective. If it's a sort of code, you know, write me a for loop to do X, Y and Z, it probably works pretty well as long as you're capable of quickly checking that. But then it didn't take me very long to write a for loop anyway. I'm undecided, I suppose, as to how much of a game changer that will be. This said, I know there are developers that use it, right? And I know that there are developers who claim, or at least they think they're much more efficient. I don't spend as much time coding as I'd like, because, you know, as a professor in the university, I spend a lot of time teaching, a lot of time mentoring others, right? And teaching people, so they do the coding, and I sit there and look at it, right? So I haven't had as much experience as some. - Yeah, I mean I think the concern is always, you know, young people or people trying to switch careers is, you know, I want to have a job for more than a year or five years. Is it worth putting all the effort into learn this stuff if AI's just gonna take it away? - My gut tells me that AI isn't gonna take it away anytime soon, right? Because I think that, I would argue that you need something more fundamental to understanding some of these problems if you're gonna write code to solve them than just a text production mechanism. That isn't to say that what it doesn't do, it's very impressive what it does, but I think that as you start to build up, you know, it's all very well saying, \"Write me a for loop to do this.\" But if you want to write your class structure and a really complicated system, that's such a more, you know, it's like the difference between lane assist and self-driving, right? And that's why we've seen lane assist exist, but self-driving seems to be so hard to get to because of how much harder that is as a problem. And I think that it's very easy to fit a straight line upwards to these things, right? You say, \"Well, they didn't do anything, and now they're doing this, which means they're gonna be doing this.\" It may get a lot harder and plateau out, right? You know, it's difficult to say for sure. I think that there's gonna be a very strong need for people in the loop for a long time further, right? I mean, as an example outside of programming, in medical science, AI is obviously used quite a lot to help with diagnoses and things, but almost no AI systems are used just on their own with no human oversight, because for a start, because we don't trust them yet, and also because patients don't trust them. Patients don't want an AI, even if it's good, making their health decisions, right? Like not yet, you know? - Yeah. - And so I think also culturally we're not quite ready, and I know a few companies that are not using Copilot because they're not absolutely sure the copyright on the code and think, you know, there's questions that haven't been answered. I think if you are looking for to be a software developer or you're looking for a career in security or career in AI, there's still plenty of things to do, so I wouldn't personally worry about that. - I think we mentioned this last time, and I want to give people firstly, you know, a way to make themselves more valuable, and then a path to get there. You mentioned that, you know, if you attach AI to any skill that you've got, it's gonna make you more valuable. I assume that's still the case, and then I wanna ask you, Mike, how do I get there? - And it also makes you more experienced at dealing with things like this when something comes along. You can sit back and you can say, \"Okay, how impressive is this? Let's think about what it's doing and how it works,\" and you know, some understanding of how these things work. You don't have to understand deep down transformer networks if you wanna understand roughly what they're doing, right? And how they've been trained. Yeah, I would say some knowledge of statistical analysis and data, data processing in general is really, really important, right? People mock Excel. Excel's, I think, one of the best products ever written. It's totally ubiquitous, it's very powerful, and it underpins huge amounts of, you know, financial systems and other systems. I use it all the time for student marks, right? So you know, you get a table of data that comes in, and it doesn't make any sense. What we're gonna look at, how are we gonna deal with this, right? And how are we gonna make decisions based on this data? And things like data science and machine learning will help you deal with some of these problems. People who want to become experts in AI obviously need to delve a bit deeper, but I think for a lot of people, AI can just solve small problems in your pipeline that might make things a little bit easier. Having that extra string in your bow is not a terrible idea. - So in the previous videos, I told people you need to learn AI, and it's something that I want to really focus on this year, and this is why I'm talking to you, you know, right in the beginning of the year. Have you got like courses, places that I can go to, books that I can read, any recommendations of how do I go from like where I am now zero knowledge to at least, you know, getting down that path to be able to put it on my resume. - There are loads, there's loads of books and resources in Python to learn machine learning and data science, and that would be a great place to start. You know, I've said it before many times. I have a love-hate relationship with Python. I like it sometimes, and I don't like it other times. At the end of the day, there are libraries in Python that do quite incredible machine learning and make your life a lot easier, right? So we've got things like scikit-learn. We've got TensorFlow and PyTorch of course, but there are tutorials and books written around these things and they take you from don't know what this network is to I can actually get one of these networks running on a machine, and it's often not that much code. Because of these libraries do a lot of the heavy lifting for you, often it becomes more plug-in building books together than it does write, you know, writing your network layers from scratch, which, you know, we don't do anymore. You know, so you can start by just plugging some things together and I've got a rudimentary network that I don't really understand that's doing this classification, and before long, you've made your classification problem a little bit more complicated, and you've got multi-class classification, and then you've got a slightly different data set, and then you've solved a data augmentation problem, and you can add these things in, and slowly work towards a bit more experience. You know, I have, you know, a number of undergraduate project students every year. So in university in the third year, you often do a dissertation, which is like a focused project over a whole year. Often most of my dissertation projects are gonna be on AI and something like this, and you know, these are students who've done some, you know, machine learning maybe a little bit in their modules throughout their undergraduate, and they know how to code, but a lot of it's new. You know, we pick it up and we run with it, and we do some great stuff. I've got some students in the second year solving Rubik's Cubes using machine learning to detect where the colors are and things like this, and this is from scratch, right? So this is people who haven't done machine learning before, and I can point 'em in the right direction. I think it is very doable, and I think it's, you know, and it's fun as well, right? There's nothing more satisfying to me than you've trained a network and it's just classifying really accurately whatever it was you wanted to do. I basically, my job is looking at numbers go up, and I like when they go up. - So Mike, I mean, I'd love to come to you, Nottingham University and attend your courses, but obviously, I can't, and so can, you know, most of us can't. Do you have any like resources or ideas that things, places I can go to to learn? - Often, the first course I recommend for everyone is to take Andrew Ng's Coursera course, right? Very popular, I mean, I dunno how many times it's been taken now, millions of times. It's Andrew Ng's course, a Coursera course on machine learning. There is a deep learning follow up to it, which I haven't done, because partly I actually already know deep learning. But the machine learning course is really good. It's a good understanding of some of the key concepts in machine learning and not specifically about, yes, a little bit about how neural networks work and things like this, and it can be a little bit mathematical is my experience of it, but if you watch it anyway, you're gonna pick up a lot of tips and tricks, so things like watching your network train over time and reacting to how that works and doesn't work, and making decisions based on this. These are the things really I think that people who want to do machine learning in an applied way, you know, in a business or in an industry, that's what they need to better do. A lot of them are not gonna be writing neural networks from scratch or designing a number of layers in your network. They're gonna take a network that we know works, and run it on some new data, and if that works great the first time, then that's fabulous, but if it doesn't, what do you do then? And these are things that you're gonna learn and start to learn in that Coursera course. Yoshua Bengio and others have written a book just called \"Deep Learning,\" which is very popular. Again, obviously, it can go into a little bit of heavy maths detail, but it's very popular. I would say don't read it end to end. It's one to dip into while you're doing some tutorials to understand a bit more about the theory. And after that, personally, I would get, I would do the PyTorch tutorials or the scikit-learn tutorials. They can be directed at your own pace, and they will include, they'll give you experience in all those different things, right? There's tutorials on things like reinforcement learning, but also just standard CNNs and transformers, and things like this, and don't worry about, you don't have to do all of those on day one. On day one, we're talking about what is classification, what is regression, maybe get something little going, right? Really, you know, start yourself off nice and slow, and build up the complexity as we go, right? It's the same with any subject in computer science. You can't learn everything on the first day, so you just have to take it a little bit at a time. - I'm glad you mentioned computer science. Do you think it's time for more of us to learn computer science type stuff because of AI, like maths, and all these computer science stuff not really? - I think that it wouldn't, it's not necessarily for everyone to do that. I think that, you know, I would encourage everyone to do computer science, of course I would. But I think that sometimes both computer science and industry have a sort of reverse snobbery about each other, right? Which I don't like very much, so for example, computer scientists might say, \"Well, if someone didn't do a degree, you know, what do they really know about computers, right?\" Which is not true. And someone who got on fine without a degree might go, \"Why would I go and get student loans and do a degree?\" And different paths are all valid. I don't know why we're having this conversation, right? And I think there are elements of maths in machine learning which help I suppose me to understand it a bit better when someone comes with a particularly weird problem that doesn't, you know, they've added another layer, and it's not training, why is that, right? They also help me sometimes when I'm reading papers, because papers, they can have a lot of mathematical notation in, and sometimes that's not necessary, and they've just added it in. But often it's just to be absolutely clear about what they've done, and often the mathematical notation is necessary to achieve that rather than writing it in sort of flavorful text. But to begin with machine learning, you don't necessarily need to know those things. You know, you can train a network in PyTorch with a knowledge, a rudimentary knowledge of Python and following some tutorials, and you'll pick up the rest as you go. The really complicated math, like back propagation, which is how we train it, that's all taken care of under the hood. You don't see that. It's not something, unless you're really interested, it's not necessary to concern yourself with. - But I mean, the great thing is if I'm in industry, or I'm into cyber or dev or whatever, I can really enhance my career prospects in the future by just adding this on to my skills. - Yeah, and I also think that, and I mentioned it before, but I think the other thing is it makes you much more resistant to hype and to concerns over things. And also when someone comes to you and says, \"Oh yeah, I've trained a neural network to do X, Y, and Z,\" you can start to think doesn't sound very likely, right? That sounds like the sort of thing that maybe is a bit fanciful, right? Let's deal with, let's look at their data and see if that's actually true what they've done. And I think one of the reasons that ChatGPT and stuff have been so hyped recently is because most people don't know what it is. And so when you see it doing what it does, you think this thing must basically be a person, right? Because it's acting like one, but actually, it's only acting like one in a very narrow thing, and we know how it's trained, and how it's trained doesn't imply necessarily that it's got any human qualities, right? It might, but I don't, my gut tells me not quite, right? But the point is that I'm sort of more resistant to that in some sense because I know how it works underneath, and I sort of think I've trained all these networks and this is a bigger version of networks than I've trained myself. I don't see what's different about, what's so different about that that it would suddenly be unbelievably intelligent compared to anything else, if that makes sense. Some knowledge of how, what some of these technologies are, just like knowledge of, you know, some company's trying to sell you a new firewall with next generation antivirus on it that has all kinds of machine learning. Well, if you understand a bit about machine learning, you'll know what it will and won't do, right? And that will allow you to make a better informed purchase decision. And the answer is it'll work pretty well, right? But nothing's perfect, and machine learning is only as good as the training data and so on. So there's lots of things you can ask, and you can ask really difficult questions instead of people that come and try and sell it to you. Especially with things like Twitter in the news, it's very easy to get carried away in this hype cycle, right? Lots of technologies have this. It's in the interest of these companies to make these massive models of incredibly impressive performance. I think we're a long way from full automation of a lot of these tasks, even if it might appear that way at a sort of superficial level, but on the other hand, they're really promising in some other ways, right? So one of the things that I've found that ChatGPT is really good at is paraphrasing text and vice versa. So you have a text you don't quite understand, say \"Please can you read this and tell me what it means?\" or \"Please can you summarize these bullet points in an email,\" or something like this, you know? These kind of functions I think are actually working really well, right? Because those are functions that rely on the, they're text to text. They're meant for text to text, right? That's kind of what they're for, and I think that those are ones that are really, really good. I think code completion is useful when you are asking limited things that you can carefully check quite quickly. Don't ask it to produce a thousand lines of code that you're expecting to all be perfect, 'cause that's not what it will do, right? And you'll end up with a lot of weird bugs, or I mean, there was issues paper just released just the other day actually from Stanford that said that they audited code from about 30 to 35 researchers who some of them were using AI to produce some of the code, and some of them weren't, and the AI produced code had more vulnerabilities in it. And that's because when the AI produces code that works, but let's say it uses ECB mode in AS, or it uses a slightly weak key derivation or something, I don't know, something subtle, if they don't know about that subject already, they might accept that change, if that makes sense, right? They actually, so you need, this is why you need to still be an expert in your field, because you can't just rely on it to do it for you yet. You've gotta be there saying, \"I think that's okay,\" or \"I don't think that's okay,\" and make those decisions for yourself. Yeah, I mean, you know, it's a limited study, but like it's not that limited, and it makes a very valid point. I think the real danger is people who, and I should caveat this by saying I'm not selling short these incredible technologies. I'm just saying that it would be very silly to just completely use them blind and never check what they do, right? Because we know they just make stuff up a lot of the time. I think a bit of domain knowledge is always gonna help. - I mean, it's interesting, 'cause I did some tests with like Cisco devices, and it's amazing. Like first time it got a perfect, then I wanted to do it for a video, and then it wasn't good, and I did like five or six attempts, and none of them were perfect. - Yeah, I think- - If I didn't know what it was doing, I would've accepted it. Sorry, go on. - Yeah, and the other thing is that, you know, if you think about the data that it's trained on, it's got some 40 plus billion tokens, right? It's just internet text, we'll leave it at that, right? Loads and loads of text. Cisco related text is only gonna form a very, very small fraction of that. There is very little evidence, because it's not got a world model, because it's not got an understanding of the world where it can bring Cisco in and add it to its model, it's just doing text completion, and so when something is underrepresented in the training set, it's gonna probably be worse performing when it comes to actually running it later, right? So when you say, \"Write me something in the style of Shakespeare,\" it's gonna do really well, because there's Shakespeare all over the internet, right? Some tasks are gonna be very solvable because they're just, they're hugely represented in the training set. They work really well. And some tasks are really niche, and the problem is you don't know which ones are niche, 'cause you haven't seen a training set. I say \"Write me a link expression,\" and it does it really well, and when I say \"Write me a link expression using some other thing,\" and that isn't in a training set, and it produces me a wrong answer, and I don't know until I run it whether that's the case, so I have to understand and be able to read that code, because otherwise I can't possibly put it into my system. And it's just, it goes back to the exact same problem with medicine, right? It might be that we are absolutely confident that it's AI will look at this image and make the correct decision, but we're not absolutely sure. And while we're not absolutely sure, do we want to completely take a human out of a loop there? There's questions to, you know, we have to think about. - So do you think it'll become like the AI might do a lot of the low level donkey work for lack of a better word? - I think, yeah. - Sorry, go on. - I think that's much closer to what will happen. So I think in, there's a phrase in medicine called CAD or computer-aided diagnosis, and the idea is that instead of the doctor not making a decision, the doctor will be guided into a decision by the AI saying, \"We've noticed these spots over here in this image. Is that relevant to you?\" And it will speed them up, right? And if we can make doctors or medics 50% more efficient, that's a huge boost, rather than try and and put it all on the AI. And similarly, it works in code. If you can produce boiler plate code, if you can get it to bootstrap, Spring Boot configuration files for you, fabulous, do that, right? And then that saves you half an hour to an hour of doing some actual code or making sure that it works. But what I would avoid, you know, what I would avoid doing is trying to have it write everything for you and replace yourself, because I don't think it'll work. I think you'll end up really frustrated that your code doesn't get past any of your reviews because it doesn't work. - I was gonna say I love what you said though, because with that example at Stanford, if people had just accepted the code, there's hidden vulnerabilities in the code that wouldn't have been picked up. - Yeah, and then there's a combination of issues, right? Is it that the developer needs to know more about these subjects, or is it that there's someone that would normally be on that team that wasn't auditing that code, that would've been auditing that code at that time? You know, 'cause you have security teams sometimes who are specialists in this. But I think it's that same argument. In some ways, if someone has a small amount of knowledge of computer security, that might allow them to be more resistant when code appears that does this. And that's the same thing with the AI. If you know a little bit about AI, maybe you can be, you can better deal with it when something comes along. So I think a little bit of knowledge in lots of these things is often useful for that reason. - Mike, so how has this affected like university life? 'Cause I've heard people talk about how students can just get ChatGPT to write their essays and stuff like that, and you can't see the difference between a student and like a human story and ChatGPT. - Yeah, I think it's very subject dependent. I think that's one thing. So what we've done is we've done, we've actually been running some tests, right? 'Cause so you know, we're very kind now to drop this on us just before exams. - [David] Yeah, exactly. - Yeah, we've done some tests, and like, I think it depends on if I show, suppose we're doing a computer security exam, which actually I teach, so, you know, right? And I ask a very simple question, right? A question like what's a good encryption algorithm to use? ChatGPT can answer that. So it'll be unwise of me to ask that question in an exam, I suppose is what I would say. In some sense, I think it's another variant of a search engine. So if a student could, you know, we call it academic misconduct, right? If a student was gonna use a search engine to do that, they could also have a go at using ChatGPT. It has the advantage for that student that it's generating very plausible looking answers. Sometimes they're completely wrong, right? And those answers are gonna get marked very far down when they come in front of a convener. So I think your mileage may vary if you think you can get through a university degree using just AI tools. It's something we have to consider, right? Now, if some of our exams are face-to-face, they aren't really affected, right? You know, we're talking about coursework essays, and I don't know, I haven't spoken too much to other schools in university and other subject areas, but obviously, there are lots of essay based subjects, but they require very well written essays. ChatGPT has a habit of producing general answers to things, right? Which are sometimes very detailed, but sometimes not quite so detailed. Again, I think that your mileage would vary if you tried this. I suspect that it is possible to tell that they're written by ChatGPT to an extent, because it has a way of phrasing things that's quite common I've noticed as I produce answers. But that isn't necessarily all the time that that's gonna be a problem. It's something that every university on Earth is now looking at. So yeah, it's had a big impact, and you know, when you consider that this is just version one, right? And you know, there's gonna be a ChatGPT II probably, and Microsoft might release one, and Google release one, and so on and so forth. There's always gonna be one of these tools floating about. We have to just be prepared and think about how that's gonna work. - I think, I mean, the examples I've seen which have worked really well is like if I'm asked to write an essay about something, I can get it to write something that gives me a lot of ideas, and then I can just rephrase it in my own voice. But it helps you a lot from a study point of view, I suppose. - Yeah, and I think actually it does, and I think so in a way, that's a big positive, right? And there are some academics in this school for example, and across the world who operate in a kind of human computer interaction area who are very interested in could you end up writing a better essay if you worked with a computer to help you out, right? And in a way, is that not a win for the lecturers as well if that's the case? Now, I agree with that to an extent. I think that's absolutely right. I think that maybe we can't solve that whole discussion in a month, right? Which is how long it is until our exams. So you know, the clock is ticking somewhat in the short term for these issues, but in the longer term, I think they're gonna be really transformative in helping. You know, there are students who have, who are very, very intelligent, and they know all the subject area, but they're just not good at exams. They really struggle to get their thoughts down on paper. Maybe those students could really be helped by something like this, because if you give really specific prompts to ChatGPT, you get much better answers. If a student knows what they're doing and can work with the AI, I think that's gonna be much better. - I mean, I suppose you could have said the same thing for Google, or you know, using search engines. - Yeah, and that's the point that's been made. I mean, in some ways, I see on Twitter a lot, people compare these things to Google. I would not, because they're very different, and they have no source of actual data, right? That's the really important thing to remember. But they are a complimentary tool in many ways, and they operate in a similar way. If you were gonna try and answer an exam, you know, you would put the question in, you'd rephrase it, you'd see what came out. You'd see does that look plausible? I'm gonna try again, I'm gonna edit it, and so on, in the same way that you would, if you were doing, if you were using a search engine to write an essay as well. And writing, using a search engine to write an essay, and I don't wanna speak for every academic on the planet, right? But it's not necessarily plagiarism or misconduct. It depends on how you use it, right? You know, looking up sources online is absolutely to be encouraged. It depends on how you're doing this. I think in the long term, we will get a nice balance, actually, between using it too much and not using it enough. And I think actually there's another thing, there's another aspect which is I think this plays into your, this is relevant to your channel's viewers, is that you don't, you shouldn't think of doing a degree or writing a coursework as just about getting a mark, right? That's very easy to think about that. But actually it's about learning something that you can then take and use in your career or something like that, right? We don't teach people to program so they pass the exams. We teach 'em the programs so that they can go off and be software developers. If you used AI to write all your work for you, then you get out and you wouldn't be able to get a job, and you wouldn't be able to work in that job, because you wouldn't be able to do any of the computer science. Actually, I think that if you've got, 'cause I've quite a lot of learning and I love to learn about new topics, particularly, you know, around computer science. I would never use ChatGPT to cheat, because I wouldn't know any of it then, right? And you know, and I like to learn about these things. You know, if you wanna become an expert in something, then you're gonna need to learn it. You can't read what ChatGPT wrote. A lot of it comes down to hoping that students, and try and encourage students to think that it's about the process of learning and where they get to at the end, rather than specifically about a series of kind of barriers of exams that they have to get through, right? Which I think is not a good way to look at a degree or any course, really. You know, it's much better to think about where you'll be at the end, right? And you'll be in that much better position to do what you wanna do next. - That's exactly right. I mean, it's like certification exams, same thing. You know, you can go and get all the answers on the cheater sites, or you can actually learn something. - And you haven't done yourself any favors if you get it off, 'cause you might get a job based on that. It's not gonna go well, right? Because you don't have any of the knowledge. You'd always feel like you don't have any of the knowledge as well, right? You know, actually, it doesn't take that long to learn these things if you really put yourself to it, and you'll be in such a much better position afterwards. - Mike, as always, I really wanna thank you for, you know, sharing your knowledge, and, you know, separating the hype from like, the worries about people's futures. Thanks so much for making a (indistinct). - Yeah, it's no problem. I'm glad to be on again. It's been really, really, really good. - Brilliant, thanks, Mike. - Thanks. (upbeat music)",
    "transcript_keywords": [
        "things",
        "lot",
        "machine learning",
        "code",
        "learning",
        "time",
        "thing",
        "computer science",
        "learn",
        "people",
        "write",
        "bit",
        "data",
        "yeah",
        "science",
        "work",
        "computer",
        "machine",
        "ChatGPT",
        "stuff"
    ],
    "transcript_entity_values": [
        "first",
        "UK",
        "the end of the day",
        "six",
        "Microsoft",
        "Dawid",
        "Spring Boot",
        "half an hour to an hour",
        "Earth",
        "Stanford",
        "95%",
        "the beginning of the year",
        "the other day",
        "TensorFlow",
        "ECB",
        "the third year",
        "50%",
        "Mike Pound",
        "Cisco",
        "Mike",
        "the first day",
        "PhD",
        "five",
        "millions",
        "PyTorch",
        "linear",
        "Twitter",
        "Rubik",
        "Coursera",
        "10 years",
        "more than a year",
        "Yoshua Bengio",
        "zero",
        "a month",
        "the second year",
        "Cubes",
        "Excel",
        "this year",
        "Andrew Ng's",
        "a whole year",
        "David",
        "Google",
        "some 40 plus billion",
        "Python",
        "the last six months",
        "AI",
        "one",
        "the Data Science Foundations",
        "five years",
        "CAD",
        "day one",
        "80%",
        "thousand",
        "firstly",
        "PyTorch",
        "18 years old",
        "Twitter",
        "20%",
        "Coursera",
        "about 30 to 35",
        "David Bombal",
        "Shakespeare",
        "Nottingham University",
        "Deep Learning"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "GPE",
        "DATE",
        "CARDINAL",
        "ORG",
        "PERSON",
        "PRODUCT",
        "TIME",
        "LOC",
        "ORG",
        "PERCENT",
        "DATE",
        "DATE",
        "ORG",
        "ORG",
        "DATE",
        "PERCENT",
        "PERSON",
        "ORG",
        "PERSON",
        "DATE",
        "WORK_OF_ART",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORG",
        "DATE",
        "DATE",
        "PERSON",
        "CARDINAL",
        "DATE",
        "DATE",
        "PRODUCT",
        "PRODUCT",
        "DATE",
        "PERSON",
        "DATE",
        "PERSON",
        "ORG",
        "MONEY",
        "ORG",
        "DATE",
        "ORG",
        "CARDINAL",
        "ORG",
        "DATE",
        "ORG",
        "DATE",
        "PERCENT",
        "CARDINAL",
        "ORDINAL",
        "PERSON",
        "DATE",
        "ORG",
        "PERCENT",
        "PRODUCT",
        "CARDINAL",
        "PERSON",
        "PERSON",
        "ORG",
        "WORK_OF_ART"
    ]
}