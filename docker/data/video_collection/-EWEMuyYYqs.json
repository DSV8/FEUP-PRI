{
    "id": "-EWEMuyYYqs",
    "title": "Can ChatGPT and Google Bard build me an Exam Quiz Website?",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2023-07-16T14:00:00Z",
    "video_url": "https://www.youtube.com/watch?v=-EWEMuyYYqs",
    "category": "People & Blogs",
    "tags": [
        "python",
        "javascript",
        "ai",
        "bard",
        "chatgpt",
        "ccna",
        "security",
        "cybersecurity",
        "hack",
        "hacking",
        "hacker",
        "comptia",
        "exam quiz",
        "ai exam",
        "ai quiz",
        "artificial intelligence",
        "google ai chatbot",
        "ai sentient",
        "terminator",
        "elon musk",
        "google ai",
        "machine learning",
        "cyber",
        "cyber ai",
        "ai cybersecurity",
        "google bard",
        "gpt3",
        "gpt4",
        "chatgtp",
        "hacking ai",
        "hack ai",
        "ai hacking",
        "ai cyber",
        "cybersecurity ai",
        "chatgtp python",
        "chatgpt c",
        "chatgpt hack",
        "chatgpt chatbot",
        "google colab",
        "chat gpt",
        "iphone",
        "chat gpt 4",
        "chat gtp 3.5"
    ],
    "views": 37237,
    "likes": 863,
    "comments_count": 107,
    "description": "Will AI help us prepare for our exams? I created an AI exam Prep tool using Python, ChatGPT and Google Bard and a full website to test myself on various topics - networking and cybersecurity in this demo. Use  and coupon code: DAVIDBOMBAL to get an extra discount on your hosting. How good are the questions that the AI created. Or did they hallucinate and come up with nonsense?  Big thank you to Hostinger for sponsoring this video! Hostinger have created an exclusive 10% coupon code: DAVIDBOMBAL - this could give you up to 91% off on all yearly hosting plans. Please use the link:   // Github scripts //   // PDF instructions // ChatGPT & Bard quiz:   // OpenAI links // Tokenizer:  OpenAI API documentation:   // David's SOCIAL // Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:  YouTube:    // MENU // 00:00 - Can AI help us? 00:37 - Creating Websites with ChatGPT 01:06 - Temperature 01:45 - Python Script 02:28 - CCNA Questions 04:01 - Security+ Questions 04:39 - Google Bard Questions 07:39 - Hallucinations 09:39 - Hostinger Website Setup 12:52 - How to Use API in Python Script 21:30 - Using GPT-4 to Create a Website 28:49 - Outro  python linux ubuntu ai chatgpt google bard bard quiz ccna security comptia  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   Disclaimer: This video is for educational purposes only.   #python #linux #chatgpt",
    "description_links": [
        "https://hostinger.com/davidbombal",
        "https://hostinger.com/davidbombal.",
        "https://github.com/davidbombal/hostinger_quiz_website",
        "https://davidbombal.wiki/chatgptbardquiz",
        "https://platform.openai.com/tokenizer",
        "https://platform.openai.com/docs/introduction/overview",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal"
    ],
    "transcript": "I'm going to show you how changing the temperature with an AI causes hallucinations. I'll be back In this video, I'm going to show you how to interact with ChatGPT using a simple Python script and the API. We're actually not just going to use ChatGPT. I'm going to show you how to use ChatGPT, the GPT-3 API, and also show you that you can use a website using GPT-4. At a recent Google I/O conference, Google opened Bard to more than 180 countries, and Bard can now also generate code. So we gave it exactly the same instructions as we did ChatGPT to see if it could do something similar to ChatGPT. Before continuing, I want to thank Hostinger for sponsoring this video. This website is running on Hostinger. It's very simple to create websites such as this and many others using Hostinger's platform. Now again, AIs can do many things, but the question is can you trust them? In this example, we used ChatGPT to create CCNA quiz questions, Security+ quiz questions. So we've also created CCNA questions using Google's Bard. Let's see how good these AIs actually are. I'm going to show you how changing the temperature with an AI causes hallucinations. Now you may ask what is temperature? Temperature is a parameter used by AIs such as ChatGPT that governs how random the answers are and thus adjust the creativity of the responses that we receive. If you want to get the same answers, you would set the temperature to zero, but if you adjust that closer to one, ranges from zero to one, you may cause the AI to hallucinate. When I've interviewed AI experts such as Dr. Mike Pound, he warned us that AI will confidently give us the right answer, but also confidently give us the wrong answers. Here's an example of a simple Python script that we are going to use. We're going to use an API key, which you'd need to get. This one will be removed by the time you watch this video. We are then going to choose the model. So either gpt-3.5-turbo or DaVinci. The models are similar in capabilities, but gpt-3.5-turbo is cheaper. The responses that you get back from GPT-3.5 are in a JSON format, per our script, but you'll need to edit the JSON file because it doesn't come back correctly when using GPT-3.5. DaVinci gives us a working JSON file that we can then upload to our website. Okay, so this is the website that we've created. I prefer looking at this in dark mode. So here's the website using dark mode. Let's have a look at the CCNA questions and I'll simply scroll down to the bottom and click submit. What we've got the AI to do it give us a question, give us various answers so A, B, C, D, and tells us if we got the answer wrong. So in this example, the answer is incorrect. Now, this is just a demo website. We should have selected A, B, C and D rather than just selections like this, but you can improve this website for yourself. I just wanted to show you how you can use a simple Python script and some code to create a website that allows you to create quiz questions. Okay, so let's check how good the questions are. As an example; What protocol is used to automatically assign IP addresses to network devices? We were told that DNS is the incorrect answer. The correct answer is using dynamic host configuration protocol or DHCP. That is correct. We were also given other information about DNS as an example. Here's one which I'll point out in a moment with regards to hallucations. What is the administrative distance of an OSPF route? We were told that the answer is 110, not 90. Administrative distance is a metric used by routers to choose the best path when there are multiple routes to a destination when using different routing protocols. So as an example, if you've got OSPF and you've got BGP or EIGRP, how do you determine who is giving you the best information? Now, I don't want to turn this . into a CCNA class. I just wanted to show you that various questions are created by ChatGPT and you could use that to study for your exam. Here's an example with Security+. So I'll scroll down and click submit. Here's an example question which are the following cryptographic algorithms is considered asymmetric and we're told that RSA is asymmetric. AES, 3DES, Blowfish are symmetric algorithms with an asymmetric algorithm. A different public and private key is used for encryption and decryption whereas with symmetric, the same key is used. So at the moment, the questions are looking great. Here's another question which are the following terms, describes the process of converting plaintext into ciphertext and the answer would be encryption. Okay, so not to be outdone, but let's see what Google Bard does. Does it do any better than ChatGPT? So I'll once again just click submit to submit the default answers and in this example, one of the problems with what Bard did is it doesn't seem to be very good at doing multiple choice questions because in most cases the correct answer is A. And some people might say we're doing a quiz if you're unsure of the answer, just choose A. Now if Google Bard was creating those questions, that would be true in this case because notice most of the answers are A. Here's one that tells us D is the correct answer, but for most questions the answer is A. The Bard didn't do so well here, but let's check one of the questions. It says what is the difference between a hub and a switch? A hub broadcasts traffic to all ports while a switch only sends traffic to the port that the destination device is connected to. Okay, so let's be a bit pedantic here. A hub doesn't broadcast traffic out of all ports. It floods traffic out of all ports. So when traffic arrives on a single port, it gets flooded out of all the other ports. You could perhaps say that that's a word that you could use, but generally a broadcast is where traffic is sent from one device to all other devices in the network. We're using a specific MAC address as an example. So flooding would probably be a better term, but broadcasting kind of gives you the idea of what it's doing. And that's actually not entirely correct because it floods the traffic out of all ports except the port on which it was received. So if you want to be pedantic about it, you could be. It tells us that a switch only sends traffic to the port that the destination device is connected to. That is kind of true if it's a Unicast frame. So if it's a Unicast frame and we've learned where the destination MAC address is, then the traffic is sent only out of that port. But if I don't know where the destination address is as a switch, I will flood the traffic like a hub out of all ports except the port on which it was received until I've learned where the destination MAC address is. And again, that's for Unicast traffic. For Multicast traffic or Broadcast traffic, the traffic is often flooded out of all ports or out of ports where devices have subscribed to the multicast and the switch is using a protocol called IGMP that understands where those devices are and has learned that certain devices have subscribed to the multicast. So that's getting a bit pedantic, but in the weeds here, probably at CCNA level, you may not know all of those details. So you need to be careful once again with AI and the questions that it gives you. So here's the one where it says, What's the difference between a Broadcast and a Multicast address? A Broadcast address is used to send data to all hosts on a network, while a Multicast address is used to send data to a group of hosts on a network. Now, that's kind of correct. I could be pedantic about that answer again, but that kind of gives you the idea. Broadcast means everyone receives the frame on the local subnet or local VLAN. Multicast means everyone who's subscribed to that multicast will receive the traffic. So that's kind of correct. Okay, so we've been able to create some quiz questions and get the answers from those quiz questions and build a website showing that information. But you need to be careful now, because in this example, we set the temperature up and now the AI is starting to hallucinate. Be careful just trusting the responses that you get back from an AI. I'll scroll down. We've got more questions here. I'll click submit. Let's have a look at AI hallucinating. So we didn't edit these questions. These are the questions that we got back. What is the maximum distance of an EIGRP route? We are now told that that's 120, which is incorrect. 90 is the correct answer and that's not even shown here. That's totally wrong. Now, the questions may not just be wrong. Some of them may just not make sense. As an example, what is the maximum number of routers that can be connected in a single broadcast domain with Ethernet technology? And we're told that the answer is C. So, 254. But think about that. Who in their right mind is going to put 254 routers on an Ethernet segment? And is that actually correct? Because that's determined by the subnet mask, not by Ethernet. If I decided to use a /28 mask as an example, I wouldn't have 254 hosts on that segment. I mean, let alone routers. Who in their right mind is going to put 254 routers on a segment? So this is where it starts looking a little bit off. And it tells me that the cable used to connect two routers is a serial cable. Now, that may have been true when I was younger. In the old days, you may have used a serial cable to connect two routers together. But these days, we typically use Ethernet. And if you notice here, they don't really give us the right answer. Like, what is a LAN cable? Is that an Ethernet cable? What are they talking about? Coaxial cable? Fiber optic cable? I mean, fiber could be used on the LAN. Coaxial cable could be used on the LAN. Are we talking about UTP cable? So, as you can see here, things are starting to look wrong. And here's another example with OSPF. We're told now that the default administrative distance of OSPF is 90. But if you remember back to the first example, where the AI wasn't hallucinating, it gave us a different answer. I'm going to show you quickly how to set up the website. And then I'll get into the more technical details to set up our website on hosting here. The first thing we need to do is click the setup button. After that, we can select start now. We then confirm that the website is for our personal use. Next, when we're asked who will be creating or constructing the website, we select the option, we'll be building the website ourselves. As for the website type that we're going to create, we select the option other when asked whether we require assistance to build the website. We'll select decline. We'll then proceed by clicking on create a new website followed by selecting the other platforms option. We can see that hosting support is available for a whole bunch of different platforms. For the current task, however, we'll bypass the additional options by clicking skip, which allows us to create an empty website. At this point, we can claim our free domain name. The domain name that we're going to use is DavidBombalQuiz.com. However, if we want to finalize the domain registration, we need to provide some additional information at this point. As a final step before website creation, we alter our server location to the United Kingdom. It's worth noting that you're free to choose any location, depending on what your preference is. Once we finish these settings, we can click finish to complete the setup. Hosting will then initiate the server setup process. After the process is successfully completed, we can click manage your website. I've added a link below this video, which takes you to GitHub, where you can get all the files that we used to create this website. It's very, very simple. As an example, here's the JSON file for CCNA. You can see the quiz questions for the CCNA quiz. There's the hallucinations JSON file. Various other files used to create the website. This is the website running on Hostinger. If I go to file manager and public HTML, I'm going to upload files. Select open and there you go. The files are uploaded and then I'll visit the preview. So this is a preview of the website. If I go to CCNA, you can see the questions have been created and notice A, B, C, D are the options shown. And if I click submit, notice there are the answers. So it's as simple as that to create the website with the files that I've linked below. Now a very popular option is the premium web hosting package, which is priced at $2.99 per month. This package allows you to create up to 100 websites. It also includes a free domain name, worth $9.99, which means that you can create your website, host it and have a domain pointing to it. that website. Whole bunch of benefits and options available on Hostinger including unlimited free SSL certificates, weekly backups, cloud flare protected name servers, a malware scanner, and a host of other bonuses. Have a look at their website for more details. We didn't use WordPress to create our website, but they do have a WordPress option. So you can use the one-click option to install a WordPress site, making it very, very easy. That's a great option if you want. For instance, create a personal blog. Now to get an additional 10% discount, use my link below or go to https://hostinger.com/davidbombal or put the coupon code David Bombal in a checkout to get that additional 10%. But now the part that you probably most interested in is how to use the API and a Python script. Now to help you set this up, my team and I have created a PDF, which you can download using the link below. This is the original PowerPoint. Basically, we're showing you step-by-step how to set up this environment. In other words, how to register with ChatGPT. So all those steps are shown in the PDF. I'm not going to go through that in this video because it's a fairly simple process. But what's important is I want to show you how to set up the Ubuntu environment. So in this example, I am running Ubuntu in a Virtual Machine. I'm simply using VMware Workstation. Player, but you could use something else if you like. So lsb_release -a. You can see I'm using Ubuntu 22.04.2 LTS. So I'd recommend that you use that, but you could use something else if you like. First thing we need to do is install Python 3 pip. So before I do that, I'm going to type sudo apt update to update my references, put my password in. Okay, so references have been updated. So sudo apt install python3-pip. And we're going to say yes to all the prompts. Okay, so that's been done. Next step per the PowerPoint presentation is to install OpenAI. So pip install openai. Install OpenAI. As you can see that's busy installing. And there you go. Now we need to install Visual Studio code. You could use something else if you wanted to, but I'm simply going to go to the Ubuntu software catalog and I'm going to search for Visual Studio code. Okay, so first hit is the software, and I'll click install, put my password in. Software is now installing. Okay, so that's now installed. I'll run the software. So we've got Visual Studio code installed, but what I want to do is add . I'm going to add some extensions and search for live server. What I'll do now is install that live server. This allows me to run the code locally rather than having to have a website to run it on. It obviously makes more sense to run it on Hostinger or another website, but in this example, I'm going to run the code locally initially. Okay, so that's now installed. What I'll do is connect a USB to the Virtual Machine so that I can get the code from the Virtual Machine. So here's the code, which I'll copy to my home directory. I'll create a folder called GPT, and I'll paste that code in. Again, I've put links to GitHub below so that you can have a look at the code yourself and use the code yourself. So what I'll do is open up this folder using Visual Studio Code. Now we're asked, do we trust the authors? I'm going to say yes, I do trust the authors because my team wrote that. I'll just zoom in here. And you can see there's code now in that directory. This was copied from a Mac. So there's some additional files there that are not important. The important piece is index. And what I'm going to do now is go live with that. That should start the live server. And there you go. The website is now running locally on my Ubuntu server. If I click on CCNA, you can see there the questions. If I scroll down and click submit query, you can see that it's showing the answers to the incorrect questions. So I could go to the hallucinations as an example, scroll all the way down. Click submit and there you go. It's now hallucinating about EIGRP administrative distances. What I'll do now is close the server. So server is now closed. And what I'll do here actually is open up a file. I want to open up the chatgpt-api Python file. I'll allow untrusted files and click OK. We asked whether we want to install their recommended extension for Python yes. We do. So I'm going to click install Python extension is now being installed. OK, so that's now installed. I'll go to chatgpt-api.py I'll close some of these tabs. So here's our ChatGPT API. And I'll click play to run the code. So as you can see, the code is now running while we're waiting for the code to run. Notice what we're doing is we importing openai. We're using an API key. That key will no longer be valid by the time you watch this video. You'll have to get your own API key. In the PDF link below, I'll show you how to do that once again, you go to openai.com/product. You sign in with your previously created account. And then on the right On the side, you view your API keys and then you can generate a new API key. OK, that code is completed. So if I type ls, this is the file that was created. Notice the file name there in the code. OK, so here's the file, which I'll open up with a text editor. You can see the JSON file there. Now that's obviously not very nice. So what I'll do is go to file, open file. There's the file that we've just created. So ccna-chatgpt.sjon, click open and there's the JSON file that was created. But notice the file isn't formatted properly. You'll have to format that yourself. If I compare that to the CCNA file that's actually being used in the program, notice there is the actual formatting. So if you use this script, you'll have to edit the file. And that's the point about using GPT-3.5 -turbo versus DaVinci. Even though it's much cheaper, you may still have to go and edit the file but let's go back to our script. This is once again generated by gpt-3.5-turbo, which means you'll have to edit the JSON file manually. What we're doing here is sending a message to the API to tell ChatGPT to act as the examiner for the CCNA exam and then to create 10 CCNA exam questions that should be JSON formatted with question option A, B, C, D, correct answer and explanation. And then we want to . We write that to the file and that's the file that it created. So let's run GPT rather than ChatGPT. Okay, so this is DaVinci. Notice similar type of code, we're importing openai. We're using the API key, but notice here we're specifying text-davinci-003 rather than gpt-3.5-turbo. This is the latest model available to the public. There is a beta of GPT-4, but we're not using that here because that's only for a closed group of developers. Here what we're doing is we're generating a certain number of tokens. We are setting the temperature and let's set it to zero because otherwise it starts hallucinating. We specify the max tokens are set to this. Number of outputs is set to n. Okay, so I've explained temperature already. Now there's a cost to use tokens. So you may want to restrict the number of tokens used to optimally use the number of tokens we can enter the following in ChatGPT. So platform.openai.com tokenizer and then it can ask you the number of tokens that would be required to run that query. We're then opening up a file in this case called ccna1.json. So let's change that file to ccna-davinci.json and let's run that script. So you can see the script is running. Okay, so that's completed now. I'm going to go file open, select ccna-davinci.json. Now notice the output. of the DaVinci JSON file is a lot better than the output of the ChatGPT version. With just a little bit of editing, I can get this file in the correct format whereas the ChatGPT JSON file needed a lot of editing to get it into the right format. Now this is the format that JSON needs to follow. The AIs often don't use this format. So when they generate the JSON code, it needs to be manually fixed. You're not going to get a perfect representation of this JSON in our experience. In this video, I've shown you that sometimes the JSON is better, sometimes it's worse, but you'll probably going to have to manually edit it to get it perfect for the quiz questions used on the website. So the DaVinci is a lot more powerful but costs more. So you probably want to use GPT-3.5-turbo for most applications just because it's cheaper, but you can use text DaVinci if you want more power and not have to edit the files. Now you can actually ask GPT-4 to help you create a website. We actually did that when we created the website for this video. If you want to do this yourself, use the PDF which I've linked in the description below. We are showing you basically how to do what I'm going to demonstrate now. The PDF shows you how you can build a website similar to What I've demonstrated in this video is using ChatGPT and GPT-4. This can also be used as a learning tool if you want to learn JavaScript as an example. ChatGPT is powerful, but GPT-4 takes us to the next level and can be used as a powerful tool for quick prototyping as was demonstrated in Greg Brockman's GPT-4 developer live stream. It's amazing how you can literally just hold up a sketch of a website and then GPT-4 can use that information to create a website. We'll create a layout with code by only using prompts given to the AI. Now as a disclaimer and warning, in no way is this best practices and a prompt engineering demo. If you want me to create videos about prompt engineering, please let me know in the comments below. Now I'm going to show you the ChatGPT website builder script. First, we need to open up a web browser and navigate to the ChatGPT website. Once we are on the website, we select GPT-4 from the available choices. At this point, we need to access the PDF document that my team has prepared. Open the document and locate the desired prompt. We copy that prompt into the ChatGPT prompt text area. We ask GPT to create the following. Design a responsive web page featuring the following elements. We firstly want GPT-4 to create a navbar with a distinct shade of purple. On the left hand side of the Navbar, we should have the option to load a logo. On the right hand side of the Navbar, we want to display the text. David Bombal, ChatGPT quiz questions. We want GPT-4 to generate a centered card that features a 500 pixel photo of myself. Beneath the card with a photo, we want to include 4 buttons. Each button should have a clear label and serve as a navigation or action item. These buttons should say CCNA, CCNA Bard, Security+ and Hallucations respectively. We now click submit to submit the prompt and wait for ChatGPT to generate the output. Once the code is being generated, we open up a terminal. We use the Linux command, make directory (mkdir) to create the folder website. We cd into that folder and then use the command code dot to launch the folder in Visual Studio code. In Visual Studio code, we need to create a file called index.html. We now paste the index HTML code generated by ChatGPT into the index.html file we created. We see that ChatGPT created a stylesheet called style.css. We create the style.css file and copy the code generated by ChatGPT into the style.css file. We can now run a live server to see what ChatGPT came up with. It quickly built a layout similar . to what we described. You can now make some tweaks to the CSS to make it more visually appealing. I saved the photo, logo, main.js and the JSON files which we prepared earlier on my desktop. We'll now use the move command (mv) in Linux to copy it or move it to my website's folder. I'll ran the ls command previously to list the files on my desktop. It helps me when I need to see which files to add or put after the move command. The list of files I want to move is followed by the path of our website's directory. It's time to make some changes to our index.html file. We've got this logo .jpg file in there right now. Remember that that's just a placeholder that ChatGPT put in there as a placeholder to get us started. But we don't want to use that. We have our own logo. We're not done with our index.html file just yet. We've got another image in there. This one set to 500 pixels high. But right now it's not loading the image that we wanted to load. We just copied over a nice picture of ourselves that we'll use instead. Now it's time to run a live server again to see how the updates changed the website. Okay, so this is great. The website is starting to take shape. If you look at the code in main.js, you'll see the script starts with the declaration of four. references, which use the # CSS selector, which is for the IDs. We currently don't have any IDs in the HTML. The references that we want are for the buttons. So we need to assign the corresponding IDs to the buttons in the index.html file. You will now assign the correct ID to each of the buttons. There is an event listener connected to the click event on each of the buttons. The function that runs on each button sets up a session, a variable called quiz, with the correct path to the JSON file, which quiz.html should load. We'll now get the prompt to create the quiz HTML page from the PDF. We copy the prompt and paste it into the ChatGPT prompt text box. We want to have a Navbar. It needs to have the ability to load our own logo. We also want to make sure that the Navbar displays the type of exam that we're dealing with. Don't worry, it's completely customizable. So you can specify the exam type and make it your own. We want to include a special spot on our Navbar to showcase our score on those tricky questions. We need to add a card for our website, a designated area for our questions. We'll give it a catchy heading that simply says questions. Inside that card, we want to have an empty form element. We'll load the questions dynamically to the form. We now submit our prompt. We create a file called Quiz.html we want to paste the HTML generated by ChatGPT into the quiz HTML file. We can now remove unnecessary CSS rules. We then go to the quiz HTML file and run live server to see how it looks. GPT-4 didn't do a good job at resetting the CSS rules. So we add a margin zero and padding zero as rules to the body element in the styles quiz CSS file. Now this looks a lot better. I copied a file loadquestions.js to the folder. We now need to load the script loadquestions.js into the quiz HTML file. We do so by creating a script tag with source loadquestions.js. The loadquestions.js script will be responsible for loading the questions dynamically from the JSON files. It uses the quiz session variable that we created earlier to make the decision on which JSON file to load. We then copy extra CSS rules to the styles_quiz CSS file. These rules will make the explanation answers visible when you get a question wrong. When we press the submit button, it's obvious that there's an error in the code breaking the website. When we click to see what type of error it is, it quickly becomes clear that the error has to do with the score variable, which uses the querySelector to get a reference of a class called score. But the HTML only has an ID called score. In our HTML, we change the score ID attribute to a class attribute. And now when we click submit, you can see that the website works. Hopefully, I've shown you now how to use GPT-4 and ChatGPT to create your own website. And with a bit of editing, get it to look really nice. It's well worth your time learning how to leverage AI to make your job easier, right quicker code. And hopefully better code. I want to thank Hostinger once again for sponsoring this video. Really appreciate them supporting me, helps me to create content like this. I'm David Bombal and I want to wish you all the very best.",
    "transcript_keywords": [
        "JSON file",
        "website",
        "file",
        "questions",
        "code",
        "Visual Studio code",
        "JSON",
        "create",
        "ChatGPT",
        "quiz HTML file",
        "CCNA",
        "files",
        "answer",
        "quiz questions",
        "ChatGPT JSON file",
        "click",
        "Studio code",
        "API",
        "quiz",
        "HTML file"
    ],
    "transcript_entity_values": [
        "these days",
        "Linux",
        "JSON",
        "LAN",
        "Mike Pound",
        "two",
        "Visual Studio",
        "four",
        "ccna-davinci.json",
        "Bard",
        "the United Kingdom",
        "more than 180",
        "Google",
        "WordPress",
        "Python",
        "Linux",
        "Hallucations",
        "3DES",
        "UTP",
        "Hostinger",
        "David Bombal",
        "the Virtual Machine",
        "USB",
        "10%",
        "EIGRP",
        "quiz.html",
        "GPT-4",
        "API",
        "4",
        "VLAN",
        "9.99",
        "one",
        "PowerPoint",
        "Greg Brockman's",
        "weekly",
        "110",
        "HTML",
        "PDF",
        "90",
        "Bard",
        "DNS",
        "CCNA Bard",
        "DaVinci",
        "first",
        "500",
        "Google Bard",
        "Mac",
        "120",
        "CCNA",
        "Ubuntu in a Virtual Machine",
        "2.99",
        "DaVinci",
        "IP",
        "Ubuntu 22.04.2 LTS",
        "up to 100",
        "AI",
        "the old days",
        "an additional 10%",
        "MAC",
        "First",
        "Broadcast",
        "DHCP",
        "BGP",
        "CCNA",
        "Blowfish",
        "10",
        "254",
        "RSA",
        "IGMP",
        "Ethernet",
        "AES",
        "#",
        "Unicast",
        "zero",
        "CSS",
        "Navbar",
        "OSPF",
        "JavaScript",
        "GitHub",
        "CCNA",
        "GPT",
        "VMware Workstation"
    ],
    "transcript_entity_types": [
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "PERSON",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "PERSON",
        "PERSON",
        "GPE",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "GPE",
        "PERSON",
        "ORG",
        "ORG",
        "PERSON",
        "PERSON",
        "ORG",
        "ORG",
        "PERCENT",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "CARDINAL",
        "ORG",
        "MONEY",
        "CARDINAL",
        "PRODUCT",
        "PERSON",
        "DATE",
        "CARDINAL",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORDINAL",
        "CARDINAL",
        "PERSON",
        "ORG",
        "CARDINAL",
        "NORP",
        "PRODUCT",
        "MONEY",
        "ORG",
        "ORG",
        "PRODUCT",
        "CARDINAL",
        "ORG",
        "DATE",
        "PERCENT",
        "ORG",
        "ORDINAL",
        "WORK_OF_ART",
        "ORG",
        "PRODUCT",
        "WORK_OF_ART",
        "PRODUCT",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORG",
        "ORG",
        "ORG"
    ]
}