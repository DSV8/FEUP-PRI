{
    "id": "xhL5Usvklpo",
    "title": "Traceroute explained // Featuring Elon Musk // Demo with Windows, Linux, macOS",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2022-03-04T15:00:37Z",
    "video_url": "https://www.youtube.com/watch?v=xhL5Usvklpo",
    "category": "Science & Technology",
    "tags": [
        "ccna",
        "ccna 200-301",
        "cisco",
        "cisco ccna",
        "elon musk",
        "elon musk speech",
        "elon musk traceroute",
        "elon musk traceroute mind virus",
        "elon musk traceroute tweet",
        "internet",
        "kali linux",
        "linux",
        "traceroute",
        "tracert",
        "windows",
        "windows 11",
        "wireshark",
        "tracert command",
        "tracert hacker",
        "tracert ip address command",
        "ping",
        "ping wireshark",
        "icmp",
        "ipv4",
        "icmp protocol",
        "icmp explained",
        "icmp wireshark",
        "traceroute command",
        "traceroute linux",
        "traceroute example",
        "traceroute icmp",
        "traceroute tool",
        "traceroute windows"
    ],
    "views": 131976,
    "likes": 4455,
    "comments_count": 264,
    "description": "Does Elon Musk actually understand how the Internet works? Can he explain traceroute and tracert properly? Well... let's see... I'll demonstrate how multiple operating systems: Windows 11, MacOS, Linux use traceroute.   There are differences including the fact that Windows uses ICMP, but macOS and Linux use UDP and ICMP.  Full Elon Musk Interview:   // MENU // 0:00  Introduction 0:08  Elon Musk Babylon Bee interview video 1:11  How trace route works 1:40  What is ping? 1:48  Internet Control Message Protocol (ICMP) 2:32  How trace route (tracert) works on Windows 3:50  What is a router?  4:10  Wireshark packet captures 5:21  Time To Live (TTL) 10:18  Domain lookup using Whois 10:55  Time To Live (TTL) (cont'd) 12:10  Trace route phone application 13:43  Submarine cable map 15:22  Traceroute on MacOS 18:34  UDP explanation 19:56  Traceroute on Linux 21:42  Conclusion  // iPhone App I used // Name: Network Analyzer  Link:   // SOCIAL // Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:  YouTube:    // MY STUFF // Monitor:  More stuff:   // SPONSORS // Interested in sponsoring my videos? Reach out to my team here: sponsors@davidbombal.com  elon musk elonmusk babylon bee babylonbee  elon musk interview internet star link traceroute tracert trace route internet  #elonmusk #traceroute #kalilinux",
    "description_links": [
        "https://youtu.be/jvGnw1sHh9M",
        "https://apps.apple.com/us/app/network-analyzer/id562315041",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal",
        "https://amzn.to/3yyF74Y",
        "https://www.amazon.com/shop/davidbombal"
    ],
    "transcript": "- Elon Musk is obviously a really clever guy, but does he actually understand how the internet works? Well, let's take a listen. - Traceroute is a networking command to, so if you wanna figure out a path to a particular server or domain, you'd say traceroute or in Windows, tracert. That would show you the path to a particular source server, either an IP address or domain name. And it would show you basically all the hops that that goes through, and the latency between each hop. And so- - I know some of those words. (chuckles) - Okay. But did you actually understand what he explained? This is a technical video. I'm gonna dive into the weeds now and show you exactly how it actually works. That explanation was brilliant, but that's a very high level explanation. Hopefully it won't just be words. Hopefully you'll understand how this works. (mellow electronic music) Okay. I would give him 10 outta 10 for that explanation. (children cheering) Really, really good explanation of what traceroute does or tracert on Windows, but let's go deeper so that all of us can understand it rather than just understanding some of those words. On a Windows computer, If I open up Command Prompt and I use the command ping and ping a website such as google.com, what that does is it sends messages into the internet to verify that that site is available. In other words, is that site up? I could do something similar with say facebook.com. Essentially what ping is doing is it's sending hello messages into the network saying, hello, Google are you there? And then Google replies, - Hello - if it's available. And we get what's called an ICMP reply. ICMP or Internet Control Message Protocol is used for many things. Think of a protocol as a language. We are speaking English here but I could speak another language and say dumela, which is hello. Or I could say hoe gaan dit, how are you doing? That's in another language. If you don't understand that language, you won't be able to communicate with me. We need to use the same language for communication. In this case, we're using a protocol called IP Version 4. It uses what's called an ICMP echo message and then we get back, what's called an echo reply. Basically saying, are you there? And then Google replies back saying, yes, I'm here. In other words, the website is up. Same for Facebook as an example. Okay, but that doesn't explain traceroute. Traceroute also uses ICMP, but it uses something to determine the hops to a destination. So if I use tracert to google.com it firstly uses a protocol called a DNS or domain name system to resolve the name of Google to an IP Version 4 address. And then it allows me to see the hops from my local computer to wherever I'm going. So in this case, I'm going to google.com. You'll notice that it sends three messages for every device. So my first device is 1921681249. That's what's called my default gateway or the way that I get to the internet. I can see that on my Mac, my default gateway is 1921681249. And then I see other devices along the path. So you can see that second device is this device, then this device. And then I went through BT or British Telecom. BT is my ISP here in the UK. And then I eventually ended up at google.com. That is the IP address that my DNS told me is the IP address for this domain name, google.com. Okay. So there's the basics. That's what traceroute does or tracert on Windows. It shows me the hops. Each hop is a router. Routers basically determine the path for traffic into the network. I'm based in the UK. If I want to go to the US, I will take a specific path. If I want to go to Australia, I'll take a different path to get to that destination. But now let's get more technical. To help us see what's actually happening, I'm gonna use an application called Wireshark. Wireshark allows me to capture what are called the packets going through the network. So I can see the individual messages in the network and see what's actually going on. Now, in my example, I'm gonna capture the WiFi network. I'm using this Windows laptop here. I'm controlling it from my Mac, but all demonstrations for the moment are done on this Windows laptop. I'll show you Mac and Linux in a moment. Notice I can see this traffic on my WiFi network. So what I'm gonna do is start capturing traffic, and I'm gonna filter it for ICMP. ICMP, once again, is the protocol used in this example by traceroute on Windows to determine the path. So I'll open up another Command Prompt here, and let's do a tracert once again to google.com. And what you'll see is something's happening in Wireshark. What I've got here is an echo ping request message. We are using IP Version 4 in this demonstration. And what I want you to see is firstly that the protocol used is ICMP, but the time to live is set to 1. Basically what happens in a network to stop loops, in other words, traffic being sent around and round and round in circles, packets are marked with a time to live. Could be set to a value such as 255, could be set to other values like 64, depends on the operating system being used, but basically every hop across a router decrements or reduces the TTL. So if my TTL is set to 255, first router that I transit will set it to 254, then 253, 252. When it hits 0, the packet is killed, so it's destroyed. But in this example, what traceroute is doing is it's still using ICMP which is the protocol used for ping, but it's setting the TTL for the first packet into the network to 1. As soon as it hits the first router, the router is gonna kill that packet and then it's gonna send a message back. In this example, notice the router is sending a time to live exceeded message. How do I know which IP addresses have been used in the conversation? I could, for example, use IP config. I can see that 192168131 is my local Windows computer's IP address. So this first message is from the local Windows computer to an IP address, 142.250.187.206. That is the IP address that my DNS server told me is the IP address of Google. So I traced to Google, that was resolved to this IP address using this protocol called DNS. DNS basically takes domain names, easy to remember names and converts that to an IP address. So my PC sends traffic to that IP address and that's eventually where we end up but the first hop is this router. So router replies saying time to live exceeded. Notice here's time to live is 255, but he's sending a message back to me telling me that the time to live exceeded. That allows my computer to know what the first hop is. The PC sends multiple messages, typically it's three. So one millisecond, one millisecond, two milliseconds for me to get to this router. That makes sense that it's so low because it's a device in my local network. So notice first message. First reply, second message. Time to deliver set to 1. Reply, third message. Time to live is set to 1. We've got those replies from the local router. The PC now sets the time to live to 2 to determine what the second device in the network is. When the PC sends the ICP message into the network with a time to live of one, the first router's gonna kill that packet and and reply back. That's how we work out what this router is. Then the PC says, okay I've worked out what the first router is. I've done three messages. I know that that's the first router. Let's set the TTL to 2, and then we can get the second router. So what happens is it sends a message into the network. First route, it decrements the TTL from 2 to 1, allows the packet to continue. Second router receives it, decrements it from 1 to 0, now kills the packet and sends a reply back. So PC is sending a message out with a time to lift set to 2. This router now replies, 192.168.3254. That is the second router in my path to get to google.com. Yours will be different. Depends where you are in the world. That's another local router in my local network. PC sends another message, our time to live a set to 2. Reply from the same router, happens three times. So again we get three replies, that's the second hop in the network. What you might also notice here is that the time to live for the replies from that router is 63. Why? Because devices will typically set the TTL to 255 or 64 or another number to reply back. This router is one hop away from me. So sets it to 64, router in between me and that router decrements it to 63. I get the reply. So hence the TTL is 63 rather than 64, because this router between me and this router has decremented the TTL by 1. Okay. So next step. Set the TTL to 3. Then we get a reply from this device with IP address 172.16.12.20. I'm surprised that I actually see an IP address in this range because that's what's called a private IP address. I'm actually onto the internet now, these two routers are in my infrastructure, this router isn't. So it's surprising that I'm getting a reply with that IP address, but there you go. BT is doing something interesting in the network that could be an internal IP address on their router. And I'm just seeing that IP address rather than a public IP address or an internet routable IP address which I see in step four. Basically I'm going across a BT infrastructure. And then I end up in Google's infrastructure. Now you can do a who is lookup on IP addresses. Just type \"who is,\" and the IP address in Google. And you can see here that that IP address belongs to British Telecom. If I looked at another IP address, let's say this one, you can see that that IP address belongs to Google. And there's its autonomous system. Basically, devices on the internet have what are called autonomous systems, allows them to send routes to each other. But let's look at this IP address here the last one that should be Google, hopefully. So who is that IP address? That is Google. So I am going through my local network two hops in my local network, then onto my ISP's network and then onto Google's infrastructure. But the way my device determines all the hops is to set the TTL. TTL is set to 3. There's a reply it's 62 now because this router is two hops away. There are two routes between me and that router. So the TTL was reduced by 2, hence 62. Okay. And that will just continue now. So I'll go through this. Notice this router has a different time to live, 128. Notice now I'm setting the time to live to 4. We get some losses over there, so didn't get replies. But then we eventually got a reply from a router ending in IP address 69. So that one there, and that'll just continue now, so I won't bore you. Basically, if you just keep your eye on the TTL, we get different values but you can see it's going to six now, and then it's going to seven and then to eight. And it'll just continue until we hit the destination. So 10 hops to get to Google. So from my home to google.com, 10 hops to get to google.com. Now there are many applications out there that allow you to visually see where traffic is going. So, as an example, if I go to google.com with this application running on my iPhone and I do a traceroute to that website you'll be able to see the hops in this application. And it shows you quite nicely different countries. So we can see where we went from the UK to the US. What's nice as an example is you can look at some of the hops and it tells you where the device is. So this device is located in London, which makes sense because the UK British Telecom core network is in London. So that's how I get from London to the US. Now I can also look at a visual route and that shows me that I went from the UK to the US. Information may not always be perfect, but it gives you an idea of where traffic is going. If I have a look at, let's say a website in Australia and do a trace to that website, hopefully the path will be different. I won't go to Australia from the UK the same way that I go to the US. So as an example here, you see that I've transited through Hong Kong. And over here, I'm in Melbourne. And over here, I'm in Ipswich, Queensland in Australia. So I went from London via Hong Kong to Australia. And if I look at a visual traceroute, you can sort of see that traffic went from UK to Hong Kong to Australia. This is not gonna be perfect, but it kinda gives you an idea of the path that traffic took. You can see a better map of the connections between internet service providers around the world by looking at this website. So this shows you that there are a lot of connections between the US and Europe as an example, less connections to Africa. You can also see the connections to Australia. Recently, Tonga was cut off from the world because the undersea cable was damaged and they only had a single cable to connect them to the rest of the world. Traceroute allows you to visually see where traffic is going, it shows you the actual hops but doesn't show you the undersea cables used, that will really depend on the path taken, but it gives you a lot of information about how you get somewhere on the internet. So, as an example, if I just do another website. So if I use traceroute or RT, in this case to facebook.com. This will show me the path to the Facebook website. Now the first two hops are gonna be the same. I'm also connecting to the same ISP. So some of the hops will be the same, but BT is gonna take me rather than to Google's infrastructure into Facebook's infrastructure to get me to my destination. So at some point I should have a connection from British Telecom to Facebook. Okay. So there you go. I'm in the BT infrastructure over here and then I go into Facebook's infrastructure. So this is actually a Facebook domain, and you can see facebook.com here. So that's the IP address that was resolved through DNS. And that's where I ended up, but this is the path that I took to get there. We've got echo ping request and then we've got a time to live exceeded. If we were using ping, we would get echo request, echo reply for a connection. But this is showing me the hops along the path. Now on a Mac and on Linux, it's different. So let me show you the protocols used on Linux and on a Mac. You'll see, it's not ICMP exclusively, it actually uses UDP. Okay. So on my Mac, I've got Wireshark running. You can see there's traffic on the ethernet connection. What I've done on my Mac Mini here is I've disabled WiFi and connected it via ethernet. You'll get similar results if you are using WiFi. Okay, so I'll double click on this. That'll give me a lot of traffic, but what I'll do is filter for ICMP. So if I traceroute in this case, let me just type the command as is. I could specify the protocol. So if I specify ICMP here and go to google.com, that's gonna show me something very similar to what I saw on Windows. Notice there is the ping and then we've got time to live exceeded. So firstly, ping, time to live there is one. We've got our exceeded message telling us who the first hop is. We've got our second message, and that'll just continue in a very similar way to what I showed you on Windows. And basically you'll get the same results or very similar as result to Windows. In this example, it resolved to this IP address but same kind of information will be displayed. I can see the various hops along the path. Okay, but let's restart Wireshark. And I won't save that. I'll open up a new window, and let's trace to google.com, but I won't specify the protocol. So previously I specified a protocol of ICMP, but now I'm not gonna specify the protocol. I'm just gonna trace with the default settings. And what you'll notice in the output here is we don't see the echo message. What we do see, however, is the time to live exceeded messages. So what I can do is rather than filtering for a protocol, I can filter for an IP address. And let's specify the destination which in our example, is this IP address. So I want to use that IP address. And what you can see here is my IP address. 192168130 sent traffic to this IP address. So just to make sure that it's clear, I'm sending traffic to Google. When I traced to Google, it resolved to this IP address. We're told that Google has multiple IP addresses but this is the one it's going to use, which is different to the previous example where it used this IP address. So my Mac decided to use a different IP address in this case. It's also, once again, using a different protocol because this is User Datagram Protocol or UDP. You can see the time to live is set to 1. So the same thing happens here, but rather than using ICMP echo, and then getting a time to live exceeded message ICMP message reply, I'm using UDP with the time to live set to 1, the router kills the packet and then replies back with ICMP messages. And that allows me to do something very similar where I can see the path through the network. What it's doing here is it's sending three packets and then if it doesn't get a reply, it increments the TTL to 4 and tries to get the next top. If that doesn't work, it sets the TTL to 5 and tries to get the next top, and so forth and so on. But here you can see once again I'm going through the UK network. I'm in Slough, which is in the south of England. And then it continues and hopefully gets to google.com, but you can see it's having some problems resolving the path. So something to remember, if you can't resolve with the default on a Mac on Linux, 'cause it uses UDP, then try using the protocol set to ICMP. But let's have a look at this. So the time to live set to 1. 1, 2, 3 packets, and then time to live is set to 2. And it just tries to do that time to live set to 3, 4, 5, 6, and it will just do exactly the same thing, but in this case, it's using UDP rather than ICMP. Same kind of thing is done in Linux. So if you were using a Linux computer, you'll have very similar results. In this example, I'm using a hacking type version of Linux, Carly Linux, but you could use Ubuntu or something else. Let's start Wireshark here. So I've got Wireshark running, I'll capture traffic on the ethernet zero interface and I'll set the protocol to ICMP and I'll do a trace to google.com. And you can see the hops once again, same two routers. We miss a bunch of devices and then we get to google.com. My Mac did the same thing, It eventually got to google.com. So something similar just took a lot longer to go across these devices. In Wireshark, we see ICMP time to live exceeded messages. We don't see the echo messages because they're not being used. Scrolling up here. Here, the IP address of Google was resolved to 74.125.193. So I'll just say IP address equals that address. And what you can see is once again, UDP messages are used. So we've got IP Version 4 here. We've got a User Datagram Protocol message, notice source and destination port numbers. Notice here we're getting time to live exceeded, that's the first router in the infrastructure, 1921681249. Here's our second one, 1921683254, and that'll just continue. Okay so, Elon Musk was 100% correct. He explained traceroute and tracert very simply. I've gone into a lot more detail now. I've actually shown you the underlying protocols, I've shown you that ICMP or UDP is used. I've captured the packets on a Windows computer, on a Mac, and on Linux, and I've shown you that Linux and Mac use UDP for the outgoing messages by default, the routers will reply with ICMP messages. But you can change the protocol used by, for instance, Mac or Linux to use ICMP rather than UDP, if you prefer. Now, hopefully you enjoyed this video. Hopefully it made sense. If you enjoyed it, please like this video, please consider subscribing to my YouTube channel and clicking on the be to get notifications. I'm David Bombal, and I wanna wish you all the very best. (mellow electronic music)",
    "transcript_keywords": [
        "time to live",
        "address",
        "ICMP",
        "router",
        "Google",
        "time",
        "TTL",
        "live",
        "Message",
        "Windows",
        "set",
        "Mac",
        "Protocol",
        "network",
        "hops",
        "Linux",
        "messages",
        "reply",
        "path",
        "google.com"
    ],
    "transcript_entity_values": [
        "Australia",
        "three",
        "Linux",
        "Queensland",
        "London",
        "Melbourne",
        "Carly Linux",
        "two",
        "four",
        "Europe",
        "eight",
        "second",
        "Africa",
        "YouTube",
        "Google",
        "62",
        "google.com",
        "BT",
        "English",
        "My Mac",
        "Command Prompt",
        "Linux",
        "4",
        "1921681249",
        "David Bombal",
        "255",
        "TTL",
        "- Elon Musk",
        "Facebook",
        "ICMP",
        "253",
        "gaan dit",
        "64",
        "4",
        "ICP",
        "3",
        "142.250.187.206",
        "Windows",
        "one millisecond",
        "one",
        "Mac",
        "firstly",
        "192168131",
        "64",
        "England",
        "DNS",
        "Windows",
        "128",
        "first",
        "ISP",
        "UK",
        "Mac",
        "Hong Kong",
        "69",
        "63",
        "ISP",
        "Elon Musk",
        "iPhone",
        "ICMP",
        "IP",
        "6",
        "RT",
        "172.16.12.20",
        "First",
        "1",
        "5",
        "US",
        "10",
        "Ipswich",
        "254",
        "six",
        "Tonga",
        "seven",
        "third",
        "10 outta 10",
        "Wireshark",
        "1921683254",
        "2",
        "Second",
        "zero",
        "5",
        "100%",
        "Mac",
        "Slough",
        "252",
        "British Telecom",
        "0",
        "User Datagram Protocol",
        "192168130",
        "Wireshark",
        "two milliseconds",
        "2",
        "62",
        "UDP"
    ],
    "transcript_entity_types": [
        "GPE",
        "CARDINAL",
        "ORG",
        "GPE",
        "GPE",
        "GPE",
        "PERSON",
        "CARDINAL",
        "CARDINAL",
        "LOC",
        "CARDINAL",
        "ORDINAL",
        "LOC",
        "ORG",
        "ORG",
        "DATE",
        "ORG",
        "ORG",
        "LANGUAGE",
        "ORG",
        "ORG",
        "GPE",
        "DATE",
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "ORG",
        "PERSON",
        "ORG",
        "NORP",
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "WORK_OF_ART",
        "QUANTITY",
        "CARDINAL",
        "GPE",
        "ORDINAL",
        "CARDINAL",
        "DATE",
        "GPE",
        "ORG",
        "PRODUCT",
        "CARDINAL",
        "ORDINAL",
        "NORP",
        "GPE",
        "ORG",
        "GPE",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "PERSON",
        "ORG",
        "ORG",
        "ORG",
        "DATE",
        "ORG",
        "CARDINAL",
        "ORDINAL",
        "CARDINAL",
        "CARDINAL",
        "GPE",
        "CARDINAL",
        "GPE",
        "CARDINAL",
        "CARDINAL",
        "GPE",
        "CARDINAL",
        "ORDINAL",
        "CARDINAL",
        "PRODUCT",
        "DATE",
        "CARDINAL",
        "ORDINAL",
        "CARDINAL",
        "DATE",
        "PERCENT",
        "PERSON",
        "GPE",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "LAW",
        "CARDINAL",
        "ORG",
        "QUANTITY",
        "DATE",
        "CARDINAL",
        "ORG"
    ]
}