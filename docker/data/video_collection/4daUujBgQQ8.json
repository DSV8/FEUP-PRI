{
    "id": "4daUujBgQQ8",
    "title": "What Are DLLs?",
    "channel": "Techquickie",
    "channel_id": "UC0vBXGSyV14uvJ4hECDOl0Q",
    "subscriber_count": 4300000,
    "upload_date": "2022-02-15T19:17:56Z",
    "video_url": "https://www.youtube.com/watch?v=4daUujBgQQ8",
    "category": "Science & Technology",
    "tags": [],
    "views": 983312,
    "likes": 67764,
    "comments_count": 1099,
    "description": "Try FreshBooks free, for 30 days, no credit card required at   What are those mysterious DLL files that are omnipresent in Windows - and have often caused problems, especially in older versions?  Leave a reply with your requests for future episodes, or tweet them here:    GET MERCH:   AFFILIATES, SPONSORS & REFERRALS:   PODCAST GEAR:   SUPPORT US ON FLOATPLANE:   FOLLOW US ELSEWHERE ---------------------------------------------------   Twitter:  Facebook:  Instagram:  TikTok:  Twitch:",
    "description_links": [
        "https://www.freshbooks.com/techquickie",
        "https://twitter.com/jmart604",
        "https://lttstore.com",
        "https://lmg.gg/tqsponsors",
        "https://lmg.gg/podcastgear",
        "https://www.floatplane.com/",
        "https://twitter.com/linustech",
        "http://www.facebook.com/LinusTech",
        "https://www.instagram.com/linustech",
        "https://www.tiktok.com/@linustech",
        "https://www.twitch.tv/linustech"
    ],
    "transcript": "- Anyone who's used Windows, especially older versions, is probably familiar with the dreaded DLL error when you're in the middle of trying to do something. Although DLL files seem to be important given how much Windows complains when one is broken or missing, it's not exactly obvious what they are, so let's explain why they're a big deal. DLL stands for Dynamic Link Library, but don't mistake them for a collection of Zelda NFTs. The reason they're called libraries is that DLLs contain shared code that multiple programs can link to and use, kind of like how real libraries contain shared books that many people can borrow. But DLLs have an important feature that books don't, several programs can use one DLL at the same time, and once a DLL is loaded into a certain space in memory, any program that needs the code inside can request access to that memory space without the DLL having to be loaded over and over again. A good, simple example of this is this DLL file, which contains the code for bringing up a Windows popup dialogue box. Since so many programs use this functionality, it makes sense for this code to be included in Windows as a DLL instead of writing it into every program from scratch. Another good example is the device driver, which is the code that allows Windows and other programs to communicate properly with hardware. Drivers often take the form of DLLs, though they can appear as .sys files in Windows Explorer, which allows multiple applications to access your GPU, keyboard, or printer, its drivers, at a time. And because DLLs are only loaded up when a program specifically asks for them instead of every time the program starts, they also prevent your RAM from filling up with tons of unnecessary code. This modularity means that new functionality such as game updates or support for different languages can be added to older programs simply by writing new DLLs rather than having to modify the program itself. That's not only more convenient, but you don't run the risk of inadvertently breaking the code of the main executable. But if DLLs are such a good idea, why are they so notorious for creating problems often referred to as DLL Hell? We'll tell you right after we thank FreshBooks for sponsoring this episode. FreshBooks is an easy to use software built for freelancers and small business owners who don't wanna have to waste time on invoicing, accounting, and payment processing. FreshBooks users can streamline and automate tasks like invoice follow up and expense tracking with features like their new digital bills and receipt scanner. And with FreshBooks's intuitive dashboard and reports, it's easy to see at a glance exactly where your business stands and turn everything over to your accountant come tax season. Try FreshBooks for free for 30 days with no credit card required at freshbooks.com/techquickie. So one big reason DLLs cause problems is that when an application depends on lots of DLLs, it also means that application has many possible points of failure. If a DLL gets modified, there's no way for a program that loads up the DLL to ensure that the new code is compatible, and if it isn't, the program you want will often simply crash. You see, some programs will go messing around with DLLs in a way that they shouldn't. An installer, for example, may decide to modify a DLL in a way that helps that specific application, but can cause errors in the possibly many other programs that need the same DLL, but aren't compatible with the modified version. For a long time, Microsoft expected third party software developers to verify that any DLLs they installed, especially if they overwrote existing ones, would comply with accepted standards. But needless to say, with developers typically more concerned about making sure their own software works, it often simply didn't happen, and programs kept installing troublesome DLLs with impunity. Mercifully, this problem has been mitigated to a large extent in more recent versions of Windows. Microsoft has locked down system DLLs, so that third party applications can't mess with them unless they've actually been authorized by Microsoft itself. Windows can now also track DLL installations to try to prevent unknown DLLs from making their way onto the system, as well as to allow two different versions of a DLL to exist simultaneously to prevent programs that rely on an older revision from breaking when you add a new one. And with modern PCs, having a lot more memory than the computers of the '90s and early 2000s, the memory limitations that necessitated DLLs in the past aren't as prevalent today, meaning modern programs often don't rely on DLLs merely as much. Maybe stuffing 64 gigs of RAM in your personal rig wasn't such a big mistake after all. But you know what is a mistake, not liking this video and subscribing, so do it.",
    "transcript_keywords": [
        "DLL",
        "DLLs",
        "Windows",
        "Dynamic Link Library",
        "programs",
        "code",
        "program",
        "dreaded DLL error",
        "dreaded DLL",
        "time",
        "Link Library",
        "FreshBooks",
        "Windows Explorer",
        "Dynamic Link",
        "DLL Hell",
        "memory",
        "Microsoft",
        "Windows complains",
        "DLL files",
        "DLL file"
    ],
    "transcript_entity_values": [
        "GPU",
        "Microsoft",
        "Zelda",
        "third",
        "64",
        "Windows",
        "Windows",
        "DLL",
        "30 days",
        "early 2000s",
        "today",
        "RAM",
        "Dynamic Link Library",
        "two",
        "one",
        "the '90s",
        "Windows Explorer",
        "FreshBooks"
    ],
    "transcript_entity_types": [
        "ORG",
        "ORG",
        "ORG",
        "ORDINAL",
        "CARDINAL",
        "WORK_OF_ART",
        "PRODUCT",
        "ORG",
        "DATE",
        "DATE",
        "DATE",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "WORK_OF_ART",
        "ORG"
    ]
}