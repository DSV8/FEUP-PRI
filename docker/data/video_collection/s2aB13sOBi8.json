{
    "id": "s2aB13sOBi8",
    "title": "32-Bit vs. 64-Bit - What Are Bits? Why Are They Important?",
    "channel": "Computer Clan",
    "channel_id": "UCQ6fPy9wr7qnMxAbFOGBaLw",
    "subscriber_count": 493000,
    "upload_date": "2019-10-10T20:00:14Z",
    "video_url": "https://www.youtube.com/watch?v=s2aB13sOBi8",
    "category": "Science & Technology",
    "tags": [
        "32-Bit vs. 64-Bit - What Are Bits? Why Are They Important?",
        "32-Bit",
        "64-Bit",
        "macOS Catalina",
        "macOS 32-Bit Apps",
        "8-Bit Game",
        "The 8-Bit Guy",
        "32-Bit CPU",
        "CPU",
        "RAM",
        "Central Processing Unit",
        "Logic Pro X",
        "IBM Vacuum Tube",
        "CPU Register",
        "Windows",
        "Microsoft",
        "PC",
        "Computer",
        "Apple",
        "Mac",
        "Macintosh",
        "SIMD",
        "Single Instruction Multiple Data",
        "Binary",
        "Binary Math",
        "Bits",
        "TidBytes",
        "Computer Clan",
        "Tech",
        "Bit Series"
    ],
    "views": 489901,
    "likes": 16877,
    "comments_count": 823,
    "description": "32-bit vs. 64-bit. Which is better? What are the differences? Heck what are bits, anyway? All of these questions, and more, will be answered in todays TidBytes video! For addition info, look below in the addendum  See vintage Apple products in action!   Wanna see comedic tech tinkerings?   Dont miss future tech videos!    Like the CC on Facebook   Follow the CC on Twitter   Follow Ken on Twitter: @Hildron101010  Special thanks to Luna for helping me write this video!  ADDENDUM (additional information about this topic is here for you!)  1. Small correction on the vacuum tubes. I used them as a visual aid, but technically it's a dual triode tube, so it's not \"1-bit\" per se. But you get the idea. Additionally, there's always electricity in the tube when the computer is on. This particular tube works for like a gate.  2. BINARY MATH: Each binary digit represents a power-of-2 whole number. If you have a byte (8 bits), that means your first bit represents 1, your second represents 2, then 4, 8, 16, 32, 64, and 128. Keep in mind, the numbers increase right to left. If a 1 is present, that represented number is added. If a 0 is present, the number is not added. So, 00001100 = 12. 10000001 = 129. 11111111 = 255.  3. GB vs. GiB: In short  GB is the user-friendly measurement. GiB is the computer-friendly measurement because data sizes are based on power-of-two values.  Gigabytes (GB) and gibibytes (GiB) are different, but GiB are commonly referred to as GB in conversation. Some operating systems refer to a GiB as a GB. 1 GB = 1,000,000,000 bytes, but 1 GiB = 1,073,741,824 bytes (1024^3). This is because GiB (KiB, MiB, etc) use powers of 21, 2, 4, 8, 16, 32, 64, 128, 256, and so on. Since regular computers (not quantum computers, or anything like that) use binary, we need to add these numbers in base-2, so the computer actually knows what the heck is going on. Adding in base-10 is more user-friendly and clean looking, but base-2 is what binary math uses. This is why, depending on how your OS and hardware interpret file size, your 500 GB hard drive may read as 465.66 GB (which is truly GiB).  Contact the CC    Want music for your videos?   (We use these guys a lot. They're good.)  Get film gear Ken uses   On a lower budget?   Amazon links are powered by the Amazon Associates Program.  COMPUTER CLAN COLLABORATORS INVOLVED IN THIS VIDEO Luna Ken (Hildron101010)  #ComputerClan",
    "description_links": [
        "http://applevault.thecomputerclan.com",
        "http://krazyken.thecomputerclan.com",
        "http://subscribe.thecomputerclan.com",
        "http://facebook.com/computerclan",
        "http://twitter.com/thecomputerclan",
        "http://thecomputerclan.com/contact-us.html",
        "http://bit.ly/clan2LBaKovï»¿",
        "http://amzn.to/2hmJhHU",
        "http://amzn.to/2hLrJBL"
    ],
    "transcript": "- Hey, how's it goin'? If you've used computers or smartphones in your life, you've probably heard the term 32-bit and or 64-bit before. Or perhaps in the gaming industry you've heard of 8-bit video games or 16-bit video games, right? We've all heard these things for the most part but, what do those terms actually mean? What are bits, and why are they important? And will there be any issues with operating systems like macOS Catalina ditching the 32-bit applications as time goes on? I will tackle all of those questions for you and more but first, let's time travel to this. This is an IBM vacuum tube, one of the earliest more tangible representations of what a bit truly is. Let's dive in. Hello, I am Ken from the Computer Clan and today again, we're talking about bits. We've done a few videos on this topic in the past and they've grown well, but it's time for a new one. I'm gonna give you the short answer first about 32-bit versus 64-bit. Which one is better, what's the difference? Well, the blunt answer is marketing! Yeah, that's a pretty blunt. But the terms 32-bit and 64-bit have kind of been watered down over the years and they've been misused. So, companies can take advantage of that and use those terms as selling points. But why did those terms end up being used loosely? Well it's kind of like how we abbreviate things in say the '80s or the '90s. We're referring to an era of changes in culture. In computers we may say 32-bit era or in gaming we may say 8-bit era. But these terms are really just there to summarize all of the technical changes in a given point in time. Pertaining to CPUs, here's the situation. In general, a 64-bit CPU has the potential to perform faster and address more memory. Overall, 64-bit processors are more modern and can offer newer features. But, this is an oversimplification so let's elaborate. 64-bit CPUs date back to the '70s but for all intents and purposes the 64-bit hype in the PC realm really started getting going when AMD released a 64-bit desktop CPU in 2003. Then Apple started pushing the Power Mac G5 with a 64-bit G5 PowerPC processor in it. And then the hype got rekindled in 2013 when Apple released the iPhone 5S with a 64-bit processor. Let's take a look at the advantages of 64-bit versus 32-bit in terms of personal computing. We'll take a look at those advantages and how all of this bit stuff actually works. To do that, we need to time travel and understand the history. So, let's go back to this guy. It acts like a switch. If there's electricity in it, it's on. If there's no electricity in it, it's off. Like a light switch it's either on or off. Or a gate, it's either open or closed. In all of these contexts there's two states on, off, open, closed, et cetera. This is where binary comes in. The word binary comes from the Latin word binarius which according to Latindictionary.net means consisting of or containing two. In computers, we represent these two values with either a one or a zero, that one or zero is referred to as a binary digit or a bit for short. So, with 1-bit or one binary digit we can have two different values, two different outcomes. We can have an on or an off, for example. And the more bits we have, the more binary digits we have, the number of outcomes increases exponentially. The formula is really simple it works like this. You take two to the nth power, where n represents your number of binary digits. So for example if we had two binary digits we could have four different permutations or four different values. 3 bits can represent eight values 4 bits, 5 bits, so on and so forth. So you're taking that nth power and putting in the amount of binary digits in to that variable. So two to the second power is four. Two to the third power is eight. Two to the fourth power is 16, and so on and so forth. If we break this down into binary, our four values here are these four different permutations of the binary digits. 00, 01, 10, and 11, there's no other permutations we can make out of that. When you convert that to decimal that equals zero, one, two, and three. With 3-bit we have eight permutations or values 000, 001, and so on and so forth. And when you convert that to decimal you get zero, one, two, three, four, five, six, seven and it just keeps going and going and going and we're gonna run out of room on this slide pretty quick. This is for simplification, typically data is paired in bytes and one byte stores eight binary digits you would seldom go down to 2-bit or 3-bit but just to understand the math I wanna simplify it like this. So the term 64-bit can be used very loosely and that's why there's some confusion and that's just human nature we kind of fuzz our definitions of words sometimes. The term often refers to a generation of computers which use 64-bit processors. Kind of like when I talked about decades earlier like the '80s and the '90s you know they referred to an era of changes. There's a little more to it than that. In computing, the numbers and the units that we apply to those numbers can get really lengthy so we use a simple nomenclature to abbreviate them. Like how we use scientific notation to simplify large numbers, or we use cm to abbreviate centimeters. So instead of saying something lengthy like \"This computer monitor displays 1 of 1024 unique color values per channel per pixel\", We just simply say, well that's a 10-bit display. Instead of saying, \"This audio file contains \"1 of 16,777,216 amplitudes per sample\" we simply say it's a 24-bit audio file. Simply put, in the context of color depth and audio depth, more bits equals more resolution. As an example open up a DAW, \"digital audio workstation\" software and turn down the resolution of a synth and listen to the differences. (gentle music) Also open an image in a program like Photoshop and export it with fewer colors. 1-bit would be two colors, 4-bit is 16 colors and so on. So where does this come into play in regards to my computer? Do I have a 32-bit or a 64-bit computer? Well let's with the second question first. Generally, if you had a computer manufactured between 2007 and 2010, it's very likely that you have a 64-bit computer. Now back to the other question, what does this mean for you? If you hear someone say 64-bit computer that usually refers to the processor, the CPU. Bits apply to all types of hardware and all types of concepts. But in this case it's commonly the CPU that someone is referring to. In short, a 64-bit CPU can potentially offer faster performance and it can address larger amounts of RAM, random access memory. This is the hardware inside your computer that temporarily stores information that a CPU needs to access very rapidly. For most people the expanded RAM limit is the biggest advantage for a 64-bit CPU. A 32-bit CPU can address four gigabytes of RAM without any physical address extension tricks, but a 64-bit CPU can address 16 billion gigabytes of RAM, which translates to 16 exabytes. But, let's just say 16 billion gigabytes for now because that sounds cooler. But why those numbers, why four gigabytes and 16 billion gigabytes it seems kind of arbitrary. Well, let's go back to the math. Remember this, two to the nth power where n represents your number of binary digits. If we're talking about 32-bit, 32 binary digits and we do the math, we get approximately four billion. If you divide that number up, do some dimensional analysis that number of bytes will equate to four gigabytes. Now if you take two to the 64th power you get approximately 18 quintillion when you crunch the numbers on that, take that number of bytes convert it in to exabytes you get 16 exabytes or 16 billion gigabytes. Now that may sound amazing but remember those big numbers are only useful if your software knows how to leverage those large amounts of RAM in the first place. But, leave that up to the developers to figure out. Now, what about speed? A 64-bit CPU can theoretically offer faster performance but again, the software has to know how to take advantage of it. A 64-bit CPU can process 64-bits per clock cycle. Twice as many bits as as 32-bit CPU typically. So with every cycle, the processor can theoretically take on more information. If you have a three gigahertz processor that means your processor is running at three billion cycles per second. Giga means billion, hertz means per second, that's where that comes from. The limit of bits that a cycle can hold is commonly referred to as a word size. Overtime, terminology can get fuzzy so it may differ depending on who you talk to. And those bits are stored in little parts of the processor called a register, that's where the data lives inside the processor as it's working with it, very rapidly. That data lives very briefly inside that register, inside the CPU. So those are some big advantages to 64-bit processors. However, there is another speed booster which isn't exclusive to 64-bit processors but I think it's important that you know it exists, it's called SIMD or Single Instruction, Multiple Data. We could go down a really deep rabbit hole with this one, but in short SIMD uses large CPU registers to do multiple math operations simultaneously. Remember when you took those math tests in school and you had to use a calculator? Well imagine how much faster you could go if you could clone yourself and work on four calculators simultaneously. Simply put, that's what SIMD does. In general, 64-bit processors have more modern design and newer features because 64-bit is a general term that is been used. So you'll gain other benefits that we won't dive into today but, for the most part as an end-user you don't even need to know about that stuff. And keep in mind, you'll need a 64-bit operating system installed on your computer so you can fully leverage a CPU that's 64-bit. But for the most part, computers are already sold with that hardware software bundle so you shouldn't have to worry. Earlier I mentioned that bits can apply to other concepts and hardware and that's true. For example, your video card, your GPU on that card may have a 512 bus width where it processes 512 bits of data per cycle. Buses in this context are lines that connect processors to memory, so it's kind of like a highway for the data to travel on I guess you could say. We won't dive into all that stuff today but remember, bits can apply to bus width, registers, word sizes, addresses, integers, and a lot of other computer-y stuff that I probably don't even know exists. Let's talk about those integers for a second. Those are whole numbers. These integers can apply to seconds in a clock or minutes in a battery meter. If you've ever seen a digital meter max out at a seemingly arbitrary number or a seemingly random date show up on a computer file that's like from the '70s or whatever it's because some anomaly or some sort of data corruption caused the integer to reset or max out at a specific limit. And those values are limited depending on how many bits are allocated to that data type. So for example, this battery meter maxed out at approximately 65,000 which is the highest value an unsigned 16-bit integer can reach. Or you can see these light faders max out at 255. So are we moving further away from 32-bit CPUs? Kind of yes and no, Microsoft still sells 32-bit versions of Windows because there are people who have legacy software which simply doesn't work on 64-bit operating systems. In fact, and this is kind of a little secret for most people, shh, most 64-bit CPUs are built on top of 32-bit architecture, but with 64-bit extensions which allow for wider buses, more registers, et cetera, but this is how you also obtain that 32-bit backward compatibility on a 64-bit processor. Now if we talk about the Apple ecosystem, some things are a little bit different here. They pushed 64-bit pretty quickly with their products but they're also pushing out 32-bit quicker. In fact for a couple years macOS has been preemptively warning users about app compatibility and at macOS 10.15 Catalina, 32-bit apps, plugins, and all software will not work, period. Of course, you still have 32-bit backward compatibility with the hardware in your computer, but if you're running Catalina the software will restrict that. There will be no 32-bit compatibility in macOS 10.15. To check what 32-bit apps are lingering on your system open up the system information and click on the application section in the sidebar. Check the 64-bit intel column and then you can see what software is still 32-bit on your computer. So in short, more bits can result in larger memory addresses, higher resolutions, potentially faster performance, et cetera. It'll vary depending on what concept you're talking about. I know that was a lot to cover so I do highly recommend watching this video again just to get more of it under your belt, and if you have any questions just leave me a comment I'll do my best to answer and also check the description because sometimes I put stuff in the addendum in there, other information and clarifications that I didn't cover today will be in the description below. And I have other tech videos I'd like to share with you too. If you're interested in comedic tech tinkerings I strongly recommend watching my Krazy Ken's Tech Misadventures series, it's great. And if you're interested in vintage Apple products, I highly recommend watching Vintage Apple Vault. Thanks for watching, and I'll see you in the not too distant future.",
    "transcript_keywords": [
        "CPU",
        "bits",
        "binary digits",
        "binary",
        "Computer",
        "processor",
        "CPUs",
        "Power",
        "digits",
        "number",
        "numbers",
        "data",
        "kind",
        "software",
        "RAM",
        "terms",
        "Apple",
        "processors",
        "computers",
        "gigabytes"
    ],
    "transcript_entity_values": [
        "four gigabytes",
        "approximately 65,000",
        "IBM",
        "two",
        "3",
        "Windows",
        "six",
        "Catalina",
        "2",
        "GPU",
        "255",
        "10",
        "four gigabytes and",
        "Krazy Ken's",
        "a couple years",
        "fourth",
        "the Power Mac G5",
        "Vintage Apple Vault",
        "four",
        "one",
        "byte",
        "5",
        "Two",
        "three gigahertz",
        "minutes",
        "64th",
        "DAW",
        "approximately four billion",
        "16,777,216",
        "32",
        "Apple",
        "max",
        "16 billion gigabytes",
        "8",
        "10.15",
        "the '80s",
        "2013",
        "11",
        "two to the",
        "five",
        "first",
        "4",
        "Microsoft",
        "16 exabytes",
        "64",
        "16",
        "SIMD",
        "three",
        "00, 01",
        "Ken",
        "zero",
        "001",
        "eight",
        "1",
        "24",
        "macOS Catalina",
        "16-bit",
        "'90s",
        "today",
        "CPU",
        "AMD",
        "seven",
        "'70s",
        "10",
        "billion",
        "iPhone",
        "the Computer Clan",
        "Giga",
        "third",
        "hertz",
        "the years",
        "G5",
        "16 exabytes",
        "between 2007 and 2010",
        "000",
        "Latin",
        "three billion",
        "64-bits",
        "2003",
        "512",
        "approximately 18 quintillion",
        "intel",
        "32-bit",
        "RAM",
        "1024",
        "the '90s",
        "second",
        "5S"
    ],
    "transcript_entity_types": [
        "QUANTITY",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "WORK_OF_ART",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "DATE",
        "QUANTITY",
        "PERSON",
        "DATE",
        "ORDINAL",
        "ORG",
        "FAC",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "QUANTITY",
        "TIME",
        "ORDINAL",
        "ORG",
        "MONEY",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "PERSON",
        "QUANTITY",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "DATE",
        "CARDINAL",
        "DATE",
        "DATE",
        "ORDINAL",
        "CARDINAL",
        "ORG",
        "QUANTITY",
        "CARDINAL",
        "CARDINAL",
        "WORK_OF_ART",
        "CARDINAL",
        "DATE",
        "PERSON",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "QUANTITY",
        "DATE",
        "DATE",
        "ORG",
        "ORG",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "ORDINAL",
        "ORG",
        "DATE",
        "PRODUCT",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "NORP",
        "CARDINAL",
        "QUANTITY",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "QUANTITY",
        "ORG",
        "CARDINAL",
        "DATE",
        "ORDINAL",
        "CARDINAL"
    ]
}