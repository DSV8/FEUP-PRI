{
    "id": "8Wf_zEjcRvA",
    "title": "Mac Screens of Death History and Why Computers Crash",
    "channel": "Computer Clan",
    "channel_id": "UCQ6fPy9wr7qnMxAbFOGBaLw",
    "subscriber_count": 493000,
    "upload_date": "2018-03-15T23:34:48Z",
    "video_url": "https://www.youtube.com/watch?v=8Wf_zEjcRvA",
    "category": "Science & Technology",
    "tags": [
        "Apple",
        "Macintosh",
        "Mac",
        "OS X",
        "Kernel Panic",
        "Bomb Screen",
        "Sad Mac",
        "Crash",
        "System",
        "Computer",
        "Snow Leopard",
        "Mac OS",
        "Error",
        "Hang",
        "Mac Screens of Death",
        "Mac Screens of Death History and Why Computers Crash",
        "My Mac locked up",
        "Deadlock",
        "Thrashing",
        "PowerBook",
        "iMac",
        "Vintage",
        "TidBytes",
        "Tech",
        "We Are Hanging Here",
        "Computer Clan"
    ],
    "views": 787432,
    "likes": 11293,
    "comments_count": 1602,
    "description": "Macs can crash, like any computer. But what do their crashes look like, and how are they caused? Let's travel through time and figure that out now.  Watch vintage Apple products in action   Learn the history of the Mac startup sound   Want some funny tech videos?   Want some more educational tech videos?    Get 1-on-1 tech training   Subscribe for new content!   Get your tech gear here    Like the CC on Facebook   Follow the CC on Twitter   Follow Ken on Twitter: @Hildron101010  NOTE: at 0:59 where I mention the \"MacsBug\" console, I misspoke. I was actually showing the built-in ROM debugger.  Contact the CC    Get film gear Ken uses   On a lower budget?   Amazon links are powered by the Amazon Associates Program.  Want music for your videos?   (We use these guys a lot. They're good.)  #AppleProductHistoryCC #Apple #ComputerClan",
    "description_links": [
        "http://applevault.thecomputerclan.com",
        "http://bit.ly/clan2Gdujxd",
        "http://krazyken.thecomputerclan.com",
        "http://tidbytes.thecomputerclan.com",
        "http://thecomputerclan.com/training",
        "http://subscribe.thecomputerclan.com",
        "http://thecomputerclan.com/gear",
        "http://facebook.com/computerclan",
        "http://twitter.com/thecomputerclan",
        "http://thecomputerclan.com/contact-us.html",
        "http://amzn.to/2hmJhHU",
        "http://amzn.to/2hLrJBL",
        "http://bit.ly/clan2LBaKov"
    ],
    "transcript": "- Greetings, Internet. I am Ken from the Computer Clan, and today I'm going to sho-- Sorry. Just had to reboot there for a second. Anyway, I want to show you guys today the Mac screens of death, how they changed throughout time, and how they work and what you might be doing to trigger them. Let's take a look at those right now. So where to begin? Well, why not with the rather iconic Sad Mac screen? This graphic was introduced with the original Macintosh, and you saw it on startup if there was some sort of failure. And it usually occurred with a crash sound. Also known as the death chime. Now you could actually trigger this yourself by booting up a classic Macintosh and pressing the programmer's key or, later known, as the interrupt key. Command power button also triggers this. This typically opens up the MacsBug console, which is a debugging tool. But if you tried to trigger this on startup, you would see the Sad Mac and hear the death chime. So next we have the Bomb Screen. This was also introduced with the original Macintosh, and it would occur due to a general System Error. We'll talk more about those in a little bit. But if the system had a problem and it couldn't continue running, you would get this Bomb Screen. And there was a restart button. You could click it, and if you're lucky, the system would actually reboot by itself. But not always. Those were the common error messages you would see in the classic macOS for a long time, but when the system got rewritten with macOS 10.0 and 10.1, there was a new type of error screen called a kernel panic. In this case, log information would be spat out on the screen if the operating system went into an unsafe state, and it had to basically shut itself down. Now before we get any further with that kind of stuff, let's take a little break and talk about computer crashes, lockups, and slow downs. What are the suspects that actually cause that stuff? What actually happens when we see those screens? Those death screens, if you will. What goes on behind the scenes? Well, honestly, the answer is there could be a million different reasons why a computer freezes up or crashes, but I'm going to be rather general and boil it down to five suspects. Thrashing, deadlock, overflows, corrupted data, and viruses. Now modern operating systems can be rather robust at these issues. But any of these problems can happen in theory. Let's focus on these first three. I'll kind of just give you a general, simple explanation of everything with one of our nice little mascots from the Computer Showdown cartoon, CHIP. Yes, he'll be helping us out today when I demonstrate paging as a part of thrashing. I guess he'll be our virtual memory subsystem for today. That sounds good. So when a system performs paging, it's essentially doing an exchange of data between the disk and the RAM, but this can occur a lot. Too much. In fact, it can be overwhelming when it keeps happening over and over and over again and the data is constantly exchanged between the disk and the RAM during a constant stream of paging. This is called thrashing. And yes, it can cause a system to slow down or maybe even totally lock up. So if you've ever experienced a slow down, well, maybe thrashing is the suspect. And, yeah, virtual memory subsystems don't like it when thrashing happens. It sounds kind of violent, and really, it is to a computer. Let's take a look at another scenario that won't necessarily crash a computer. It could, but not always. Typically, it will cause slow downs or lockups. And that is called deadlock. So we have CHIP one and CHIP two here, right? We'll call them Program One and Program Two, and they want to access resources. Resource A and Resource B. Well, Program One calls for Resource A simultaneously with Program Two calling for Resource B, and everybody's happy. Well, now what if we have the awkward situation where both programs want each other's resources at the same time? One wants B on the condition that Two releases B, and Two wants A on the condition that One releases A. It can be a little weird. So now they're basically stuck until something else can help fix the issue. And again, modern operating systems can basically help this move along. And to keep it simple, I'll leave it at that. You don't have to worry about it a ton with newer software and newer hardware, but if you've ever experienced a lockup or maybe this son of a (beep), yeah, pardon my language, but, you know, we've all seen the spinning beach ball of death, right? That can sometimes occur during something like deadlock or even during something like thrashing. And yeah, I know we all like to call it the beach ball but technically, it is actually called the wait cursor so sorry to burst your bubble. Anyway, what's another suspect? Overflows. So we have a buffer, and we have memory. The buffer, or the memory buffer, is basically a space that is reserved while data in the memory's being exchanged between programs, kind of like a shell game. So what if the buffer is, like, just packed full? It's just getting too full, and it's, like, oh, no, there's another set of data that has to come, and it's like, oops, this is weird. Where do I put this? It's gonna go in the buffer, but oh, it's gonna actually overflow into the memory and now we broke something. So now the operating system state becomes unsafe because some data just got overwritten. Some important data in the memory just got stepped on and now data's all scrambled and corrupted and, you know, it may not be that severe, but it could cause some issues. In this case, yeah, yeah, yeah, CHIP is fine. CHIP will actually be okay. No need to worry. So those are three issues that could cause crashes, and there are some other commons suspects like corrupted data, if your hard drive is dying and there's bad sectors on the disk or maybe you caught some malicious software that likes to cause some of these issues just because that's what the virus program is made to do. So those are some things that can cause those computer issues and crashes. And as a result, you will see a screen of death like a kernel panic. So let's get back to these. So in 10.2, Apple actually simplified the kernel panic by making it a little more graphical. Instead of always displaying that complex log information, it set a simple message in multiple languages. You need to restart your computer. Hold down the power button for several seconds or press the restart button. That is way easier for an In user to understand. Sometimes, depending on the severity of the problem, the computer will actually display the log info. But for the most part, it would just be a simple graphic like this. In 10.3, the kernel panic got a little bit of a design tweak. It looks darker, and it actually had a similar animation to 10.2. So 10.2, 10.3, 10.4, 10.5, they all had a very similar design honestly. And the animation kind of worked like this. It was, like, a little curtain that would crawl down your screen and then, you know, it would pop up this error message, and you would have to reboot your computer. This changed a little bit with macOS 10.6 and 10.7. So in 10.6, also known as Snow Leopard, Apple added Spanish to the error screen. And in 10.7, resume was actually integrated into the kernel panic. So when the system crashed and you got a kernel panic and you rebooted, you would actually be prompted to resume the applications you had open at the time of the error. So if we take a look at this, we're gonna simulate a kernel panic with a dtrace command, and you'll see the system will crash. The kernel panic will happen, but then when we reboot, we have an option to, basically, resume where we left off before the crash occurred. And just for fun, let's put the system into verbose mode and run the simulation again with the dtrace command. Now you'll notice we actually won't get a graphical crash. We'll actually get the log information displayed on the screen. And notice, it does mention the dtrace that we were using earlier to, basically, simulate this crash and boot argument, -v. That means we were in verbose mode. And in 10.8, actually, also to 10.13, which at the day of this Tidbytes video, is the most current, latest, and maybe greatest operating system in the macOS, we have this kernel panic. It has a slightly different message on it because instead of asking someone to restart the computer, the computer actually restarts automatically, and this displays on the startup screen. And it says, \"Your computer restarted because of a problem. Press a key or wait a few seconds to continue starting up.\" Resume was still integrated so you could, basically, open up all your applications again like nothing ever happened. But now there's one more step taken out of it. It'll automatically reboot for you if there's a problem. It'll shut down. You'll hear the chime, see the message, and if the system can continue, you'll see the apple, and you're good to go. So there's some other little death screens we don't always wanna see. In 10.2, we got the prohibitory sign, which some people call the ghostbuster symbol, and this basically means their system is damaged or there's some incompatible components with it that are causing it not to boot properly. This type of error actually existed earlier than 10.2, but graphically, it showed a broken folder icon. Personally, I think the ghostbusters symbol is way cooler. And another thing we really don't wanna see is the system not found icon. The blinking question mark on the folder? Yeah, that means your system volume cannot be detected. So maybe you don't have anything installed on the computer, and it can't boot to anything. Sure, you'll see that. But what's kind of scary is if you do have something installed and you see that. That probably means your hard drive is fried so be careful with that. And before we had hard drives inside of our Macs, basically, we had floppy discs that we booted off of. So if the original Mac, for example, was waiting for a floppy disc to be inserted, you would see a blinking question mark on a little floppy disc icon. So there you have it, guys. A brief history of the Mac screens of death. And I decided to do the second edition video, by the way, because tons of people loved the first one. So because of you awesome guys, that's why I did this one right here, right now. And I hope you guys enjoyed. And hopefully, the only time you see these death screens is in this video. That's all I have for you guys today. Thanks for watching. And I'll see you in the not too distant future.",
    "transcript_keywords": [
        "System",
        "Computer",
        "kernel panic",
        "screen",
        "Sad Mac screen",
        "death",
        "kernel",
        "panic",
        "data",
        "screens",
        "Mac screens",
        "death screens",
        "basically",
        "Mac",
        "Sad Mac",
        "Error",
        "CHIP",
        "yeah",
        "Bomb Screen",
        "Internet"
    ],
    "transcript_entity_values": [
        "MacsBug",
        "10.6",
        "10.2",
        "Ken",
        "10.7",
        "Apple",
        "10.13",
        "the Sad Mac",
        "a few seconds",
        "10.5",
        "Resource A",
        "these first three",
        "Spanish",
        "Mac",
        "Macintosh",
        "10.1",
        "10.3",
        "Mac",
        "today",
        "the Bomb Screen",
        "Sad Mac",
        "Snow Leopard",
        "10.8",
        "Program Two",
        "Tidbytes",
        "Program Two",
        "Program One",
        "RAM",
        "one",
        "Macs",
        "first",
        "several seconds",
        "One",
        "10.7",
        "Two",
        "five",
        "10.0",
        "second",
        "the Computer Clan",
        "10.4",
        "three",
        "the day"
    ],
    "transcript_entity_types": [
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "TIME",
        "CARDINAL",
        "ORG",
        "DATE",
        "NORP",
        "PERSON",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "DATE",
        "WORK_OF_ART",
        "ORG",
        "ORG",
        "CARDINAL",
        "LAW",
        "GPE",
        "WORK_OF_ART",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORDINAL",
        "TIME",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "DATE"
    ]
}