{
    "id": "DiGangfhJ4g",
    "title": "Linux for Hackers: LINUX commands you need to know (with OTW) // Ep 6",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2024-02-16T15:00:19Z",
    "video_url": "https://www.youtube.com/watch?v=DiGangfhJ4g",
    "category": "Science & Technology",
    "tags": [
        "kali linux",
        "linux",
        "process",
        "ubuntu",
        "kali",
        "kill",
        "kill 9",
        "linux processes",
        "ethical hacking",
        "linux for hackers",
        "parrot os",
        "ethical hacker",
        "information security",
        "linux for hacking",
        "how to hack",
        "linux tutorial",
        "intro to linux",
        "linux introduction",
        "kali linux tutorial",
        "mr robot",
        "hacking tools",
        "hack the box",
        "htb",
        "linux foundations",
        "linux course",
        "linux beginner",
        "linux hacking course",
        "hacker (interest)",
        "hacking linux",
        "hack linux",
        "kill process",
        "stop linux process",
        "windows",
        "mac"
    ],
    "views": 73649,
    "likes": 2733,
    "comments_count": 168,
    "description": "Big thanks to Brilliant for sponsoring this video! Get started with a free 30 day trial and 20% discount:  (First 200 people that sign up will get a special discount).  // Occupy The Web Books //  Linux Basics for Hackers:   Getting Started Becoming a Master Hacker:   Network Basics for hackers:    // OTW Discount //  Use the code BOMBAL to get a 20% discount off anything from OTW's website:    Direct links to courses:  Pro Subscriber:    // Occupy The Web SOCIAL //  X / Twitter:    // Playlists REFERENCE // Linux Basics for Hackers:     Mr Robot:    Hackers Arise / Occupy the Web Hacks:    // David's SOCIAL //  Discord:   X / Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:   YouTube:   // MY STUFF //    // SPONSORS //  Interested in sponsoring my videos? Reach out to my team here: sponsors@davidbombal.com  // MENU // 00:00 - Coming up 00:52 - Brilliant sponsored segment 03:10 - Linux Basics for Hackers // Process Management 04:39 - Kali command demo // Processes explained 08:09 - Finding malicious processes 09:22 - Processes explained 11:13 - \"Nice\" and \"Re-nice\" explained 11:56 - How to end malicious processes 15:16 - How to run processes in the background and foreground 17:58 - Scheduling processes 21:09 - Bash scripting like Max Butler // The story of Max Butler 27:00 - Keeping it simple for beginners 28:19 - Other OTW books 32:25 - Conclusion   Linux  Linux for Hackers Kali Linux  Parrot OS  Command Line System Processes Malicious Malware Bash Scripting Background Processes Quantum Computing Process Management in Linux Daemon Processes PS Command Usage Process IDs (PID) Terminal Management Top Command for Resource Monitoring CPU and Memory Usage Killing Processes Sudo for Root Privileges Apache Web Server Running Scripts in Background Scheduling Tasks with 'at' Command Network Basics Wireshark for Packet Analysis Firewall Configuration Wi-Fi, Bluetooth, and SDR Hacking Metasploit Framework Career Opportunities in Cybersecurity History of Hacking Passive and Active Reconnaissance Software Defined Radio (SDR)  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   Disclaimer: This video is for educational purposes only.  #kalilinux #linux #hacker",
    "description_links": [
        "https://Brilliant.org/davidbombal",
        "https://amzn.to/3JlAQXe",
        "https://amzn.to/3qCQbvh",
        "https://amzn.to/3W1iiCQ",
        "https://davidbombal.wiki/otw",
        "https://davidbombal.wiki/otwprosub",
        "https://twitter.com/three_cube",
        "https://www.youtube.com/watch?v=YJUVNlmIO6E",
        "https://www.youtube.com/watch?v=3yiT_WMlosg",
        "https://www.youtube.com/watch?v=GxkKszPVD1M",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/@davidbombal",
        "https://www.amazon.com/shop/davidbombal"
    ],
    "transcript": "So that's a really important command in being able to understand what's running on your system. Sometimes this can be really useful, especially if you're familiar with your system to see whether or not there's any malicious processes. So malicious processes often will, not always, but often will appear within the process table. Sometimes it's possible for really good malicious, good malicious malware to actually hide itself from the process command. And we're going to get into bash scripting here next couple of tutorials here and you know, we can run scripts that are going to run, you know, on a daily basis or a nightly basis or maybe just want to run right now and you can just put the ampersand over and we'll go and run in the background and it'll leave you with the terminal to use for other things. In my recent video, top five skills that you need to get in 2024, I listed one of those skills being quantum computing. And the question people often ask when I say you need to learn something is David, where do I get started? And I'm really happy to recommend Brilliant. Not only are they a fantastic partner, really want to thank them for sponsoring this video. I really love their training. Very easy to understand, very interactive and easy to learn. Now quantum computing is something that's probably going to revolutionize our lives in the same way that AI has. These are technologies that can change the way the internet works. Just recently, a startup named Atom made headlines for developing a quantum computer that boasts over 1000 qubits of performance. This is a huge change. And here's the exciting part. You don't have to spend thousands and thousands of dollars to start learning about quantum computing. Brilliant can help you to have a course that gets you started on your quantum computing journey. One of the things that I love about Brilliant is they can take these complex topics and make them accessible to all of us. The legendary physicist Richard Feynman once said, I think we can safely say that no one understands quantum mechanics. Brilliant embraces the sentiment by teaching quantum computing in a way that doesn't require you to untangle the intricacies of quantum mechanics. Their approach is great. It's intuitive, visual and makes it easier to grasp quantum computing concepts. It's really important that I choose the right partners. And Brilliant is one of those partners that I support and want to thank for supporting my channel. 2024 is the year that you can change your life. I really believe that education changes lives, and that's why I'm really happy to partner with Brilliant. They are helping you change your life through education. If you're interested about learning about quantum computing, you get a 30 day trial by using the link at https://Brilliant.org/davidbombal And the good news is that the first 200 people that sign up get an additional 20% off their annual plan. Don't miss this opportunity to dive into the fascinating world of quantum computing with Brilliant. Like a lot of things in life, new technologies can seem really complex, but once you understand the basics, a whole new world opens up to you. Make the most of 2024. Make the most of this offer. Go and sign up to brilliant.org using the link below. Everyone, David Bombal back with Occupy The Web. OTW, welcome. Thank you, David. It's always good to be back on the best IT and cyber security channel on YouTube. I always say, I really appreciate you saying that because you're a big reason for that for all of you who haven't seen our previous videos, I've linked a whole bunch below OTW and I have created a whole bunch of videos about Mr. Robot, Wi-Fi hacking, a whole bunch of other things. But in today's video, we're going to continue talking about chapters in this book. OTW, which one we're doing? I think it's six, right? Process management. Yeah. We'll do process management today. We'll get back to permissions on chapter five at a later time, but I'd like to talk about process management today. Process management is kind of one of those key skills that, you know, especially a admin in Linux needs to know, and a hacker needs to know as well. First of all, what is a, you know, a lot of people ask, what is a process, right? Or oftentimes, you know, there's in Linux, people often call them daemons or daemons. All right. So you'll see that term. Basically, we're talking about the same thing. So basically a process is a program that's running and using some resources. And in, if they're running in the background, right? In other words, you know, they're just running constantly in the background. They're often referred to as a daemon in Linux. So don't let those words confuse you or throw you off. We're basically talking about the same thing. Now there's a, a command in Linux that's called the ps command. All right. Let's do ps. This is like process. All right. If I just do ps, it show me the, the process ID. So every process that runs in Linux has a process ID. It shows me the terminal, the time and the command. Now what all this is showing me is what is running for this user. If I want to see all of the processes running on my system, I go ps aux notice that there's no, there's no switch before the new dash, like most of the times we put a dash before our switches or our options in this case, we don't. And we do ps aux. We can see, all right, that there's lots and lots of processes running under. Root. Okay. Some of them are running under Kali. You can see them over here and you can see in addition, there's a process ID. So every process has an ID. Let's go all the way to the top. And this is the init process. I mean, this is number one. I, this one spawns all the other processes and you can see there's a lot of processes in Linux. Similar to seeing looking at task manager, right? In windows. It's very similar to test manager. Exactly. Um, so yeah, and we can, we can use it like task manager too, in terms of being able to stop block processes and we'll look at that in, in just a little bit. But first of all, what I want to do is to kind of just show you, you know, these are all the, these are all the things that are running in the background on your system. Yours may be slightly different. The last one, it's always important to note that the last one is the command that you just ran is your process is running ps aux. So even, so let's, let's go and let's look for a, a process. We can of course use the grep filter. Those of you who haven't seen it before, this is the pipe and what it does is it takes the output from this command and sends it to another command, right? So we can go grep and let's say that we're looking for all of those that say, have them, let's say Apache 2. This is an example, Apache 2 is the web server. So we're looking forward to see whether or not Apache 2 is running on the system. And we can see that only thing that comes up is the search for Apache. So let's try starting Apache. Okay. And we'll go systemctl start apache2 This is the web server and we'll start it. So now patchy two should be running. That's our web server that's built into nearly every Linux, right? And Apache 2 is one of the oldest web servers around. It's one of the most popular in the world and it's built into Debian and other Linux distributions and certainly is in our Kali. Now, if we up arrow and do a search for Apache 2, we can see there's several processes that are associated with running the web server and you can kind of see that this process here is started by root. And then these are all owned by www-data, which is the default user in Apache. And then the last one is, is me running as Kali searching for Apache 2. So that's a really important command and being able to understand what's running on your system. Sometimes this can be really useful, especially if you're familiar with your system to see whether or not there's any malicious processes. So malicious processes often will not always, but often will appear within the process table. Sometimes it's possible for really good malicious, good malicious malware to actually hide itself from the process command, but most of the time it's going to appear. So if you're familiar with what's going on in processes on your system, you can kind of look to see whether or not anything looks out of sorts to see whether or not there is a malicious process, malware, virus, whatever you're running on your system. So that's a key one for just doing some basic enumeration of processes. And, you know, these process IDs are become important in understanding, you know, how Linux goes ahead and sets up each one of the processes with the init being number one, init being initial or first. Right. So init is always the first process. We can also use the command top. And the beauty of top is that it refreshes and I'll hit and run it. Top does the same thing, except look at it's updating constantly. So it's showing us the processes that are using the most resources. So you can see here, it shows us first the process ID, a user, the PR, the NI, the virtual, the rest, the share, the S, the percent CPU, the percent mem. And, you know, I've got all of those kind of laid out in Linux basics for hackers. You know, so process ID is, is probably the most important and the user who's who actually initiated the percentage of CPU, I think the self-explanatory and the percent of memory. And then lastly is the command, right? What command started this process? That you see that changing as one process takes more resources than the others. This is really useful because oftentimes if your system is hanging or you have malware on it, malware will often try to go to the top of being the hungriest process, it'll try to use as much resources as it can. So by, by looking at this, you oftentimes, you'll find, you know, malware right up near the top, slowing your system down, using up resources. If somebody has put in a bit miner, which is something that's been around there for a while, somebody puts a bit miner on your system, it's probably going to show up as the hungriest process using the most resources. And of course then, you know, oftentimes we can simply kill it and we'll get to that in just a minute, okay, about killing processes. So this is top, right? And top, basically you can stop top by using the queue. So quick. All right. And I'm going to clear my screen. One of the things that we talked about is killing processes in the book. I talk a little bit about nice and renice. I'm going to pass that up. So I'm going to make a reference to it here. And you know, if you want to learn more about the nice and the renice command, you can find it in my book. But what that does is that it allows you to change the priority of a process. All right. So if you want a process to not use as much resources, you can renice it. It means that gives it a lower priority or higher priority. So that's something that a Linux manager can do to be able to optimize their resources. As far as hacking goes or being a defender or malware analysts or the intrusion detection analysts, one of the things that we might want to do is to be able to kill what looked to be malicious processes that sometimes is possible. So let's take a look at ps aux. And if you remember that I was able to, I started the Apache command. So let's go ahead and back and look for it again. And the Apache process, Apache 2, not the Apache, but the Apache 2 process. And we can see that here's the process right here. Now, if we were to assume that maybe this was a malicious process, right. And one of the things that we could do is simply kill it. So let's try that. Let's try using the kill command. And in my book, Linux basics for hackers, I show you at least five different ways of kill. All right. There's kill 1, kill 2, kill 3. There's all kinds of different kills, but the one that usually is, is most effective when you're talking about malware or other processes that you don't want running on your system is use the kill 9. Kill 9 basically will kill it. It's kind of like, um, uh, it's kind of like pulling the plug on your computer, right? It doesn't do any housekeeping. It's a, it's a very dirty way of just killing the process without allowing the process to do any cleanup. And in case of malware, you don't want it to do any cleanup, right? You want to just kill it. So let's go ahead and do kill -9 and then let's kill our Apache right here. And let's kill it. And it says operation not permitted because I didn't use sudo. All right. So let's go out and use our sudo and there. Okay. So killing often, you know, you need to have some root privileges. That's why I needed to use sudo to kill it. Now let's go back and up arrow and look for our Apache 2. Okay. Occupy The Web I just noticed something, um, on the processes, the numbers at the top are different to the ones at the bottom. Did it kill it and then just respawn or something? So what happened is that we killed it. It killed the original Apache and then it restarted. Okay. So we started it again. And so this is, uh, you know, we have it all running again. It basically shut it down and then restarted it again. So, so we have all different processes here. So this is one of the potential weaknesses of the kill command is that sometimes when you're trying to kill malware, the same thing will happen is that it will. You'll try to kill it and it'll just pop right back up, but that's pretty sophisticated malware that will do that. Apache 2 is designed to automatically restarted when it gets killed. Unless you go through the, for instance, a sudo system control and stop the Apache2 and there we go. We stopped it. Now let's go and look at our processes and they're all gone. And the only thing that's left is the search for Apache 2. Sometimes we want to run processes in the background. So for instance, so when you go open up a text editor, say in this one here, I think the default text editor is mouse pad. Right? So you go mouse pad and opens up a text editor, but notice what happens is that it's basically it's controlling this terminal still while the mouse pads open. So I can't, I have no prompt over here. All right. So let's go ahead and close this. Okay. And then let's go ahead and say open mouse pad, but in this case, let's go ahead and put in an ampersand after it and see what happens is that it gives us back a prompt again, and it's running now in the background. So it's still running, but it's not using the terminal. The terminal has been returned to us and we can still use both of them. Whereas previously it would, it would hold the terminal and wouldn't allow us to use it. Sometimes we want to go ahead and move a process into the foreground. Sometimes we, so this is, we moved it to the background. We can use the ampersand. There's another command fg that allows us to then to move the process to the foreground, this case it's a mouse pad we're looking at. So let's go ahead and see if we can't move it into the foreground. And it looks like it's now into the foreground. Right. So now see it's, it's using the terminal and we can't, so we can, you know, this is a, this is a way, you know, sometimes you want processes that are just going to run in the background and you can do other stuff while it's running. And this is a way to do that. You can use the ampersand after the command. All right. I'm going to go ahead and close down my mouse pad, or if you have a script, let's see, we'll go sudo by hacking script. All right. So you've got a script that's going to be running and we're going to get into bash scripting here next couple of tutorials here and you know, we can run scripts that are going to run, you know, on a daily basis or a nightly basis or maybe just want to run right now and you can just put the ampersand over and we'll go and run in the background and it'll leave you with the terminal to use for other things. Sometimes it's obvious when you're in a GUI like this, right? But if you SSH into a machine and you've only got that one terminal or you're on the console and you have to do stuff like this, if you want to control the console, right? Exactly. Yeah. So if you only have one console, then you're going to have to go ahead and background everything so you can keep on using the same console. You don't, you can't, you know, just spawn new consoles constantly and SSH into another machine. The other thing I wanted to show is what's called scheduling processes. And there's at least, there's several ways of scheduling in Linux. There's a very simple command, which is called the at command that allows you to schedule processes. So if you've got a script that you want to run at a particular time, you know, half hour from now, 12 hours from now, every day, you can use the at command. Now it's not built into Kali by default anymore. So you're going to need to go sudo apt install at. And it looks like I've already got it in this one at is already the newest version right there. So at is a real simple, easy to use later on. We'll look at using cron jobs and cron tab to be able to schedule jobs. But this, this is a, the simplest, right? So if you're just starting out and you want to just be able to schedule a job in some time down the road, we can go ahead and let's see if I've got any scripts in here that we might want to schedule. Oh, let's see. Here's my Python port scanner. All right, let's go and, and use that. And we'll, we'll get into writing some, some bash scripts to do this, but here this happens to be Python. So we can use the at, okay. So at, and I say at nine PM. Okay. And then it'll come back with a prompt. All right. It says, what do you want to run? This is commands will be executed with bin shot. Thank, thank you for that. I appreciate that. And then I can just go ahead and tell it to go. I have that script in there for home at Kali and my, I'm going to say, I think I've copied it and it's going to paste it in there. Yeah. My Python port scanner. And then it's going to have that, that particular port scanner ready to roll, ready to run at that particular time. All right. At nine PM today. Now in my book, I've got some, some, some of the shortcuts that you can use to be able to, so some of the shortcuts you can do is like, for instance, you can do at, okay, I'll just give you some of the, at 7: 20. All right. You can tell it to go at 7:20 PM. All right. That's what we just did. You can actually then actually put in July 4th. So it'll say, okay, now it's seven 20 on July 4th. It'll run that script or you can put in at noon, July 4th. All right. So there's different ways that you can, you can put it in at midnight. You can say, you get really specific and say at now plus 3 hours and it'll run that script at that time. And so this is a simplest way to be able to run your scripts and the other jobs that you have jobs might be including like doing backups in my book, Linux basics for hackers and chapter eight. We do bash scripting. And one of the things we do there is that we create some simple scripts, similar to a very famous hacker who just got out of prison a couple of years ago by the name of Max Butler, Max Butler, Max Vision went to prison for basically creating the largest, um, hardware market in the world and got caught, was sentenced to 14 years prison. What he did is that he figured out that there was a particular point of sale system called the Aloha point of sale system, which is very popular among very small businesses. And he figured out that there was a tech support, you know, um, port on it, port number 5505 and tech support for the company would go in there to help the customers. So he figured this out and he would go in there and basically steal all the credit card numbers. Wow. And so he, he ran this in the early aughts of the 21st century. He got caught in 2007. Um, at that point he had like 2 million credit card numbers. He was sentenced to 13 years in prison and just got out. What he got out, uh, April of 2021. So one of the things that we do in the class is to imagine that we're Max but our class in the book and Max would, would scan the world for open ports that had 5505 open. So what we do on chapter eight and we'll get to this in a later tutorial is how could we write a script that's going to run every night to scan the world for port 5505 or whatever port happens to be? Because of course, you know, from the attackers point of view, there's always new vulnerabilities that are being found and be so they they're going to be associated with different port numbers. So we put together a script that will allow us to scan a range of IP addresses looking for a particular port. Maybe it's 5505 or maybe it's 3306. Maybe it's 55 to 18, whatever the port happens to be. We put together a nice little script that allows us to run, uh, you know, whatever time you want it to do. In Max's case, Max was actually working as a security engineer in Silicon Valley by day and by night he was running the biggest card in the market in the world. And he was accumulating so many credit card numbers that he couldn't use them all fast enough. So he was actually basically getting other people. He would get people to go ahead and give them a credit card number and let them shop with it. And then they would go to the store and they would go to the store and they would let them shop with it. And then they would turn around and sell the goods and pay a commission to the people who had done the shopping. So he had so many cards that I think that was kind of was his downfalls that he got became too big and too powerful, but he's back on the street. He's got a three year probation, I think. So he's maybe we'll see him on some news show or what have you. There was a TV show in the US about him. I don't remember what it was called, but they did a little TV show about his adventures in hacking. So we're going to, in chapter eight, we're going to kind of replicate what Max did in 2007 that landed him in prison for 13 years. Not actually the hacking part. We're going to do the scanning part. So don't worry, don't worry folks. We're not going to get you guys in prison. Scanning in most places is legal. Scanning is just going out and sending packets to a website or server and see what ports are open. That is not illegal in most places. I've heard from some people who've told me, well, in my country, that's considered preparation for creating for a crime. But that's just, you know, that scanning a server is what we do as administrators. We want to scan our servers to see what ports are showing. This is typical admin work. It's also typical hacker reconnaissance work. So I wanted to ask you, does the at command allow you to do recurring? Is that what you're saying? Or do you need to use cron for that? No, if you're going to do recurring, you're going to have to do crontab. So we'll do crontab in the future. That's why crontab is a little more powerful. But if you just wanted to set up some, a quick and dirty job to go ahead and, and schedule for three hours from now or five hours from now or 12 hours from now or tomorrow at midnight, it's, it's simple and easy. You don't really have to learn a whole lot and just kind of need to know the simple syntax of at in the time and then tell it what, what you want it to run at that time. That's why I included it in the book because it doesn't really take much of the way of background knowledge. Whereas crontab takes a little bit more, you know, a little more knowledge and we'll look at that and show you how to use it. And then you can set up a job to run, you know, on the fifth day at two 10 of every month or every other month. Or, you know, it's that, it's that, it's that detailed and granular that cron job can allow you to select what months, what times, what days of the week, you know, that you want to run a job. So for administrator, you're probably going to want to use cron job crontab or simple tasks like what we're just doing here at will work for fine for just like one time script. You want to schedule into the future. I mean, we've had this discussion a few times. The advantage of what you've done in this book is that you've kept it really simple. And I mean, I'm so glad that you did this as well, because the problem with a lot of Linux books or Unix books is, I mean, they're ridiculously big and so difficult to consume, but it's very easy for someone to get started with this book. And I mean, I appreciate you keeping the videos very simple as well. Occupy the web. Yeah, I think there was a whole idea behind the book, the whole, I'm glad you appreciate it because the whole book was set out to be very concise, concise, precise, and just what you need to know to get started with Linux in a cyber security environment. Yes, I could probably write five or six more books of that size to cover all the details of Linux, but I just wanted to help people get started in Linux in cyber security so they could use it. And so I try to keep, you know, we had a goal of keeping it under 250 pages and we did that and kept it very, very simple and concise. And I hope that, I mean, I've gotten, it's, it's a best seller. It's done. It's a best selling Linux books over the last five years. So I guess people appreciate that approach. Yeah, I mean, it's the whole thing. You know, you can, you don't want any encyclopedia of knowledge. You just want to get started. I mean, you can always refer back to that, the more complex stuff later, but you, if that initial hurdle that I think is the hardest for most people, and I think that's what you've done so well here. Keep it very, very simple, but you got to tell them, tell me about your other books because that's not the only book you've written. You've also got Getting Started, Becoming a Master Hacker, and Network Basics for Hackers. Why did you write these two? Well, the, I also have Metasploit Basics for Hackers, but it's not available in, in the printed book. It's only available in PDF. Metasploit Basics for Hackers, I wrote three or four years ago. You've got to get you back for a video for that, man. Okay. We'll do, let's do it. Let's do a Metasploit Basics. Yeah. That'd be great. Talk about the book and, but yeah, I have, that's only available on our website and PDF form, the printed, we have Network Basics for Hackers and that book really came out of my students asking for that book. Right. I mean, I, I, I wasn't, it wasn't really my intention to write it. And so many people asked me for it. So I said, okay, I'll write it. And, and that has become, it came out one year ago, almost one year to the day, actually, I think it was on January 7th, but it's been a really good seller. People really appreciated that. It's really, basically what it is is it's basic networking, really basic networking for the first couple of chapters. You know, we, we talk about some of the concepts. We talk about subnetting. We then go into things like Wireshark and how do you use Wireshark? How do you create a firewall in Linux? That's something that we don't have in Linux basics for hackers. How do you create a firewall in Linux? And there's lots of different ways of doing it. And then we go into more detail in the latter half of the book into other types of networks, including Wi-Fi, car, car hacking, Scada hacking, SDR hacking, you know, the radio hacking. So we do, the whole idea was to introduce the student to the basics of networking. And then let's look at other networks like cars, like SDR, like Bluetooth. And so we go into in each one of those areas and give you at least a taste of what those networks look like. And then I wrote getting started becoming a master hacker, which was, was intended for the reader to be able to start doing some of the exercises, the hands-on type. It's more of like a lab manual where you go through each of the areas of a hacking process and do those starting with passive reconnaissance, then active reconnaissance, you know, password cracking, Wi-Fi cracking, all those are part of that book. We do a fair amount in Metasploit in that book. And also we have a little bit at the beginning of that book about careers in hacking. And we talk about what careers can you actually do? You know, it used to be that, you know, hackers were all doing stuff that was illegal. And then we had penetration testing, but now we have so many fields that hackers can do legally and legitimately, such as bug bounty hunting. And as we all know, you know, the, the intelligence communities and the military communities are all using hackers. Of course, there's always still going to be criminal hacking as well. And then one of the things I was kind of surprised at in reaction to that book is that people read the section on the history of hacking and they were like, wow, I had no idea. I had no idea that hacking had been going on for so long and it had been so significant. And it still is. And I have to update that section of the book and hopefully I'll do that in the near future. But a lot of things have happened since that book was written in terms of history of hacking. So we'll, we'll do an update maybe in 2025 and come up with a new version of getting started, becoming a master. Hopefully we have the new version of Linux basics for hackers coming out before the end of the year. And so once again, I say, hopefully, you know, it's sometimes, you know, writing a book takes more time and energy than you can imagine, not necessarily the writing part, but the printing and all the editing and what have you often takes a lot longer than you might imagine it does. OccupytheWeb, I really want to thank you for sharing, you know, and keeping it simple, taking all these years of knowledge and making it available to all of us, you know, for taking the time to be on YouTube, share all this knowledge. For everyone who's watching OccupytheWeb and I have discussed new videos and he mentioned Metasploit and SDR. Are those the kind of topics that you'd want to see? Please put in the comments below the kind of stuff that you want OTW to cover. He's got such a wealth of knowledge. So let's tap into his knowledge. Let us know what you want us to create. What do you think about those videos? OTW, SDR, Metasploit? Yeah, I think let's do, let's do Metasploit. You know, let's give people kind of an introduction of how to use Metasploit. Metasploit is a framework that has all these tools built into it rather than, you know, going out and gathering different tools from different places. It puts a, you know, several thousand tools into one framework. And then I think you might, some people might be interested in this. Actually, you can intercept and hack radio waves. So this is one of the things that's kind of all the rage in the last year or so, especially when the Flipper Zero came out. But with, there are, you know, SDRs, that's what Flipper Zero basically is a software defined radio. It's been around for about 10 years and they're getting more and more powerful. And there's more and more things that you can do with those, including hacking satellite signals. And so that's something that I think we'll do in one of the near term tutorials here, maybe in the next couple of weeks. That'd be brilliant. OTW, thanks so much. Thank you for having me, David. It's always a joy to be on your show.",
    "transcript_keywords": [
        "process",
        "Linux",
        "Apache",
        "Linux basics",
        "book",
        "processes",
        "running",
        "command",
        "run",
        "kill",
        "things",
        "system",
        "hackers",
        "basics",
        "people",
        "hacking",
        "kind",
        "Linux books",
        "ahead",
        "time"
    ],
    "transcript_entity_values": [
        "YouTube",
        "every other month",
        "Linux",
        "9",
        "over 1000",
        "SSH",
        "one year ago",
        "at least five",
        "two",
        "the last five years",
        "2024",
        "tomorrow",
        "YouTube",
        "Python",
        "every night",
        "the year",
        "two 10 of every month",
        "chapter five",
        "250",
        "Max Butler",
        "Metasploit Basics for Hackers",
        "Linux",
        "Network Basics for Hackers",
        "nine PM",
        "Scada",
        "just a minute",
        "the early aughts of the 21st century",
        "April of 2021",
        "half hour",
        "2024",
        "David Bombal",
        "Wi-Fi",
        "20",
        "S",
        "months",
        "2 million",
        "annual",
        "Max Vision",
        "5505",
        "five hours",
        "an additional 20%",
        "the fifth day",
        "January 7th",
        "55",
        "3",
        "now plus",
        "2025",
        "today",
        "OTW",
        "Apache 2",
        "one",
        "Max",
        "14 years",
        "PDF",
        "three year",
        "Flipper Zero",
        "7:20 PM",
        "Aloha",
        "the next couple of weeks",
        "12 hours",
        "first",
        "about 10 years",
        "Bluetooth",
        "3 hours",
        "Occupy The Web",
        "ps",
        "noon",
        "Richard Feynman",
        "fg",
        "Getting Started",
        "David",
        "the end of the year",
        "IP",
        "Linux",
        "Atom",
        "AI",
        "almost one year to the day",
        "SDR",
        "Debian",
        "First",
        "thousands and thousands of dollars",
        "1",
        "apache2",
        "seven 20",
        "US",
        "midnight",
        "18",
        "six",
        "Metasploit",
        "the last year or so",
        "three or four years ago",
        "30 day",
        "200",
        "five",
        "chapter eight",
        "2007",
        "One",
        "Wireshark",
        "CPU",
        "Apache",
        "2",
        "daily",
        "number one",
        "Metasploit",
        "Kali",
        "Robot",
        "Silicon Valley",
        "13 years",
        "ps aux",
        "the latter half",
        "GUI",
        "three hours",
        "OccupytheWeb",
        "a couple of years ago",
        "several thousand",
        "nightly",
        "July 4th",
        "7"
    ],
    "transcript_entity_types": [
        "GPE",
        "DATE",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "DATE",
        "ORG",
        "ORG",
        "TIME",
        "DATE",
        "DATE",
        "LAW",
        "CARDINAL",
        "PERSON",
        "ORG",
        "GPE",
        "ORG",
        "TIME",
        "GPE",
        "TIME",
        "DATE",
        "DATE",
        "TIME",
        "DATE",
        "PERSON",
        "ORG",
        "CARDINAL",
        "ORG",
        "DATE",
        "CARDINAL",
        "DATE",
        "PERSON",
        "CARDINAL",
        "TIME",
        "PERCENT",
        "DATE",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "TIME",
        "DATE",
        "DATE",
        "ORG",
        "PRODUCT",
        "CARDINAL",
        "PERSON",
        "DATE",
        "ORG",
        "DATE",
        "PERSON",
        "TIME",
        "ORG",
        "DATE",
        "TIME",
        "ORDINAL",
        "DATE",
        "PERSON",
        "TIME",
        "ORG",
        "ORG",
        "TIME",
        "PERSON",
        "ORG",
        "ORG",
        "PERSON",
        "DATE",
        "ORG",
        "PERSON",
        "ORG",
        "ORG",
        "DATE",
        "ORG",
        "NORP",
        "ORDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "DATE",
        "GPE",
        "TIME",
        "CARDINAL",
        "CARDINAL",
        "PRODUCT",
        "DATE",
        "DATE",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "LAW",
        "DATE",
        "CARDINAL",
        "PRODUCT",
        "ORG",
        "PRODUCT",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "ORG",
        "PERSON",
        "PERSON",
        "LOC",
        "DATE",
        "ORG",
        "DATE",
        "ORG",
        "TIME",
        "PERSON",
        "DATE",
        "CARDINAL",
        "DATE",
        "DATE",
        "CARDINAL"
    ]
}