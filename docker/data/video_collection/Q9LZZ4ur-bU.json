{
    "id": "Q9LZZ4ur-bU",
    "title": "2023 Network Engineer path to success: CCNA?",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2023-01-06T15:00:22Z",
    "video_url": "https://www.youtube.com/watch?v=Q9LZZ4ur-bU",
    "category": "People & Blogs",
    "tags": [
        "ccna",
        "cisco",
        "ccnp",
        "free ccna",
        "ccna 200-301",
        "ccna training",
        "ccna certification",
        "cisco ccna",
        "ccna full course",
        "new ccna",
        "ccna course",
        "ccna exam",
        "devnet",
        "cisco devnet",
        "jncia",
        "juniper",
        "aruba",
        "devnet associate",
        "devnet cisco",
        "devnet certification",
        "python",
        "linux",
        "aws",
        "azure",
        "gcp",
        "cloud",
        "networking",
        "api",
        "vmware",
        "docker",
        "ccna study",
        "ccnp training",
        "ccnp study",
        "cisco devnet associate",
        "ccna routing and switching",
        "certs worth it",
        "ccna 2020",
        "cumulus linux",
        "ccie",
        "arista",
        "cumulus",
        "ansible",
        "network+"
    ],
    "views": 249297,
    "likes": 8612,
    "comments_count": 397,
    "description": "What should you be learning in 2023 to be successful as a network engineer? Which skills and trends are most important.  // MENU // 00:00 - Previously on 00:43 - Introduction 02:29 - Is it worth getting into Networking is 2023? 05:02 - Networking in the Cloud 07:24 - Changes in Networking over time 08:07 - Networking Fundamentals 11:11 - Recommended Skills 14:37 - ipSpace.net 14:53 - Skills (Continued) 16:02 - Containers 17:52 - Programming 19:44 - Machine Learning 22:09 - Combining Skills 22:53 - If you were starting tomorrow...? 23:37 - Combining Skills (Continued) 24:06 - People Skills 25:03 - Certifications 28:20 - Labs 30:44 - Multiple Vendors 32:08 - Getting Experience without Experience 34:22 - Documentation 35:28 - Sharing your stuff 37:52 - Git 38:44 - Linux 40:01 - Understand Adjacent Skills 41:30 - Certifications (Continued) 43:00 - CCIE still relevant? 45:15 - CCNP 45:46 - Cisco Certification 46:55 - Deep Work 48:08 - How to Learn 52:14 - Don't Give Up 52:45 - Wrapping up 54:30 - Outro  // Previous Videos // Your path to success as a Network Engineer in 2021:  Any future for Network Engineers:  The top 10 skills Network Engineers need to learn in 2019:   // Ivan Social // Website:  Twitter:  LinkedIn:   // David SOCIAL // Discord:  Twitter:  Instagram:  LinkedIn:  Facebook:  TikTok:  YouTube:   // MY STUFF //    ccna linux devnet python ansible  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #ccna #python  #cisco",
    "description_links": [
        "https://youtu.be/HemWKwd2AvM",
        "https://youtu.be/LzooeiGxKis",
        "https://youtu.be/grS__DS3v7c",
        "http://bit.ly/2Hci4oL",
        "https://twitter.com/ioshints",
        "https://www.linkedin.com/in/ivanpepelnjak/",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal",
        "https://www.amazon.com/shop/davidbombal"
    ],
    "transcript": "- Regardless of what pays the bills, learn the fundamentals 'cause eventually you will need them, and eventually every environment will get to a point where the network will be down, and who will troubleshoot that? The Python guys? The cloud guys? Or someone who took time and learned the fundamentals? So there are tons of things that you can do on absolutely zero budget. And then when you get to a job interview, you can say \"I did this, and I did this, \"and I did this, and I learned this.\" And it costs you nothing apart from your time. \"It's that crazy guy, \"and we throw pizza under the door, \"and eventually the network works.\" (upbeat music) - Hey everyone, it's David Bombal, back with a very special guest. Ivan, welcome. - Thanks for having me. - Yeah, Ivan, it's fantastic to have you back. We did a video, probably a year and a half ago, and then we did a video a year before that. Just for everyone who doesn't know Ivan, Ivan is a fantastic person in the networking industry or field, years and years of experience. Ivan, I'm gonna let you introduce yourself, but I really want to tap into your knowledge and experience to help people who wanna make a success of their lives in the networking sphere or field in 2023. So Ivan, tell us a bit about yourself and let's tap into that knowledge. - Well, I've been an networking engineer for way too long. I probably started in 1985 or something, when the high speed links were 9.6 kilobits, for people who can still spell that. So I've seen everything and everything else in between, and figure out that, more or less, the history repeats itself. So whenever you hear the new hype, it's like, \"Oh yeah, we've seen that before.\" I love writing blog posts and doing videos, explaining how all the new hot stuff is really just a bad iteration of the failures we've seen in the past, and so the vendors love me. - I was gonna say that. So for everyone who's watching, what I really appreciate about Ivan is he doesn't mince his words, and he's not beholden to some vendor, and he gives it to them as it is. And I really appreciate you giving us direct advice. So let me warn you, Ivan's gonna give us advice directly, so no beating around the bush. Ivan, I really appreciate you doing that. - Well I am Central European, I am known not to be polite or diplomatic, so... - That's what I... That's what I want. So Ivan, let's start with the question that I always ask you, is it worth getting into networking in 2023 or should I rather become a developer or something else? - Well, it really depends on what your career goals are. Networking is not something that I would say, \"Well, if you want to have a fantastic career, \"go into networking.\" Networking is like plumbing. It's a reliable business, everyone needs plumbers, everyone needs networking engineers. There will always be work to do. It's not like we will get rid of plumbing or networking. I mean, even with wireless, you don't have wires but you still have networking. So there will always be something to do, it will always be exciting if you are in the right mindset. I was never bored in my life. But is it some fantastic career? Well, not really. If you want to have a fantastic career, you should go to McKinsey. - So I think last time we spoke, you mentioned this, it's more like, what's it, electrical transmission? Rather than-- - Yeah, power transmission, water treatment, plumbing, paper mills. - So in other words it's not cool and sexy, but it's reliable and there's always gonna be work, right? - Absolutely. - Because I always hear people saying, \"Networking will go away, \"it'll be replaced by the cloud.\" All this kind of stuff. - Enterprise networking will diminish. So people who were building wired campus networks in the past are probably building wireless networks now. But even an organization that... Well, let's put this way, an organization that's big enough will probably never go and just use the mobile networks of some operator. It's like big factories, they have their internal power plants and they have their internal UPS systems, they have to be independent of any third party operator. If you are employing 1,000 people, you can't rely on someone else to provide the infrastructure for connectivity because that guy fails, you can just send 1,000 people home. So there will always be that. Obviously, the servers are moving into the cloud. We don't have that many servers on site anymore, so maybe we don't need a data center onsite anymore, but we still have to connect our people to the workload in the cloud and someone has to get that done. And usually, it cannot be done over the public internet because security, and HIPAA, and PCI, and GDPR, and all these wonderful acronyms that effectively mean you can't transport your shit unencoded. - It's interesting, I've seen a lot of people from Cisco, or Cisco engineers, move to AWS. I mean, they... You have to do networking in the cloud, right? - Well, there are two types of networking in the cloud. Obviously, the cloud provider has to do networking, they have to build the infrastructure. And if you have a million servers in a single location, I mean, that's awesome. If I would be working somewhere there and got an invitation, probably I would go for it as well. But obviously, they only take people with enough experience. They will not train their own people. That's too expensive. Why should they if they can just buy talent on the market? And the other thing is even if they build all the infrastructure, then they give you the tools that you can build your own networking on top of that. And some people just think that you can copy/paste your way around, and you run click ops, and click crazily on the GUI until something works, and then you leave it as it is because \"don't touch it because \"we don't know why it works,\" that can give you that... Well, that can get you to a certain point but eventually, as you grow, as your needs expand and... Networking in the cloud is as complex as networking anywhere else. You need names for your servers. Those servers have to be reachable from anywhere. You want to have servers in different regions because latency. Unfortunately, cloud hasn't solved the laws of physics. The speed of light is still not infinite. So you have to deploy your servers in various regions, and then you have to send your clients to the closest server. And you can't have one server, you must have multiple instances. And you need a load balancer in front of that. And well, unless you believe in the magic powers of having your Memcache Daemon opened toward the internet on UDP and being used for denial-of-service attacks, which some people did, then, well, you better protect yourself, which means you need security, you need firewalling. And I just mentioned everything we've been doing for the last 20 years, nothing is going away. It's just available through an API and build by the minute and gigabyte. - I love what you said, I mean, in the beginning. You've always emphasized that you see the same stuff just with new packaging. - It's getting worse beause in the good old days, we had the same stuff from different vendors and it behaved more or less the same way. It had different CLI, it had different show commands, it had different bugs, but a router, was a router, was a router. IP routing in AWS, Azure, and Google Cloud works completely differently. You think it's IP routing but there are subtle differences. It's like you would be on three different planets with different gravity and different air pressure. It's not like you would buy stuff from three different vendors and it would, more or less, behave the same way. You go into three different public clouds and they behave in different ways. So fun times. - I think you've said it... Well, you said in our previous interview. One of the most important things is to learn the fundamentals, right? - Absolutely, I always say that. - So when you talk about fundamentals, what are you talking about? - For example, if you want to understand how the networking in cloud violates the first principles, first you have to know what the first principles are. So you have to know... Just a simple question. You should be able to explain to anyone what an ARP request is and why do you need that. And why you don't have ARP in IPv6, for example. And what is the subnet, and why is the subnet important, and why is it a bad idea to stretch your subnet from here to New York, which some people wanted to do. And why it's a bad idea to pretend the bridging will save the world, and that we could just stretch this virtual ethernet cable from here to Antarctica. And then, well, we can go on, and go a layer or two up, and the question, for example, why... Well, does it matter if you have IP interface... IP addresses on interfaces or should you have them on nodes? And if you have IP addresses on interfaces, how does multihoming work? Take your phone, your phone is on wifi, it's also on 5G, so it gets two IP addresses. How does that work? How does the handover work? I'm talking with you on Zoom, and I lose my wifi, and the Zoom call is still going on? How is that possible? So very simple questions with some very interesting answers. - And I mean, that knowledge, I think this is the way I understand it: If you get that fundamental knowledge, you could go and work on AWS, you could work on an enterprise network, you could go anywhere. The concepts stay the same, right? - Well in AWS, it's slightly different, but you very quickly figure out, \"Oh, yes I do have ARP \"but it behaves in a slightly different way. \"I have something that looks like ethernet \"but I can't do broadcast, \"I can't do multicast. \"I can't do any of the crazy stuff \"I'm doing in enterprise networks. \"I can't just move one MAC address \"from here to there. \"I can't have two nodes sharing the IP address \"so my usual crappy clustering doesn't work.\" Then you go to Azure, and you figure out that, \"Gee, even ARP doesn't work the way it should.\" In Azure, by the way, every ARP request is replied with the same MAC address. And then, you figure out that, \"Oh, in AWS, you could actually use static routes \"if they point to a Next Hop \"that's in the same subnet \"because ARP and all that layer two magic. Whereas in Azure, you can't use static routes on the servers because they all point to their router, and their router doesn't care about your static routes. But there are these slight differences that make it so frustrating to work with public cloud networking. - When we looked at this previously, you gave us like some top skills to get, and it sounds like fundamentals is always that big thing that you emphasize; Get the fundamentals. Are there any other skills that you'd recommend I get? So I said... I asked you this last time, but let's bring it up to date for 2023. If you were talking to your younger self... I mean, we both wish we were 18, or 25, or something again. If you were talking to us, let's say we were starting our careers today, what kind of skills would you recommend that I look at getting? Fundamentals of networking we've discussed, but do you want to elaborate on that and perhaps tell us some other skills that we should look at getting? - People skills. Communicating with people. That's supposedly hard for engineers. The other really important thing that it took me decades to realize is that the people who pay your paycheck, or whatever it's called where you are working, they matter. So business matters. You are working somewhere because the organization wants you to do something that will help them make money. So you're not building networks because they're fun, you're building networks because someone want to transport something over the networks. On one hand, you have to be pretty realistic in what's possible, and don't overpromise and underdeliver. On the other hand, you cannot be the department of no, 'cause you're just saying, \"No, this cannot be done,\" and you do it too many times, they will just bypass you. - Sounds like that's what happened in the data center, right? With like VXLAN and all that stuff, where they decided to get rid of networking to a level. - Well, no. With VXLAN in the data center, we finally came to our senses. Because the whole reason why we had the data center networking that was as crappy as it was, was because VMware was lazy, and they implemented the minimum possible virtual switch that effectively offloaded the problem to someone else. So instead of me implementing the virtual networks, I will pretend that VLAN is the answer, regardless of what the question is. And I will use VLANs and I will blame someone else for not solving the problem. And the networking vendors who are quick to say, \"Oh no, don't worry, \"we will solve the problem, \"and you can buy this overpriced switch, \"but it works so well with the VMware crappy switch.\" So everyone was happy apart from the customers. And now, with VXLAN, we finally moved the virtual networking on top of IP. Remember when we moved voice on top of IP? That was like a decade before VXLAN? - We're showing we're showing our age, yep. Go on. - And you remember when we moved storage on top of IP? With iSCSI, and NFS, and SMB, and all that stuff? And we were still transporting VM traffic over VLANs, and configuring physical switches every time a new VM appeared on a server? How crazy is that? We finally figured out that, well, you can put ethernet on top of IP like everything else, and virtual machine traffic is just an application like every other application. And so, finally, we would have a sane data center network if only it wouldn't be for VMware and networking vendors. - This is what I love about Ivan, and just for everyone who's watching, Ivan's got a website where he goes into this stuff in lots and lots of detail. Bunch of free stuff on his website, bunch of webinars that you can pay to attend. If you really want to get into the nitty gritty of this kind of stuff, then have a look at the links below. I've put a link below where you can go and have a look at these courses. Ivan, last time, we spoke about skills... Let's get technical. Skills like Linux, you were saying is one of the skills people should get. Get Python. Does that kind of stuff still apply? Any other techy skills that you think people should look at getting? - Well, nothing has changed in these two years. We are... Well, the industry is changing but the pace is glacial, regardless of what the pundits will tell you and the... Just ignore the unicorns dancing around. That's always a safe bet. So yeah, Linux, absolutely because if you take a look at what's underneath many of the network operating systems, it's Linux. Nexus-OS is running on Linux; Cisco. Arista EOS is running on Linux. (murmurs) Linux, by definition, is running on Linux. Vyatta is Linux. Dell OS10 is Linux. Even Cisco IOS XE is Linux deep under the covers. You don't see it, but it's there. Definitely get some Linux skills, that will always come handy. - Yeah, I wanted to talk about that because last time, we didn't spend too much time talking about that. So you're talking about Docker, Kubernetes, stuff like that, right? - Well, I am still trying to stay away from Kubernetes. You see, the problem with Kubernetes is it's exactly like OpenStack or any public cloud networking. You have this framework, and then you have a gazillion plugins, and every plugin is implementing the same stuff in a slightly different way. And then, you have the vendor plugins, and obviously the vendor plugins are there just so that you can put the Kubernetes stuff on top of the vendor stuff and pay for the licenses. And then, you have Kubernetes in public clouds, and you have Kubernetes on Google Cloud, and on Azure, and on AWS, and they're implemented three different ways. - So you would... When you talk about containers, you talking about Docker or can you tell us where should I start or focus on if I'm beginning? - If you're starting, start with Docker. I mean, all the Kubernetes people will hate me right now, but if you want to start... - It's not the first time that vendors hate you or people hate you, Ivan, and that's what I appreciate, again. You just... You've got our best interest at heart, not the vendor's best interest so yeah, appreciate it. - Docker, from the developer perspective or a single user perspective, is a fantastic environment to work with. And then, you can take the same image and you deploy it on Kubernetes if you wish. - Basic skills would be like basic networking, get the fundamentals right, understand ARP, VLANs, routings, stuff like that, then Linux, containers, that's a new one. We kind of mentioned it last time but like get involved in Docker. And then, Python: Would a network person need to learn Python or some kind of... I think last time you said Python and Ansible, or another high level automation tool. - Yet again, it depends on what you want to be doing. Obviously, if you love being CLI jockey and configuring VLANs for the rest of your life, then no, you don't need programming. And I even know people who went into networking because they hated programming. I mean, I have bad news for those people. Like you can't be an accountant today without figuring out how Excel works, it's hard to be anything engineer these days without touching some programming language. I mean, my daughter is studying biochemistry, and she had to learn Python and R because she had to massage the data that she got from the measurement devices. So there is absolutely no way that you will escape some rudimentary programming. Obviously, that doesn't mean that you have to become programmer, that doesn't mean that you have to become software engineer. Well, you can if you wish, and if you are really good at building software solutions and networking, you will be in very high demand because there are very few people that have both of those skills. But I don't expect everyone to be there, that would be more like an exception. You have to know enough so that you can talk with a programmer. If you have to hack together some scripts to make your life easier, then obviously it helps if you can do it. And it really doesn't matter if it's Python, or Ansible, or Bash, or whatever, as long as you can build something that will make your life easier. When you decide it's time to build an automation solution, then obviously it's time to engage people who actually know what programming is because just by learning Python, you have no idea how hard it is to build a stable software solution. Oh, one other thing we can add to the mix: machine learning. - I think you had yet a very interesting take on AI and machine learning, so let's jump into that. - It's one of those things that you absolutely have to understand. I've been sort of watching AI and trying to figure out what it could do for the last 35 years. I was even programming in one of the early AI languages, Prolog. But it's important to understand what these things can and cannot do. Deep learning is something that everyone is talking about, but effectively what that is, is you have a labeled data set and then you have this magic box that no one understands how it works, but it does work and, oh my god, we got results. And then, you feed the labeled data set into that box, and then you declare the box trained. And that seems to be a bit of a black magic because there are tons of parameters you need to tweak. You don't have to... You don't want to overtrain the box. And then, you take new data, and you show that new data to the box, and say, \"Well, what do you think about that?\" And the box will give you some answer. The first thing to know is that the... You will never understand why the box gave you that answer. That's what no one wants to tell you about machine learning. We can't explain what's going on in that neural net. We know it is a lot of weights and some non-linear functions, and all that, and it works. But if you try to explain to someone why that box came up with that answer to that question, well, good luck with that. And the important part for the networking engineers is what I started with, which is a labeled data set. It's easy to train a machine learning solution to recognize the cat videos or dog pictures because you have a gazillion pictures on the internet saying, \"This is a dog.\" How many packet samples do you have saying, \"This is a bogus DNS query\"? - From a networking engineer's point of view, how deep in AI should I go or does that just depend where I want to go in the world? - Who's that \"Dilbert\" guy, Scott Adams? He wrote a great blog post once, saying, \"It's really hard to be the best in some discipline, \"but if you are good enough \"in five different disciplines, \"and somehow you manage to tie them together, \"and offer something that is a combination \"of these five things, \"you will probably be the best in the world doing that.\" It really depends on what you want to do. You're interested in machine learning? You want to do some networking? Try to combine the two. Just figure out how it works, figure out what the limitations are so you will be able to trip every vendor sales engineer with a PowerPoint deck, and you're good to go. - So if you were starting tomorrow, we've got some skills in, there's some that we haven't mentioned, what would you do? - I mean, I've been in this thing too long, I have tunnel vision. Machine learning, maybe. Big data, which, by the way, is just applied statistics. I was talking to math professor once and she was telling me how she was at a job interview, and she actually had PhD in statistics, and the guy interviewing her was like, \"Oh, too bad you went for this particular area. \"It would be much better if you focused on big data.\" And she's like, \"Excuse me?\" - You've mentioned this thing about \"be good in four or five areas.\" So in other words, you don't have... It's very hard to become the 0.1% in one specific discipline, that's kind of what you're saying. But be good in four or five and that'll make you unique, right? - It's really hard to be a Hollywood movie star but to be a presenter, talking about networking that everyone loves, that's easier. You just need some acting skills and you need to know a little bit about networking, and you will be in great demand. - And I mean, you've mentioned this before, and I think you've highlighted it again, is soft skills, listening skills, presentation skills. I think it's a big problem in any kind of technical field. You find that you can get people who are really good but you can't put them in front of a customer. - Yeah, that happens all the time. And the really sad part is that that's all fixable. It's not like it would be impossible to figure out presentation skills. It's one or two week training, and then you need to practice for the rest of your life, and that's it. I mean, trust me, I've been there. I sucked until they sent me to... What was it at that time? \"Train The Trainer\" from Cisco. - I was just thinking that. That's exactly what happened to me, I went to \"Train The Trainer\" and the guy who was doing it really helped me. So I agree with you. I mean, I'm an introvert. It's not normal for me to go and present in front of a whole bunch of people, but it's something you can learn. - Yeah, absolutely. It's not a talent, it's a skill. - Let's talk about certs. I think we've spoken about this before, do you still think certs have any value? - I don't think I changed my mind. There are two values to certifications. First, if you are applying to job openings, then you are one of 1,000 people who apply because it's so easy to apply today. You don't even have to pay for the stamp. In the good old days, you had to pay for the envelope, and you had to print your resume, and you had to pay for the stamp, and you had to go to the post office. Today, anyone can submit their application online. And so, it's ridiculous how many applications you get for every job opening. And so, the poor people on the other end, they can't reach 10,000 applications. They have to implement some filters, and certifications are one of those filters. And the sad part is that you could be the best person for the job but if you don't meet those mandatory requirements, no one will look at your application, and no one will figure out that you are the best person for the job. So you need some certifications just to get through that first filter. Now, obviously, later in your career, as you built your other network, the people network, not the computer network, you have a name, you have a personal brand, then it becomes easier because then... I think we discussed this the last time. Then, you can get to a point where they create the job for you because they want to have you. But it's a long journey, it won't happen tomorrow. What you need to get started is something to get past the first filter and unfortunately, certifications are sometimes that first filter. On a more positive side, they are structured so most certifications make some sense. Some limited sense, let's put it this way. And if nothing else, you have this list of topics that you have to master. And just going through that list, and figuring out how everything works, and mastering those topics will help you. Now, obviously, there are two ways to do that. Option number one is you go and you buy the answers from one of the cheater sites, and then you memorize the answers, and then you pass the certification exam, and you are as stupid as you've been yesterday. And then, you go for the job interview and they figure out in the first five seconds that you are as stupid as they expected you to be, and off you go, and you just wasted your time and money. Or you could say, \"well, I really want \"to understand why the right answer is this,\" and spoiler alert, sometimes what you think the right answer is not what they think the right answer is, even though you are right. So that happens all the time. If you know too much, you will fail test because you are overthinking it, but at least you will understand how things work. And if you do get to the job interview, and someone wants to figure out whether you are just a talking head that use the cheat codes to get their certification, or whether you are someone that actually knows something, then knowing how things work will help you. I would strongly recommend to lab everything that you want to learn. It's one thing to read about stuff and memorize it, it's a totally different thing if you set it up in a lab and then you take the Packet Capture with Wireshark or something, and you look at that, and you try to understand the packets, and what's going on. And then, you will understand stuff, not memorize it. It's longer, it takes more time, but it might be worth the effort. - Yeah, it's so much easier today. I mean, I don't wanna sound like an old guy, which we are, but with CML from Cisco, and even Packet Tracer, the ways to practice and learn so much hands-on. - I have even better things than CML. Arista allows you to download the VM or the container for free. Cisco allows you to download Nexus 9300 for free. Juniper allows you to download the vSRX, that's the firewall, or the QFX, that's the data center switch. Dell has downloadable image. Vyatta is open source anyway. - Aruba does, yeah. - No idea about Aruba. - No, they do. They have a free product now, which is great, yeah. - So there are tons of vendors that have downloadable images that you can set up in your lab, and if you are a GUI person, then you obviously use GNS3. If you believe in CLI, and programming, and infrastructure-as-code, and version control, and all those buzzwords, then you either try to do it yourself or you take the tool that I've been developing for the last two years and then you set up the lab, and you start playing with stuff and figuring out how it works. And by the way, Arista does have a nice advantage over many other platforms. It's using something that looks like \"industry standard CLI.\" And \"industry standard CLI\" is really a polite way of saying \"We copied Cisco CLI \"but we can't admit that.\" So yeah, there are differences. There are important implementation differences between, let's say, Cisco IOS or Nexus OS and Arista, but it's 90% the same experience. - And it's important to learn multi-vendors anyway, or multiple vendors, right? - Yeah, absolutely. It's like in programming, yes, you should start with one language. Today, most people start with Python, or maybe it's Go, or Rust. I stopped... Stopped caring. But eventually, you will have to learn more programming languages, and I probably used like a dozen of them in the past, and you figure out they're all the same. I mean, the syntax is slightly different, the libraries are different, they do things slightly different way. And sometimes, they call a thing a \"pointer\" and sometimes it's just an object. And then, only the old timers realize that they're effectively using pointers behind the scenes. And the more, let's say, programming languages you know, the more valuable you are because you can't just go and program in all of them, but at least you can look at the code and understand what is doing, and it's the same with networking and multiple vendors. - That is great advice. I mean, if you understand the fundamentals, it's much easier to jump from one vendor to another. If you understand the technology, VLANs or whatever the concept, then it's easier to understand the implementation thereof. - Yeah, absolutely. I mean, OSPF areas are the same in every single box. They're configured different ways, but they behave... They should behave in exactly the same way. And by the way, OSPF is a great example because that's the most over-specified RFC I've ever seen. - We've discussed this before, now I want to... But this is something that young people especially always have a problem with. It's \"how do I get experience without experience?\" \"How do I get a job that wants experience \"if I don't have experience?\" \"I'm starting out, \"is there a way for me to get experience?\" - Build something. What's stopping you? Every single public cloud has a free tier. Now, be careful with AWS free tier. Go and read last week in AWS, Corey Quinn has a few choice words about the AWS free tier, and you should read what he's putting out anyway. Every single vendor has some free tier, so there is absolutely no excuse why you wouldn't build something in a public cloud. It can be a simple website, it can be, I don't know, your personal blog. Learn Markdown, learn Git, set up a server, build your website with Hugo and publish to S3. Oh, then deploy the virtual machine in the public cloud that will do that for you. So there are tons of things that you can do on absolutely zero budget. And then, when you get to a job interview, you can say, \"I did this, and I did this, \"and I did this, and I learned this.\" And it costs you nothing apart from your time. Or if you want to play with pure networking, set up a lab on your laptop, and yet again, Arista is great because they give you a container, so it's low footprint. You can build a network with, I don't know, maybe even 10 switches on your laptop. Practice, practice, practice, document what you did. You can build a portfolio. You go somewhere, you say, \"Well, hey guys, I did build this sample network, \"and I learned these things, \"and it worked this way, \"and it didn't work the other way, \"and I automated it. \"I used Ansible to configure it.\" Costs you absolutely nothing. You just have to be curious. - I love that because it's... In the old days, it was difficult in that you had to buy physical devices to do proper networking. But now, like you said, you can spin up stuff in the cloud, you can build virtual networks, and... Let's come back to documentation. It's really important to document what you're doing, right? - Absolutely. I mean, that should be a habit, and most people don't have that habit for whatever reason. And the other thing that really helps is if you manage to build a tool chain that helps you produce decently-looking documentation and it's all out on the web, like Read the Docs dot whatever it is, com or io or whatever. And there's a new one, MkDocs. You write your documentation in Markdown, you maybe have to specify a few thingies in a Python script, you put it all on GitHub, and then you tell these other sites to pull it down, and you have wonderful, professional documentation with almost zero effort for free. - Yeah, I love that. I mean, the... I always felt in the past, if I was doing developer-type work, if I was writing code, I could put that on GitHub and then people can see my code. And it always felt like \"how do I do that in networking?\" But I think you've... The examples you've given is a great way to do that. If you build sample networks, if you build stuff in the cloud, put that on... Put that somewhere. I know you've always said, like in a previous interview, \"Don't use WordPress or something like that,\" but at least put it somewhere like LinkedIn or somewhere. Tell people what you're doing. - Oh, not LinkedIn. No, avoid walled gardens. I mean, I use LinkedIn and you use YouTube, but I only use LinkedIn to publish pointers to my stuff, which is under my own domain. Because just look at what's happening with Twitter these days. You invested years into building a following and creating content, and it's all tied to some platform. Or you know the stories about people who were kicked off YouTube by the automatic algorithms and some of them never made it back? Don't risk it, own your content, and use the social media just to publish pointers to your content. I mean, you can publish your content for free. It's not like you would have to pay something. You can publish it on GitHub, you can publish it on CloudFlare pages, you can publish it on GitLab pages, you can publish it on Read the Docs. There are tons of platforms that allow you, under certain restrictions, to publish your stuff for free. Why would you publish it on LinkedIn? - No, I get that. I think the counter I gave you last time, which I give you again, is reach, social media reach, but I'll highlight this again. I love what you do on Twitter and other platforms where you give people a teaser and then you point them back to your website. - Exactly. Use the social media for what is good, it's reach. Don't use social media to host your content. - Yeah, that's the difference. I mean, it is a worry on YouTube, and like you said, I don't just have my content on YouTube for that very reason because you never know what's gonna happen tomorrow. - Most of these things are, in one way or another, walled gardens. - Just to summarize what we did last time, and I just wanna come back to these skills, and you've added containers as another skill to look at. Top skills that you mentioned previously were basic networking, so I'm assuming that still applies; Linux; Git. We kind of mentioned Git. Did you wanna say anything more about Git? - Isn't everyone using Git these days? Absolutely, thanks for pointing this out. Absolutely master the basics of Git. It makes your life so much easier to know that whatever you do, it's always safe somewhere and you can always fetch a previous copy of your work, and you can always see what changes you made. It's like Dropbox history or any other similar service, but with context and with messages why things changed. And you can even create parallel universes with branches. So yeah, I don't think I would want to do anything that's text-related without putting it into a Git repository these days. - That makes a lot of sense. Last time, you mentioned networking on Linux, so I'm assuming you're just talking about like... I mean, I think we had a discussion about Cumulus, so that's still something to look at? - Absolutely. Well, as I said, a lot of network operating systems run Linux behind the scenes. On the other hand, you might have to work with the server people, and like 90 something percent of all servers today probably run on Linux. I know there are people still running Windows servers, but let's move on. If you are a networking person, then it helps if you can help them understand how to set up their servers so that they work the right way with the network because, honestly, you can't expect the server people to be networking gurus. That's your job if you're a networking engineer. If you say, \"Well, you have to use this VLAN \"to connect to the network,\" can you expect the server person to understand what you're saying? Wouldn't it be better if you could say, \"Well, this is how you do it on Linux, \"and there are just three ways \"how to do it on Linux, \"and by the way, this way is the best way to do it\"? - I love that. And I mean that... Another point is application architecture. Last time, you said you need to have an... And I think you're highlighting that again, you need to have an understanding or appreciation out of the standard domain, right? - Always try to understand the adjacent thingies. So obviously, if you are a networking engineer, you better understand how ethernet works and how fiber cables work. Even though, hopefully, you will never be splicing the cables. There are people doing that. Likewise, you will probably... Hopefully, not be managing the DNS server, but you still have to know how DNS works, and what's expected to get out and all the resource record types. And if DNS doesn't work, then it sort of looks like the networking problem so you better be able to troubleshoot that. And it's the same with the application architecture. The more you understand the adjacent domains... Oh, and storage. Storage is the same thing. The more you understand the adjacent domains, the more helpful you can be, the more people will appreciate your value, because if you're a hardcore networking engineer and no one understands what you're doing, then what's the perceived value in the organization? \"It's that crazy guy \"and we throw pizza under the door \"and eventually the network works.\" On the other hand, if you can talk with all these people and help them figure out the solutions to their problems, then all of a sudden you become valuable. - I love that, it's so important. And that, I mean, it comes back to one of the other ones you mentioned, presentation skills and people skills. And the last one that we haven't spoken about... Well, we've spoken about in quite a bit of depth, but on the list is cloud. It's different to years ago when we started, where it was like, \"Okay, go and do CCNA, \"do CCMP, do CCIE.\" That was kinda like the track. It looks like it's got a lot wider these days, right? - Well, CCNA is probably still a valuable one as one of those filters that gets you through the door and to a job interview. Or you could go for one of the entry level cloud certifications. There's an AWS one, there's probably an Azure one, there's probably a GCP one. There's an entry level Linux certification. Having CCNA plus AWS entry level certification can't hurt. Yet again, obviously, you have to figure out which cloud to focus on, and it looks like the answer is AWS for a very simple reason: A lot of people are also using AWS. It could be that they're also using something else, like, obviously, everyone is using Azure because everyone is on Office 365 and Microsoft almost counts that as cloud revenue, but that has nothing to do with Azure as such. But I think that what I see is a lot of people using AWS way more than, for example, Google Cloud. Unless, obviously, you want to go work for a startup, then yes, learn Google Cloud. - Here's a nasty question. CCIE still of any value today? - Oh, absolutely. You always need people who have the expert-level skills in any particular technology or specialization. So yeah, absolutely. You need CCIEs, you need JNCIEs, you need whatever AWS equivalent is. So you will always have need for people who have that deep, focused knowledge of one specific technology. I have no idea how many of them you need. That's a different story. - I think it's... If I was starting out today, see if you agree with us, I would look at CCNA or... It depends which domain you want to go into, but if you wanna be a networking type person, CCNA is a great place to start. And then, perhaps look at AWS basic cert, look at Linux plus from comp tier, and maybe DevNet. I don't know if you agree with that. DevNet's... The problem with DevNet that I don't like so much is it's very Cisco-ish focused, but perhaps go and look at getting some Python certs, some dev certs, so that you round... You're very rounded at the beginner level, and then you can decide what you enjoy and where you want to go. - Well, I would agree with all you said apart from... I don't know whether it is worth investing in pure Python cert. If you want to be a software developer, that's a different story but then we should be having a totally different discussion, and I shouldn't be the one talking about it. So assuming you are... You want to be networking focused, then yeah, DevNet would be way better than a pure Python cert. - I'm glad you said that. I mean... I'm glad you said that because, I mean, DevNet is Cisco-ish focus, but like you said, it does cover a lot of the dev basics. - Yeah, well, but you know, let's be realistic, Cisco still has huge market share. I mean, I'm positive there are organizations out there that have zero Cisco in their network, I'm also positive there are way more organizations that have at least some Cisco in their network. - So from Cisco, from a beginner point of view, with CCNA, and then say the DevNet associate, and then perhaps Linux plus AWS basic cert, I can't remember what it's called again. Did we cover all of that? I think that's the basics. Those are good certs to start with, right? And then CCMP, if you're interested in going deeper. - That depends on where you want your career to go. Do you want to be more focused on Cisco and boxes? In which case, yeah, absolutely, CCMP. You want to be more cloud focused? Go for AWS, the next level. You want to be more of an automation guy? I don't know whether there's a next level DevNet. - Yes, we have the C... They have DevNet Professional, yeah. I mean, this is another... I wanna ask the questions that I get asked a lot. Would you choose a Cisco cert, like we've been speaking Cisco-ish certs on the networking side, rather than say another vendor's certs, like Arista or Aruba or whatever? - Look at the market share. Sorry, the only value of an entry level cert, like CCNA, is to have the filter to pass when you're applying for a job. - I'm glad you said that. I mean, it's... I get a lot of pushback 'cause I always say \"do CCNA,\" but it's like you said. The market share... Cisco is still the leader in the market by far and it's the most well known. And if you look at... So just for everyone who's watching, go and... I've done this, go on LinkedIn, or go on any of the big job sites, and go and search for CCNA versus go and search for some of the other certs, and very quickly you see the number of jobs that ask for CCNA. - Exactly. Just do your market research. You want to invest into a marketable skill? Well, what should you do first? Do a market research because every market is different. I mean, you know the UK market, I have some vague idea what Central Europe is doing. US might be totally different, Asia might be totally different. But as you said, there is a great recipe. - Yeah, go to the job sites and have a look. Last time we spoke, Ivan, you mentioned \"Deep Work\" as a book. I really recommend that book as well, way to study and gain knowledge. You've been doing this for years, how do you keep up? - When you've been doing it for years, it's easier because you're cheating. I am able to download an AWS pdf, or Azure PDF, and it's 300 pages, and two hours later I am creating a presentation out of that pdf because I've seen it all before. So I just skim through it and I know exactly what I can skip immediately and what's worth reading. And in the end, you have to read 30 to 50 pages out of those 300 pages. Once you have enough experience, you figure out that you mostly need the last 10%. So it's not that hard, even as you get older and older. Obviously, if you are starting, then yeah, as you mentioned. Turn off Netflix, turn off LinkedIn, deinstall Facebook, log out of Twitter, and start working. - So \"Deep Work\" is a great book. Do you have any others that you've felt have really helped you or that you'd recommend if you're starting again? How do I learn, how do I pick up this stuff? 'Cause when you start out, I remember... I still remember the first initial learning of networking. It felt like I was drinking from a fire hydrant. There was just so much and I couldn't make sense of it. And I think a lot of people who are starting out feel that way. How do you navigate that, any advice? - Well, happened to all of us. I don't think there's a good answer. The one thing that I realized with my kids is that everyone has a different learning style. So some people have to read stuff, some people have to watch stuff, some people have to listen to stuff, some people have to practice stuff. So figure out what works for you. Oh, don't forget to practice, that always helps. Oh, one other thing, you haven't mastered a topic until you can explain it to someone who has no idea what you're talking about. - I've taught for years and I felt that the best way to learn was to teach exactly for that reason. Like, you taking that 200 page document and then you're having to put it into a PowerPoint presentation, and in your mind, you're thinking... Well, this is what I'm assuming you're doing, I do it all the time. It's like, \"Okay, how am I gonna present this? \"How am I gonna teach this?\" And then, it forces you to learn very quickly. - And after 30 years, it's all in autopilot. So effectively, as I'm reading, I'm taking notes, and then those notes can be almost copy-pasted into the presentation already 'cause I'm organizing them in a certain way that just happens to be almost ready to be published. As you said, that's experience. - If perhaps you haven't got someone to teach, then I would suggest perhaps doing this. It's like write it in your own words on a blog, present it in the YouTube video. Do something where you're trying to take this... Like, TikTok even. Trying to take... I mean, a lot of people mock TikTok, but I'm amazed how some of the TikTok creators can take a complex topic and explain it in 50 seconds. I mean, just taking that information and trying to present it again is a great way to learn. - Agree with all that, just keep in mind that being able to do that, it's an awful lot of work. I mean, you know it, you are doing short videos. If you want to do a good video, it takes an enormous amount of time. - Yeah, I mean, it's funny. People say \"TikTok videos are easy,\" and some people perhaps find it easy. I find it much easier to have a talk for half an hour than it is to talk for 60 seconds, and try and distill that information down. If you're starting out, perhaps you don't have an audience, then just do TikTok, do whatever you find... Like you said, do what works for you, but then try and present what you're learning, and it's amazing how much you will learn. And I also think the flip side of that is people will find you. They'll find you in the industry if you're putting stuff out. - Absolutely. I mean, it takes a while, and a lot of people give up saying, \"Well, no one is reading what I write. \"Why should I keep doing that?\" But eventually, as you accumulate more material, the search engines will find you. Also, publish on LinkedIn. Also, if you wrote something that you think is really good, there are a number of people who are publishing these occasional blog posts with links to good stuff, send them an email. I mean there's Packet Pushers, there's Scott Lowe, he's still doing that, Russ White, and everyone is happy when they find great new content. Well, not just one blog post, create a few things so that if someone stumbles upon your side and they say like, \"Well, do I want to follow this?\" Then, maybe based on one article, no one will say, \"Yeah, this is so cool, \"I want to follow this guy.\" Everyone would go like, \"Oh, this is everything he did? \"Nah, I'm moving on.\" But once you have something substantial, do tell people directly. Send them an email. No one will yell at you for sending them an unsolicited email. The worst that can happen is that it'll hit a spam filter or a delete button. - Yeah, exactly. I mean, if you don't try, you don't know. And I mean, you can contact people on Twitter, or LinkedIn, or wherever. There's many avenues to get in front of people very easily these days. And I'll say this, I mean, I've got a million YouTube subscribers. It didn't happen overnight, it's years. Don't give up is the big thing. Like you've said, don't... I mean, how long have you been... How long have you had IP Space for? - Oh, I just look at it today. I started in 2006, so it's two-and-a-half lifetimes. - So it's exactly that. I mean, it's... If you start, it'll be small, and maybe yourself and your mother will read it, maybe, but it's... Just don't give up. I'm glad you highlighted that. Ivan, is there anything you wanna say before we wrap up? I wanna give you the floor. Any advice you would give to young people? The advice you'd give your kids, or people who are starting out, what would you advise? - Well, what I always tell my kids is that story from Scott Adams. They're sick and tired of that story. So find four or five things that you are good at, and figure out how to merge them together. If you can't follow your dreams, find something where you can create stuff. It's amazing how satisfying it is when you can say, \"I did this,\" or \"I shipped this,\" or \"I created this.\" And that helps when you wake up in the morning and you have to go back to the office, or wherever it is you are working, or whatever it is you are doing. So make sure you do something where you can look back and you can say, \"I did this and it made an impact.\" - I also think... I mean, just to jump on that as well, or piggyback on that, if you... You have to sometimes do the work that you hate to pay the bills. I've had to do that for years. It might take a while for you to do what you really want to do, but don't come home and not focus on the stuff that you really want to do if you are not doing what you want to do at work. So, I mean, I built internet stuff on the side, have a side business, work on the side hustle, as we would say these days, and keep working on that. And then, eventually, your side hustle could become your full-time job like it did for me. - Absolutely, and that will always work better than watching Netflix. - Ivan, I really wanna thank you for sharing. Thank you for keeping it real. We had a lot of feedback on our previous videos, you keep it real. I really appreciate you doing that. - Thank you, and thanks for having me. It's always a pleasure to chat with you. - Brilliant, thanks Ivan. (upbeat music)",
    "transcript_keywords": [
        "people",
        "networking",
        "work",
        "stuff",
        "Linux",
        "Ivan",
        "AWS",
        "cloud",
        "Yeah",
        "time",
        "Cisco",
        "skills",
        "works",
        "Python",
        "understand",
        "absolutely",
        "network",
        "things",
        "thing",
        "job"
    ],
    "transcript_entity_values": [
        "Microsoft",
        "the first five seconds",
        "McKinsey",
        "these days",
        "Linux",
        "three",
        "the minute",
        "25",
        "PCI",
        "1985",
        "Cisco",
        "the last 20 years",
        "S3",
        "LinkedIn",
        "PhD",
        "two",
        "four",
        "Hollywood",
        "DevNet",
        "tomorrow",
        "a dozen",
        "YouTube",
        "WordPress",
        "Python",
        "Docker",
        "Aruba",
        "Linux",
        "Russ White",
        "Prolog",
        "CloudFlare",
        "Python",
        "million",
        "1,000",
        "David Bombal",
        "2006",
        "Asia",
        "Facebook",
        "Ivan",
        "GDPR",
        "Train The Trainer",
        "just three",
        "Azure PDF",
        "Cumulus",
        "Cisco-ish",
        "API",
        "CCMP",
        "Google Cloud",
        "Corey Quinn",
        "Central European",
        "gazillion",
        "Scott Adams",
        "Dell",
        "Today",
        "Google Cloud",
        "today",
        "VLAN",
        "last week",
        "one",
        "30 to 50",
        "PowerPoint",
        "Cisco CLI",
        "the last 10%",
        "50 seconds",
        "the last 35 years",
        "Scott Lowe",
        "Central Europe",
        "DNS",
        "Nexus",
        "Windows",
        "YouTube",
        "io",
        "first",
        "UK",
        "the good old days",
        "9.6 kilobits",
        "decades",
        "300",
        "Deep",
        "CML",
        "Hugo",
        "Nexus 9300",
        "90%",
        "AWS",
        "years",
        "GitLab",
        "90 something percent",
        "2023",
        "Git",
        "IP",
        "Packet Tracer",
        "iSCSI",
        "Linux",
        "AI",
        "the last two years",
        "Markdown",
        "the old days",
        "VMware",
        "MAC",
        "Bash",
        "GNS3",
        "OpenStack",
        "NFS",
        "Vyatta",
        "Dropbox",
        "LinkedIn",
        "the 0.1%",
        "Office 365",
        "60 seconds",
        "First",
        "30 years",
        "TikTok",
        "VM",
        "5",
        "US",
        "CCNA",
        "2023",
        "Cisco IOS",
        "bush",
        "18",
        "Ansible",
        "10",
        "CCIE",
        "half an hour",
        "MkDocs",
        "these two years",
        "VXLAN",
        "Dilbert",
        "200",
        "a year before",
        "third",
        "CCMP",
        "Arista",
        "Netflix",
        "ARP",
        "Kubernetes",
        "five",
        "One",
        "10,000",
        "Wireshark",
        "a year and a half ago",
        "QFX",
        "zero",
        "Excel",
        "Azure",
        "two hours later",
        "CCIE",
        "Arista EOS",
        "Dell OS10",
        "Deep Work",
        "OSPF",
        "GitHub",
        "almost zero",
        "GUI",
        "New York",
        "Cisco",
        "CCNA",
        "Twitter",
        "Kubernetes",
        "two week",
        "Azure",
        "CLI",
        "HIPAA",
        "Antarctica",
        "yesterday",
        "UDP"
    ],
    "transcript_entity_types": [
        "ORG",
        "TIME",
        "PERSON",
        "DATE",
        "ORG",
        "CARDINAL",
        "TIME",
        "CARDINAL",
        "ORG",
        "DATE",
        "ORG",
        "DATE",
        "ORG",
        "ORG",
        "WORK_OF_ART",
        "CARDINAL",
        "CARDINAL",
        "GPE",
        "ORG",
        "DATE",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "PERSON",
        "GPE",
        "GPE",
        "PERSON",
        "WORK_OF_ART",
        "ORG",
        "WORK_OF_ART",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "DATE",
        "LOC",
        "ORG",
        "PERSON",
        "ORG",
        "WORK_OF_ART",
        "CARDINAL",
        "PRODUCT",
        "PRODUCT",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "PERSON",
        "NORP",
        "CARDINAL",
        "PERSON",
        "ORG",
        "DATE",
        "WORK_OF_ART",
        "DATE",
        "ORG",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "PRODUCT",
        "ORG",
        "PERCENT",
        "TIME",
        "DATE",
        "PERSON",
        "LOC",
        "ORG",
        "ORG",
        "PRODUCT",
        "PERSON",
        "PERSON",
        "ORDINAL",
        "GPE",
        "DATE",
        "QUANTITY",
        "DATE",
        "CARDINAL",
        "PERSON",
        "ORG",
        "EVENT",
        "PRODUCT",
        "PERCENT",
        "ORG",
        "DATE",
        "ORG",
        "PERCENT",
        "CARDINAL",
        "PERSON",
        "ORG",
        "PERSON",
        "ORG",
        "PERSON",
        "ORG",
        "DATE",
        "PERSON",
        "DATE",
        "ORG",
        "ORG",
        "WORK_OF_ART",
        "PRODUCT",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "PERSON",
        "PERCENT",
        "ORG",
        "TIME",
        "ORDINAL",
        "DATE",
        "ORG",
        "ORG",
        "CARDINAL",
        "GPE",
        "WORK_OF_ART",
        "DATE",
        "ORG",
        "PERSON",
        "CARDINAL",
        "PRODUCT",
        "CARDINAL",
        "PRODUCT",
        "TIME",
        "PERSON",
        "DATE",
        "ORG",
        "PERSON",
        "CARDINAL",
        "DATE",
        "ORDINAL",
        "PERSON",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "PRODUCT",
        "DATE",
        "ORG",
        "CARDINAL",
        "PRODUCT",
        "GPE",
        "TIME",
        "ORG",
        "ORG",
        "ORG",
        "WORK_OF_ART",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "GPE",
        "GPE",
        "ORG",
        "ORG",
        "GPE",
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "LOC",
        "DATE",
        "ORG"
    ]
}