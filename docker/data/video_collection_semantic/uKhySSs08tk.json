{
    "id": "uKhySSs08tk",
    "title": "Dynamic ARP Inspection: Stop Kali Linux ARP poisoning attacks",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2020-02-11T16:42:19Z",
    "video_url": "https://www.youtube.com/watch?v=uKhySSs08tk",
    "category": "Science & Technology",
    "tags": [
        "kali linux",
        "kali",
        "arp",
        "arp inspection",
        "dynamic arp inspection",
        "ccna",
        "ccna 200-301",
        "address resolution protocol",
        "what is arp",
        "how arp works",
        "cisco",
        "ccnp",
        "mac address",
        "ccna training",
        "cisco ccna",
        "ccna study",
        "cisco certifications",
        "cisco training",
        "cbt nuggets",
        "ccnp training",
        "ccent",
        "ccna study guide",
        "how to study for ccna",
        "ine",
        "hacking",
        "hacker",
        "ethical hacking",
        "comptia network+",
        "comptia",
        "security+",
        "comptia security+",
        "vcp",
        "ine training",
        "new ccna",
        "cisco ccna certification",
        "linux",
        "gns3"
    ],
    "views": 38244,
    "likes": 1515,
    "comments_count": 82,
    "description": "DAI is now part of the CCNA 200-301 exam. You need to know both DAI and DHCP Snooping for the new CCNA exam. Kali Linux can be used to implement an ARP poisoning attack which can result in a man-in-the-middle attack to capture passwords. Stop ARP poisoning attacks by implement Dynamic ARP Inspection.   In a previous video I demonstrated how to use Ettercap and Kali Linux to capture usernames and passwords by poisoning the ARP caches of a Windows 10 computer and Cisco router. In this video I'll show you how to stop this type of attack.  ARP spoofing attacks and ARP cache poisoning can occur because ARP allows a gratuitous reply from a host even if an ARP request was not received. After the attack, all traffic from the device under attack flows through the attacker's computer and then to the router, switch, or host.  An ARP spoofing attack can target hosts, switches, and routers connected to your Layer 2 network by poisoning the ARP caches of systems connected to the subnet and by intercepting traffic intended for other hosts on the subnet.   It's so easy to hack badly configured networks using Kali Linux! Ethernet networks rely on protocols such as Address Resolution Protocol (ARP) to function, but they can be easily manipulated using Kali Linux. Make sure you have configured your networks securely! Otherwise, look at how simple it is to hack networks using Kali Linux running on a Windows 10 computer. Applications like Ettercap make hacking with Kali Linux super easy! It's important that you as a network professional know how to protect networks from hackers. Even the new Cisco CCNA 200-301 exam covers some of these hacking topics. Don't just learn the theory of hacking, learn how to hack practically.   In this Ethical Hacking with Kali Linux playlist, I'm going to show you step by step how to hack and protect networks. This is white-hat hacking, not black-hat -  in other words this is about teaching you Ethical hacking to help you better secure your networks!  In this video I'll show you how to poison the ARP cache of a Windows 10 computer and then implement a Man in the middle (MITM) attack so you can see all data sent between the Windows 10 computer and it's default gateway. In subsequent videos I'll show you how to hack other protocols.  ====================== Menu: ====================== Overview: 0:00 Enable DHCP Snooping: 4:33 Enable and verify DAI: 9:30  ====================== Cheatsheet PDF: ====================== Dynamic ARP Inspection:   ====================== Previous Video: ====================== Kali Linux: Hacking ARP:   ====================== CCNA content: ====================== Free CCNA content:   CCNA course:   kali linux Hacking Ethical hacking CompTIA Linux+ CompTIA Security+ CompTIA Network+  EVE-NG GNS3 VIRL Packet Tracer CCNA Cisco Devnet Associate  CCNP Enterprise CCNP Security CCNP Data Center CCNP Service Provider CCNP Collaboration Cisco Certified Devnet Professional Cisco Certified Network Professional  LPIC 1  LPIC 2 Linux Professional Institute LX0-103 LX0-104  XK0-004   Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #kalilinux #ccna #kali",
    "description_links": [
        "http://bit.ly/dynamicarp",
        "https://youtu.be/ns7TYxNcYBM",
        "https://www.youtube.com/playlist?list=PLhfrWIlLOoKM3niunUBTLjOR4gMt_uR_a",
        "http://bit.ly/2PmTVPD"
    ],
    "transcript": "- [David] Zebra, what are you doing? - [Kid] Hacking. - [David] Are you a nasty zebra? - [Kid] Yes. - [David] (laughs) Well done, zebra. Let's break some networks. In this video I'm gonna show you how to implement dynamic ARP inspection. Dynamic ARP inspection stops attacks such as ARP poisoning and man-in-the-middle attacks. In a previous video, which I've linked here and below, I showed you how to use Kali or Kali Linux, if you prefer, to implement a man-in-the-middle attack by poisoning the ARP caches of devices. We had Kali poisoning the ARP cache of a Windows device and a Cisco router, and then, implementing a man-in-the-middle attack where all traffic from that Windows host to its default gateway, the Cisco router, was routed or switched, in this case, through the Kali Linux host. So Kali was able to see all the traffic from Windows to the router and Windows to the internet as an example. We were able to capture Telnet passwords and HTTP passwords. You shouldn't be using clear text protocols in your network today. So you shouldn't be using protocols such as HTTP or Telnet. But if someone did use clear text passwords, I'd have visibility of those passwords and have visibility of the data, because all traffic is sent through the Kali Linux host, which, in this case, implemented a man-in-the-middle attack. We can stop that kind of nonsense by implementing dynamic ARP inspection. Dynamic ARP inspection requires either DHCP snooping or that you manually configure MAC addresses. The switch is basically snooping or listening in on DHCP requests from hosts or devices to the DHCP server, and then, is creating dynamically, when using DHCP snooping, a MAC address to IP address mapping to an interface. So it says, \"This MAC address, this IP address \"belongs on this interface.\" If you change your MAC address, that traffic is denied. And I'm gonna demonstrate that using Kali Linux in this video. So I'm going to show you how you can implement DHCP snooping, dynamic ARP inspection, and then stop Kali from sending traffic when it changes its MAC address. So we're gonna stop ARP poisoning attacks. Now, to make it easier, I've added this presentation below this video. This presentation shows you the network that I'm using, and then shows you how to configure dynamic ARP inspection. So I've got links in here to Cisco and other websites that give you more information, but I also show you how to configure both DHCP snooping as well as dynamic ARP inspection. So in this video I'm gonna show you in quite a lot of detail how this all works. Use the menu here to jump to a specific topic, if you want to. So I'm gonna show you how to set up DHCP snooping, but I've covered that once again in this video. So if you just wanna see the dynamic ARP inspection part of the video, then jump to the specific timestamp of interest. I've included this, once again, below this video. This presentation shows you how to set this up, how to verify it on a Cisco switch. Okay, but before we get started, if you enjoy these types of videos, please consider subscribing to my YouTube channel, please like this video and please click on the bell to get notifications. It really does help me with the YouTube algorithm if you subscribe and like my videos. So if you don't mind doing that, if you enjoy this content, I'd really appreciate it. Okay. So let me show you how to set up dynamic ARP inspection. I've been in your waters I thought you were my love I know one thing for sure Now, the first thing we need to do is enable DHCP snooping. Now, I've covered this in a lot of detail in a previous video. So all I'm gonna do here is copy and paste the commands into the switch. Have a look at this video, if you wanna look at a DHCP snooping video that discusses this in a lot of detail. Okay, so what I'm gonna do is copy the commands from this presentation and paste the commands on our switch. Now, in our topology, once again, we've got a Cisco router. This router is configured with a DHCP server. So let's view that first. Here's the router. Show run | begin dhcp. That just allows me to filter the configuration until the keyword DHCP is found. So there's the command. Here's my DHCP pool. You can see the network used is 10.1.1.0/24. Default router, or default gateway, is the local router, and DNS server is set to Google. The router has this IP address 10.1.1.254 configured on gigabit 0/0. So this interface is configured with the IP address, 10.1.1.254, and the router is allocating IP addresses to devices, and we can see that by typing show IP DHCP binding. We can see that two devices have received IP addresses. This is the IP address allocated to Kali Linux. This is the IP address allocated to the Windows computer. We can verify that, by using the command IP address on Kali. Notice there's the IP address allocated to the Kali Linux host. And on the Windows computer, I'll open up a CMD prompt, ipconfig. This is the IP address of the Windows computer. So the DHCP server has been configured, it's allocating IP addresses to the devices in the network. What we need to do now is configure DHCP snooping. On the switch, at the moment, no DHCP snooping has been enabled. So you can see that no DHCP commands have been enabled and we haven't enabled dynamic ARP inspection. Okay, so the first thing I'm gonna do is copy the DHCP snooping commands to the switch. So I'll paste those in. And you can see here that DHCP snooping has been enabled globally. It's been enabled for vlan one, we've disabled option 82, and the command show IP DHCP snooping shows us that DHCP snooping is now enabled on vlan one, no trusted ports have been configured yet. Now, once again, I've shown you previously how to configure DHCP snooping, and I've explained it in a lot of detail, so I'm not doing that here. Okay, the next step is to configure trusted ports. In my topology, gigabit 0/0 is a trusted port. Okay, so in my topology, gigabit 0/0 is the interface that connects to the router. The router is running the DHCP service, it's allocating IP addresses. We wanna trust this DHCP server, we don't wanna trust this Kali Linux host as a DHCP server. So back on the switch, I'm gonna paste those commands. Gigabit 0/0 is now a trusted interface. Show IP DHCP snooping. We can see that gigabit 0/0 is now a trusted interface. Now, we can also rate limit DHCP requests, to stop a denial of service attack. So I'm going to rate limit DHCP messages to 10 packets per second on gigabit zero one, which is the interface connecting me to the Kali Linux host. Again, I've explained that in a lot of detail, in the previous video. So I'll paste that in. Go to type conf t first, so try that again. There we go. So show run interface gigabit 0/0 . We are trusting this interface, we are not trusting this interface. This interface gigabit 0/1 is being rate limited. 0/0 is being trusted. Okay, now that I've configured DHCP snooping, I can configure dynamic ARP inspection. Dynamic ARP inspection is fairly simple to configure. What we're going to do is configure it to globally on the switch, by using the command ip arp inspection vlan 1. So conf t ip arp inspection, specify the vlan. In my example, it's vlan one, because all ports on the switch are currently configured in vlan one. Now, typically, in the real world, you wouldn't put your devices in vlan one. You would put them in a different vlan. Now, notice what's happening. We're already seeing invalid ARP messages, received on gigabit 0/2, that is, the Windows host. We are not trusting anyone at the moment. We are basically blocking all traffic. So the Windows host is trying to get to its default gateway, so it's trying to get to 10.1.1.254. There's the IP address of the Windows host, MAC address of the Windows host, trying to get to its default gateway and the traffic is being denied. We can see that as an example on the Windows PC. If I try and ping the router, it's not gonna work. Traffic is denied. And actually let me demonstrate this. I'm going to remove dynamic ARP inspection. So it's removed. And what you'll notice is the PC, the Windows PC, can ping the router, but what you'll also notice is the Kali Linux host can ping the PC, which we don't want it to do, and it can ping the router. So Kali can ping both the Windows PC as well as the router. But as soon as we enable dynamic ARP inspection, we basically break the network, because notice traffic from 10.1.1.2 to 10.1.1.100 is being denied, because now, when we try and ping say, the Windows host, the traffic is denied. Kali is not able to ping the Windows host, and it's not able to ping its default gateway. The Windows host can't get to its default gateway. That's a problem. We want it to be able to talk to its default gateway. So what we're gonna do is set gigabit 0/0 as a trusted port. That's the port connecting us to the router. So on the switch, interface gigabit 0/0, ip arp inspection. I'll just use question mark again. Trust. We're going to trust that interface. So show run interface gigabit 0/0. This command shows us that this interface is trusted for DHCP snooping as well as for ARP inspection. So now can the Windows PC ping the router? At the moment we can see that it can't, we're still getting a whole bunch of denies on the switch. Show ip dhcp snooping. Let's look at the bindings. Notice the problem: There are no DHCP bindings at the moment. We are relying on the DHCP bindings database to implement dynamic ARP inspection, We need to have the bindings in the database for dynamic ARP inspection to work. So we're constantly getting these denies at the moment because there is no entry in the DHCP snooping database. So I'm gonna type ipconfig/release, to release my IP address. And then I'm gonna type renew, to renew the IP address on the Windows computer. It's now been given this IP address. Back on the switch, show IP DHCP snooping binding. We can see that this MAC address has been given this IP address. And we can see that via DHCP snooping on vlan one, the interface where that host resides is gigabit 0/2. So, back on the Windows PC, can it now ping its default gateway? And the answer is yes, it can. So remember, because we're using DHCP snooping, the PCs have to request IP addresses, and those IP addresses have to be allocated through DHCP. We've got to have DHCP snooping listening in on the conversation, seeing that to the router allocates the IP address to the PC and then, because of that, the DHCP snooping databases bolt, and dynamic ARP inspection can leverage that database to permit devices. So again, on the switch, show ip dhcp snooping binding, we can see that this IP address was allocated to this MAC address on this interface. Now, Kali can still not ping the default gateway, because an IP address hasn't been added to the DHCP snooping database. So what I'm gonna do is edit connections in Kali. I'm gonna go to IP version four settings, disable the interface, go back, and get it to to use DHCP. ifconfig shows us that it's got its IP address, Show ip dhcp binding on the switch. You can see that this IP address has been allocated to this MAC address, which is the Kali Linux host. MAC address ends in 5a:00, which is what we see over here. So can the Kali Linux host ping the default gateway? Yes, it can. So on the switch, once again, show ip dhcp snooping binding. We can see that two IP addresses have been allocated to specific MAC addresses. Show ip arp inspection. So there's the command again, we can see that it's enabled for vlan one. So many packets have been dropped. Now in Kali, once again, ifconfig shows me that this is the MAC address of the host, ending in 5a:00. On the switch, show ip dhcp snooping database. That MAC address has been allocated to this IP address. Kali can ping, default gateway. Once again, that IP address, this MAC address. Now I'm gonna change the MAC address by using macchanger. Macchanger tells us that we can see the MAC address by using -s as an option, and then we can create a random MAC address using -r or -r. So macchanger -s ethernet zero. That's the current MAC address. That's the permanent MAC address. Scrolling up once again, that's the MAC address that we saw previously with ifconfig. So let's create a random MAC address. MAC address, we've been told, is now this. So ifconfig shows us that that is the new MAC address that we've been given. Random MAC address. Can we ping the default gateway? Answer is no, we can't. And we're seeing a lot of denies on the switch. You can't just create some random MAC address or try and implement ARP spoofing or ARP poisoning, because we've now got dynamic ARP inspection enabled on the switch. And I'll just stop the ping on Kali. The only MAC address that's allowed is that Mac address on interface gigabit 0/1. This MAC address is permitted on gigabit 0/2. So by randomly changing my MAC address, using macchanger, from this address to this address, traffic is now being denied. It also stops someone from using an application such as Ettercap to poison the ARP caches. So again, previously, I showed you how to use Ettercap, to poison hosts on the network. So if I try and scan for hosts now, that traffic is gonna be denied by the switch because of dynamic ARP inspection. I can't implement ARP poisoning by using Ettercap unlike previously, when I demonstrated it in this video, because we've got dynamic ARP inspection enabled. Okay, very long video once again, but hopefully I've shown you clearly how to set up a dynamic ARP inspection and how to test it. You can, once again, download this presentation, if you wanna have a summary of what we've done and you wanna keep this as a reference. Please consider subscribing to my YouTube channel. It really does help me. Please like this video and please click on the bell to get notifications when I post a new video. It really does help me when you subscribe, like, and click on the bell. I've been in your waters I thought you were my love I know one thing for sure",
    "transcript_keywords": [
        "DHCP snooping",
        "MAC address",
        "dynamic ARP inspection",
        "DHCP",
        "ARP inspection",
        "dynamic ARP",
        "Kali Linux host",
        "ARP",
        "Kali Linux",
        "MAC",
        "address",
        "Kali",
        "Windows",
        "Windows host",
        "snooping",
        "inspection",
        "random MAC address",
        "Linux host",
        "DHCP snooping binding",
        "show"
    ],
    "transcript_entity_values": [
        "first",
        "Ettercap",
        "0/1",
        "Cisco",
        "two",
        "four",
        "Windows",
        "gigabit 0/0",
        "10.1.1.0/24",
        "second",
        "YouTube",
        "Google",
        "today",
        "IP",
        "Kali",
        "David] Zebra",
        "Mac",
        "Ettercap",
        "one",
        "MAC",
        "82",
        "-s",
        "Gigabit 0/0",
        "ARP",
        "0/0",
        "Cisco",
        "Kali Linux",
        "DNS",
        "vlan one",
        "Windows",
        "DHCP",
        "10"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "PRODUCT",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORDINAL",
        "ORG",
        "ORG",
        "DATE",
        "ORG",
        "PERSON",
        "PERSON",
        "PERSON",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "PRODUCT",
        "CARDINAL",
        "GPE",
        "PERSON",
        "ORG",
        "PRODUCT",
        "PRODUCT",
        "ORG",
        "CARDINAL"
    ],
    "vector": [
        -0.0467359758913517,
        0.029701650142669678,
        0.04008405655622482,
        0.03466150909662247,
        0.01368938572704792,
        -0.06033467501401901,
        0.06411910057067871,
        -0.08866351842880249,
        -0.011207839474081993,
        0.01722523383796215,
        -0.03472455218434334,
        0.011092987842857838,
        -0.038793984800577164,
        0.020164715126156807,
        -0.07444591075181961,
        0.010081889107823372,
        0.01593014784157276,
        0.026102330535650253,
        0.05511461943387985,
        -0.020800545811653137,
        -0.030692921951413155,
        0.011599711142480373,
        -0.020534800365567207,
        0.006463843397796154,
        -0.08867470920085907,
        -0.028536276891827583,
        0.1172463595867157,
        -0.04468855261802673,
        -0.046225111931562424,
        -0.02873765118420124,
        0.04211258515715599,
        0.013088244013488293,
        -0.08743876218795776,
        -0.013763540424406528,
        -0.07300207018852234,
        -0.04411358758807182,
        -0.05455278605222702,
        0.11700999736785889,
        0.0010910006240010262,
        -0.1059955582022667,
        -0.000686907849740237,
        0.0015062487218528986,
        -0.04577990621328354,
        0.00890372321009636,
        0.049166448414325714,
        0.013417812995612621,
        -0.0031737566459923983,
        0.08500410616397858,
        0.024787671864032745,
        -0.02702101692557335,
        -0.02882017008960247,
        0.022779256105422974,
        0.012658970430493355,
        -0.013670004904270172,
        0.03372061252593994,
        -0.10492440313100815,
        0.05151013657450676,
        0.02298400178551674,
        0.04888991266489029,
        -0.012768625281751156,
        -0.03995443508028984,
        0.019405895844101906,
        -0.040686607360839844,
        0.01687091775238514,
        -0.03875502571463585,
        0.038287125527858734,
        0.07717949897050858,
        0.0819753110408783,
        0.04468925669789314,
        0.10688596218824387,
        0.028433771803975105,
        0.009197589010000229,
        -0.05467024818062782,
        -0.009025939740240574,
        0.03336617723107338,
        0.11096996814012527,
        -0.04928204417228699,
        -0.08006390929222107,
        0.05751142278313637,
        0.0020683163311332464,
        0.08270798623561859,
        0.0063205622136592865,
        0.030438117682933807,
        -0.020317301154136658,
        0.04067343473434448,
        0.04802190884947777,
        -0.06455110013484955,
        -0.04287797957658768,
        0.0016480347840115428,
        -0.07169375568628311,
        -0.010056990198791027,
        0.019811904057860374,
        -0.03337254747748375,
        0.030323706567287445,
        0.10589076578617096,
        -0.025069817900657654,
        0.021603837609291077,
        -0.023451635614037514,
        -0.04636962711811066,
        0.05754140391945839,
        -0.009375911206007004,
        0.003311121603474021,
        -0.020383179187774658,
        -0.057610414922237396,
        0.0593542754650116,
        0.05995817482471466,
        0.12776033580303192,
        -0.10007211565971375,
        0.029999906197190285,
        0.038310036063194275,
        -0.009765811264514923,
        0.03557584434747696,
        -0.05286407470703125,
        -0.09772080183029175,
        0.07513255625963211,
        0.04441702738404274,
        0.09182462841272354,
        0.0746089443564415,
        -0.02507384680211544,
        -0.022472472861409187,
        -0.022526951506733894,
        -0.03593817353248596,
        -0.0084065031260252,
        -0.06561492383480072,
        0.027323376387357712,
        -0.022017721086740494,
        -0.00612178910523653,
        5.200395089561462e-33,
        0.008102953433990479,
        0.029902923852205276,
        -0.06589516997337341,
        0.020563049241900444,
        0.016696928068995476,
        -0.07517454773187637,
        0.08080331236124039,
        0.012553737498819828,
        -0.01570488139986992,
        -0.002302019391208887,
        -0.014048944227397442,
        -0.0815441757440567,
        0.02370622381567955,
        -0.04180070757865906,
        0.08209975808858871,
        0.0594722256064415,
        0.005506155546754599,
        0.029211053624749184,
        0.013881169259548187,
        0.06168275699019432,
        -0.023142175748944283,
        -0.08149812370538712,
        0.011470268480479717,
        -0.021141642704606056,
        0.045440424233675,
        -0.014316887594759464,
        -0.032352108508348465,
        -0.07295368611812592,
        -0.03749311342835426,
        0.0167998094111681,
        0.056969910860061646,
        0.0577467679977417,
        -0.08518238365650177,
        0.07489470392465591,
        -0.08626744896173477,
        -0.06028003618121147,
        0.013494167476892471,
        0.02166382223367691,
        -0.014879475347697735,
        -0.08184286952018738,
        -0.02337593585252762,
        -0.06354866176843643,
        0.02075769752264023,
        0.013727969489991665,
        0.016055375337600708,
        -0.10585367679595947,
        -0.04752486199140549,
        0.04323938861489296,
        -0.0010937374318018556,
        0.03502243384718895,
        0.0020262550096958876,
        -0.012222829274833202,
        -0.0369933620095253,
        0.0013602431863546371,
        -0.012825739569962025,
        -0.033369313925504684,
        0.05664287507534027,
        -0.061496712267398834,
        0.07852252572774887,
        0.06290502846240997,
        -0.018718814477324486,
        -0.017638886347413063,
        -0.04110415652394295,
        0.07888823747634888,
        -0.05663304030895233,
        -0.038266975432634354,
        0.01014916505664587,
        -0.045673832297325134,
        0.047787249088287354,
        0.04844680428504944,
        0.0025650819297879934,
        -0.03125109151005745,
        -0.0044149067252874374,
        -0.08531543612480164,
        -0.07860790938138962,
        -0.0256296768784523,
        -0.011015849187970161,
        0.10055158287286758,
        0.047972746193408966,
        0.05624156817793846,
        0.014071614481508732,
        -0.036156315356492996,
        0.08013512939214706,
        0.01369092520326376,
        -0.05738063156604767,
        -0.025297589600086212,
        -0.010757597163319588,
        -0.07118120789527893,
        -0.0572630912065506,
        0.10877801477909088,
        0.02224365435540676,
        0.10903073102235794,
        0.003865547012537718,
        0.03626637905836105,
        0.020637789741158485,
        -4.966693588306544e-33,
        0.023632841184735298,
        0.010999029502272606,
        -0.04264954850077629,
        0.0013626974541693926,
        -0.0834227129817009,
        -0.0291350819170475,
        0.005429072305560112,
        0.019451893866062164,
        0.0062993597239255905,
        -0.08763598650693893,
        -0.05751240625977516,
        -0.02030153200030327,
        0.0437474362552166,
        0.026247018948197365,
        0.04970380291342735,
        -0.05570439621806145,
        0.05819854885339737,
        0.015364518389105797,
        -0.01687905378639698,
        0.016859708353877068,
        0.015383980236947536,
        0.11697836965322495,
        -0.046736009418964386,
        -0.06777329742908478,
        -0.01081314031034708,
        0.04834819212555885,
        0.010487150400876999,
        0.05057825148105621,
        0.0744316577911377,
        0.005231762304902077,
        -0.0026910745073109865,
        0.033461686223745346,
        -0.01575588993728161,
        0.02326970174908638,
        0.03768422454595566,
        0.03123222477734089,
        0.06986820697784424,
        0.0934111624956131,
        -0.07941620796918869,
        0.0030615408904850483,
        0.06728317588567734,
        0.10112433135509491,
        -0.08868291229009628,
        0.017610514536499977,
        0.0865010991692543,
        -0.08021269738674164,
        0.03844328969717026,
        0.048165030777454376,
        -0.10358423739671707,
        -0.09719289094209671,
        0.10263367742300034,
        -0.024605464190244675,
        -0.01981109008193016,
        0.05105320364236832,
        -0.04769667237997055,
        0.073778435587883,
        -0.010007686913013458,
        -0.0003502307226881385,
        0.07843373715877533,
        0.05512566864490509,
        0.014956804923713207,
        -0.0752456858754158,
        -0.046750981360673904,
        0.07845878601074219,
        0.024105582386255264,
        0.05213542655110359,
        0.025724083185195923,
        -0.01509286742657423,
        0.028013823553919792,
        0.02926587499678135,
        -0.01890118233859539,
        0.004548944532871246,
        -0.006537815555930138,
        0.04732301086187363,
        0.031334128230810165,
        -0.003464824054390192,
        -0.014297515153884888,
        0.01033691130578518,
        0.013127169571816921,
        -0.023065734654664993,
        0.007601638324558735,
        -0.004938897211104631,
        -0.06811320781707764,
        0.013433141633868217,
        -0.04981432482600212,
        -0.04684413969516754,
        -0.044520605355501175,
        0.04666213318705559,
        0.007895204238593578,
        -0.02900518663227558,
        -0.0500948429107666,
        -0.05152476206421852,
        -0.050872594118118286,
        -0.014020677655935287,
        0.059293776750564575,
        -4.900735106616594e-08,
        -0.021454311907291412,
        0.11165016144514084,
        0.030397169291973114,
        0.04704452306032181,
        -0.021515725180506706,
        0.014245355501770973,
        0.009803930297493935,
        -0.023475363850593567,
        0.005549098365008831,
        -0.060654740780591965,
        -0.020010968670248985,
        0.07119636237621307,
        0.0520416684448719,
        -0.00484350835904479,
        0.062950998544693,
        0.009826120920479298,
        -0.034835249185562134,
        -0.06457982212305069,
        -0.07703360170125961,
        -0.050201673060655594,
        -0.021473292261362076,
        0.02484886348247528,
        -0.0234904196113348,
        -0.000668975873850286,
        -0.09964994341135025,
        0.027150902897119522,
        0.05605575814843178,
        -0.012705872766673565,
        0.011591617949306965,
        0.04070720449090004,
        -0.07818169891834259,
        -0.00842900201678276,
        0.0025586006231606007,
        0.008772579953074455,
        0.048362135887145996,
        0.11778203397989273,
        -0.05651780962944031,
        -0.07239697873592377,
        0.06035614386200905,
        0.012732233852148056,
        -0.21856272220611572,
        -0.03981296345591545,
        0.014119843952357769,
        -0.017593204975128174,
        -0.045287664979696274,
        -0.036981068551540375,
        -0.03530433401465416,
        -0.002226839307695627,
        0.021761592477560043,
        -0.03221732750535011,
        0.05744941905140877,
        -0.057616449892520905,
        -0.007642548996955156,
        -0.00606544641777873,
        -0.01378755085170269,
        -0.030858241021633148,
        0.059142328798770905,
        -0.11861854046583176,
        0.052596528083086014,
        0.019882412627339363,
        0.08074335753917694,
        -0.019250212237238884,
        -0.0700407549738884,
        0.022250542417168617
    ]
}