{
    "id": "Usw0IlGbkC4",
    "title": "WiFi WPA/WPA2 vs hashcat and hcxdumptool",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2022-02-18T15:00:47Z",
    "video_url": "https://www.youtube.com/watch?v=Usw0IlGbkC4",
    "category": "Science & Technology",
    "tags": [
        "wifi",
        "wifi password hacker",
        "wifi password hacker app",
        "penetration testing",
        "ethical hacking",
        "wifi hacking",
        "kali linux",
        "alfa",
        "alfa adapter",
        "hashcat wifi cracking kali linux",
        "hashcat password recovery",
        "hashcat wpa2",
        "hashcat install",
        "hashcat wpa2 brute force",
        "hashcat dictionary attack",
        "hashcat download",
        "hashcat brute force",
        "hashcat wifi cracking",
        "hcxdumptool",
        "hcxdumptool install kali",
        "hcxdumptool commands",
        "hcxdumptool download",
        "wifi gpu",
        "cyber security",
        "wireless security"
    ],
    "views": 692430,
    "likes": 18655,
    "comments_count": 680,
    "description": "Big thanks to Cisco Meraki for sponsoring this video! Learn how to secure hybrid networks so you can stop these kinds of attacks:   Apologies for the glitches in this video  .... looks like the export of this video broke.... I had lots of issues uploading the original video to YouTube and had to export again quickly and it looks like something else broke. Hopefully won't happen again   Disclaimer: This video is for educational purposes only. I own all equipment used for this demonstration. No actual attack took place on any websites. Only use the tools demonstrated in this video on networks you have permission to attack.  // MENU // 0:00  Introduction 1:32  Software used 2:17  WiFi Hardware used 3:15  Commands used 4:17  Install required software method 1 5:31  Install using Github 7:20  hcxdumptool demo using first Alfa adapter 9:15  Demonstration using second Alfa adapter 11:15  Real world example - a warning to all of us 13:45  Use hcxpcapngtool to set format correctly 17:24  Using hashcat with rockyou wordlist 18:38  Using hashcat with GPU and bruteforce   // Previous Videos // Kali Wifi Adapters:  Old method using airmon-ng:  Old method using GPUs:   // COMMANDS // sudo systemctl stop NetworkManager.service sudo systemctl stop wpa_supplicant.service  sudo hcxdumptool -i wlan0 -o dumpfile.pcapng --active_beacon --enable_status=15   sudo systemctl start wpa_supplicant.service sudo systemctl start NetworkManager.service  hcxpcapngtool -o hash.hc22000 -E essidlist dumpfile.pcapng  hashcat -m 22000 hash.hc22000 wordlist.txt  Windows: hashcat.exe -m 22000 hash.hc22000 -a 3 ?d?d?d?d?d?d?d?d  hashcat.exe -m 22000 hash.hc22000 -a 3 --increment --increment-min 8 --increment-max 18 ?d?d?d?d?d?d?d?d?d?d?d?d?d?d?d?d?d?d  // SOCIAL // Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:  YouTube:    // MY STUFF // Monitor:  More stuff:   // SPONSORS // Interested in sponsoring my videos? Reach out to my team here: sponsors@davidbombal.com  wifi kali linux kali wifi kali alfa alfa network alfa network adapter wifi password wpa wpa2 hashcat hcxdumptool linux hcxdumptool hcxdumptoll hashcat  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #wifi #wpa2 #hashcat",
    "description_links": [
        "https://davidbombal.wiki/meraki",
        "https://youtu.be/5MOsY3VNLK8",
        "https://youtu.be/WfYxrLaqlN8",
        "https://youtu.be/J8A8rKFZW-M",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal",
        "https://amzn.to/3yyF74Y",
        "https://www.amazon.com/shop/davidbombal"
    ],
    "transcript": "- I really wanna thank Cisco Meraki for sponsoring this video. In this video, I'm gonna show you how to crack Wi-Fi networks using hashcat. (upbeat music) Hashcat is a fantastic password cracker. On the hashcat website they have this document, cracking WPA, WPA2 with hashcat and we are told that since version 6.0, hashcat now accepts a new mode, 22,000. This allows us to more efficiently crack WPA or WPA version two passwords. The benefits of this are listed on the hashcat website including the fact that it combines PMKIDs and EAPOL MESSAGE PAIRs into a single file. Basically, this is a lot more efficient than the old way of having a client connect to an access point and then knocking that client off to capture the four-way handshake. This method does not require a client connected to an access point. So you once again don't need to attack an access point where a client is connected to that access point. You don't have to knock that client off the access point. So in other words kick it off and then get it to reconnect and then capture the four-way handshake. This is a much better way of cracking Wi-Fi networks. Now, from a cracking point of view, having all the different handshake types in a single file makes it much more efficient. So you can read the details on the hashcat website. I'll link it below, but basically I'm gonna show you how you can use the hcxdumptool as well as the hcxpcapngtool to firstly capture the required information to crack the passwords of a Wi-Fi network and then to convert it into a format that hashcat understands. You need at least version 6.0.0 of hashcat to run this attack. Now, before we continue if you enjoy these types of ethical hacking videos, please consider subscribing to my YouTube channel. Please like this video and click on the bell to get notifications. That really does help me with the YouTube robots and it tells you when I've uploaded new content to my channel. I'm uploading a whole bunch of ethical hacking content to my channel this year. So if you enjoy this type of thing, please consider subscribing. Okay, let's continue. In this example, I'm running Kali within a virtual machine on this Windows laptop. I'm gonna be using this Alfa network adapter. This is one of my favorite Alfa network adapters. They are not sponsoring this video. I just find their adapters to be really good. This adapter is great because it works out of the box with Kali. You don't have to install any drivers. So I'll connect that to my Windows laptop. VMware detects the new device and then we asked, where do we wanna connect this device? I'm gonna connect it to the virtual machine rather than to my host device. So hopefully now within Kali if I open up a command prompt and type iwconfig, I'll see that Wi-Fi network which I do. So once again, iwconfig shows me that my Wi-Fi network is wlan0, that's this Alfa network adapter. Now, to make this easier for you, I've put the commands below this video. These commands can be found on the hashcat website. I've adjusted the commands to make it work for my demonstration. So I've had to make some slight changes. I'm for instance not gonna use a word list, I'm gonna use a brute force attack to discover what the password is of the Wi-Fi network. Now, you need two pieces of software. You need the hcxdumptool and you need the hcxpcapngtool. I just wanna interrupt the video at this point. There are two ways to install the hcxdumptool on Kali. You can simply type the command and then Kali will tell you if the application is not available and then you can do a sudo apt install and install the tool. That's the first method that I'll show you, but you may have problems doing that and you may wanna get to the latest release of the software. To do that you need to install the software from GitHub. I'll show you both methods. First method, just doing sudo apt install and the tool. And second method, actually cloning the software from GitHub and then installing it. So if you prefer to use the GitHub method jump to this timestamp in the video where I'll show you how to install the software otherwise continue watching. Before I install the software, I'm gonna do a sudo apt update to update my references. So the first tool that we need is hcxtool. That's not installed by default on this version of Kali. In this example, I'm using 2021.4, but all you need to do is type the command in and then Kali will leave if it's not installed and then ask you to install it. So in my example, it's not installed. So I'm gonna download it and install it. Now, I'm gonna allow it to restart the services as needed. Okay, software is now installed. Next piece of software that we need is the hcxpcapngtool. So I'll paste that command in. It's not installed so I'll type yes to install the software. Software is now installed. Okay, so I've shown you the first method of installing the hcxdumptool. That could work. I have had problems, however, using the software that way so you may wanna get the latest release of the software And that's what I'm gonna show you now. If you're not interested in that then jump to this timestamp where I actually show you the cracking of the Wi-Fi network, but now I'm gonna show you how to install the hcxtool. Okay, so on GitHub, we are going to clone the software. So in Kali, we simply clone that git directory. So in this example, I've got it here. So I've now cloned it to my Kali virtual machine. And then we go into that directory. So PWD shows me that I'm in that directory. Next step is to install some dependencies. So you've gotta install the software. So I'll paste that in. And my example the software is already installed. In your example, if it hasn't been installed, the software will be downloaded and installed. And then what you need to do is use make and make install to install the software. So firstly, make in the hcxdumptool directory. So we can see that that's been done and then sudo make install to install the software. And now, I can use the hcxdumptool. We're told that an option is not used so I can use help to see information about the software including the version so let's look at the version that we've got here. I'm currently using this version of the software. Okay, so that's how you download the latest release. I personally would use the latest release of software. So get it from GitHub and use it, but depending on which version of Kali you may be able to use just a simple install. Okay, so now that that's been done, we can actually look at cracking the Wi-Fi networks. So make sure that you've got the two pieces of software installed. Hashcat is by default installed. So if I type hashcat in Kali, you can see that it's available. Now, we need to stop all services that are accessing the Wi-Fi network so network manager and the supplicant tool. So the two commands that I'm gonna use are these. Once again, you can get the commands below this video. So I'll stop the network manager service and stop the supplicant service. And now that I've done that I am going to ask it to capture Wi-Fi networks. Now, by default, this is gonna capture everything, all Wi-Fi networks. The interface that I'm using is wlan0. So iwconfig will show me the interface to use. So yours may be different, but in my example it's wlan0. I'm gonna dump the output to this file so dump file pcapng. I'm going to use active beacons and I'm gonna enable status one so that I can see the output. Okay, so I'll paste the command in sudo hcxdumptool, interface is wireless LAN zero. The file that we're gonna create is the dumpfile.pcapng file. I'll press enter, the hcxdumptool is now starting. So as you can see there it's continuing. We see EAPOL messages, we see ROGUE information. You basically just need to let this run for a while. Let it run for a few minutes, capture information and then you can start cracking. I'll clear the screen and if we use LS we can see that that dump file has been created. Next step is to start the services once again. So I'll start the WPA supplicant service and I'll start network manager. Now, in this example, I've got another Alfa adapter. This Alfa adapter supports both 2.4 gigahertz as well as five gigahertz, better adapter. I've got it connected to the laptop now. So let's see if this adapter can also capture information from the Wi-Fi networks. Now, before I run the command in VMware workstation player, I'm gonna go to removable drives, Realtek 802.11N network interface card and connect that to my Kali virtual machine. So iwconfig should show me that Wi-Fi interface. There you go. What I'll do is stop the two services. So both those services are stopped. I'll clear the screen and I'll run the hcxdumptool command. Okay, so that's starting up now. Now, in my tests, this takes a lot longer to start up. We told you that this may take some time to begin and that's my experience. It takes a while before it starts running and detecting the Wi-Fi networks and grabbing information from those Wi-Fi networks. So you simply need to wait now for this to start and run. While that's starting up I'll just say that this is one of the best Wi-Fi adapters in my opinion and when in discussions with the Kali developers, they've also recommended this Wi-Fi adapter. So there are various Wi-Fi adapters that you can use. I have created other videos which I'll link below showing you various Wi-Fi adapters that you can use with Kali. Please note with this adapter you will need to install extra software in Kali. Okay, so that's started up now. You can see that it's sending beacons, we're getting beacon responses. We're getting PMKID, ROGUE output. All you need to do now is just wait, let that run for a while. Now, this Israeli security researcher, had an Alfa network adapter. That's another Alfa network adapter strapped to his back. You can see the Alfa network adapter, another good network adapter. And he was able to crack a whole bunch of Wi-Fi networks. So 70% of Wi-Fi network were cracked of the 5,000 that he gathered. He basically walked around and then cracked those Wi-Fi networks. In this example, he was using GPUs in a computer such as this. So the chance of cracking the passwords was a lot better. He used some tricks such as capturing the PMKIDs like we are, but then he realized that a lot of people were using digits in their passwords. So it was easy to crack, but similar to the example that I'm showing in this video because the people were just using digits rather than complex passwords. I've just let that run now a bit longer. And as you can see we've got authentication association messages, we've got EAPOL messages. A whole bunch of information is being gathered about the Wi-Fi networks. And that's essentially all he did. He grabbed information about Wi-Fi networks and then cracked them. Of the networks that weren't using digits, he used the RockYou database. So anyone who tells you that the only way to prove the stuff is to use complex passwords, hasn't always checked what's happening in the real world. Just because people are supposed to do something, doesn't mean that that's what they're doing. They often use very simple passwords. So in my example, simple password on a TP-Link router or in the real world, 70% of passwords were cracked using digits as well as the RockYou database. I've shown you some of those cracks in previous videos. I'll update those videos as well. I wanna do a separate full on GPU test. In this example, this laptop up has a GPU so we can do some basic testing, but I wanna use a bigger computer to do the cracking. I'm not gonna bore you any longer. You just need to wait for that to continue. Let it run for a few minutes, grab a bunch of information from the Wi-Fi networks so that you get the inform of the network that you want and then you can crack them. Okay, so I'll go back to the previous example now where I'm using this Alfa network adapter to do the cracking. This Alfa network adapter is great, but it only supports 2.4 gigahertz rather than five gigahertz. Again, I've shown you in a separate video link below, various network adapters that you can use. So I break that, LS shows me that the pcapng file is available now and now we can crack the passwords here. The important piece now, however, is to use the hcxpcaptool to convert this file, in other words the pcapng file into a format that hashcat understands. So we're gonna convert it to hash.hc22000 because that's what we wanna use within hashcat. This E option gives us a list of SSIDs. So let's run that tool. I'll clear the screen and paste that into Kali. That went really quickly so there's the command once again. It's reading the dump file. It's telling us what's in the file and it tells us that it's processed that file successfully. So LS shows us that we now have a list of SSIDs and we have the hash file. So if I cat the SSID file, you can see a whole bunch of access lists. The Wi-Fi network that we interested in is this TP-Link F3FC, which is once again this Wi-Fi network next to me. All the other networks we are not interested in. Cat hashhc22000 gives us a list of information that's been captured which we can use to crack the Wi-Fi network. Now, you might not know what the Mac address is of the Wi-Fi network. So you can use hcxdumptool once again with the do_rcascan to scan the Wi-Fi networks. Now, I actually started up these services once again so before I use that command, I'll stop the network manager service and I'll stop the supplicant service. So now that I've done that I can scan the Wi-Fi networks in the vicinity. So that'll start hcxdumptool once again. Shows us various Wi-Fi networks that have been discovered, including the Mac address of the Wi-Fi network. Okay, I'll stop that here. This is the one that we are interested in. So we wanna get the BSSID of that network. So let's get that information. The file that we wanna open is this hash file. So to do that I'm gonna use the GUI. So I'll double click on the hash file, it's open with mousepad. What I'm gonna do is copy this and put it into sublime text which will be easier for me to use and edit with. Okay, so this is the BSSID that we are looking for so the Wi-Fi network that we're looking for. I'll search for that and I've found it here. So what I'll do is delete the other lines in the file because that's the only one that I'm interested in and there's another entry here. So I'll delete the other entries as well. This is the Wi-Fi network that we wanna crack. Now, you can do that in Kali if you want to. So what I'm gonna do is copy that information and in Kali I'll move the hash file to a backup file. And then what I'll do is create a new file with the same name. So basically I could have edited it directly within Kali if I'd wanted to but I'll just do it this way. So I've got two files. The one that we interested in is this one. So what I can do now is use hashcat to decrypt that using a word list. So I could use hashcat the file that I wanna crack and a specific word list. That means that I need a word list somewhere. Okay, so I could use the RockYou word list. And that's available under user share word lists. So I could copy that and I'll paste it in my home directory. And then what I'll do is extract that file. So I've got the RockYou word list now. So LS shows us that we've got the RockYou word list there. So what you could do is use hashcat to try and crack the password of the network using a word list. So I'll just show you the command, but that's not the way that I wanna do it because cracking in a virtual machine is really slow. So I'll stop that. And what I'll do is go to the hashcat website. And what I'll do here is download hashcat to my Windows computer. Now, you need 7-Zip software. So you can download the 7-Zip software from 7-Zip.org, just download the exe. So what I can do here as an example is extract this hashcat directory to my downloads directory. So I've got hashcat right there. What I can do now is save this file that I created with the captured information to my hashcat directory. So in my hashcat directory which in this case is in my downloads directory, I'll open up a CMD prompt. That just allows me to open it directly without trying to navigate. So the command that we're gonna use is hashcat.exe. We are going to use 22,000 to crack this file that we've created. I'm gonna use a brute force attack. And what you could do is specify the number of digits. Now, I know how many digits that Wi-Fi network is using, but let's assume you didn't know how many digits it was using. You could increment from say a minimum of eight to a maximum that you specify. So in this example, I'm only using digits so hence D, but you could use alphanumeric if you wanted to. So I'll paste that in, hashcat is starting. As you can see it's using a GeForce GPU inside of this laptop to do the cracking. I can use S to see the status of the crack. You can see that the progress at this point is 2%. It's trying to crack an eight digit password. And all you need to do now is wait for that to crack the password. According to this, it's gonna take about 10 minutes to crack the eight digit password. Now, this video is getting too long so what I'll do is show you in a separate video how to use big GPUs to crack the passwords. A 10 digit password will only take a few seconds to crack when using a high speed GPU. Okay, so after a period of time it's cracked that password. If I run that command again, we're told that we need to use show to display the password. So if I use --show, notice there is the password of the Wi-Fi network and that's the correct password of that Wi-Fi network. That's actually the default password of this access point. And that's one of the problems with TP- Link access points. The default passwords are terrible. You should change them, but there you go that's the default password. Now, in a subsequent video I'll show you how to use bigger GPUs to crack the passwords, how to crack alphanumeric passwords rather than just numeric. A lot of people say, \"Well, David this password is too simple.\" Try and crack a more complex password than that. Now, you should be using good passwords. The problem is people don't do that. As this researcher in Israel discovered, 70% of Wi-Fi networks were cracked because he was using big GPUs and most of the passwords people were using were 10 digit phone numbers. Very easy to crack those types of passwords. He also discovered that he was able to crack a whole bunch of passwords based on the dictionary RockYou. So even though people are not supposed to use these types of passwords, they do. Now, I hope you enjoyed this video. If you did, please consider liking it. Please consider subscribing to my YouTube channel and clicking on the bell to get notifications. That really does help me with the YouTube robots. I'm David Bombal, and I wanna wish you all the very best. (upbeat music)",
    "transcript_keywords": [
        "WiFi networks",
        "Alfa network adapter",
        "Cisco Meraki",
        "network",
        "WiFi",
        "Alfa network",
        "Kali",
        "networks",
        "software",
        "file",
        "network adapter",
        "hashcat",
        "crack",
        "install",
        "passwords",
        "password",
        "show",
        "Alfa",
        "adapter",
        "video"
    ],
    "transcript_entity_values": [
        "first",
        "Hashcat",
        "Cisco Meraki",
        "do_rcascan",
        "Israeli",
        "five gigahertz",
        "BSSID",
        "WPA",
        "7-Zip.org",
        "LAN",
        "6.0",
        "Wi-Fi",
        "the 7-Zip",
        "10 digit",
        "22,000",
        "two",
        "four",
        "a few seconds",
        "eight",
        "Israel",
        "five gigahertz",
        "Alfa",
        "second",
        "this year",
        "YouTube",
        "GeForce",
        "David",
        "PMKIDs",
        "2%",
        "Kali",
        "a few minutes",
        "Mac",
        "SSID",
        "5,000",
        "eight digit",
        "2.4 gigahertz",
        "EAPOL",
        "GPU",
        "VMware",
        "GitHub",
        "firstly",
        "GUI",
        "Realtek 802.11N",
        "the Wi-Fi",
        "First",
        "LS",
        "Windows",
        "2021.4",
        "70%",
        "David Bombal",
        "Wi-Fi",
        "about 10 minutes",
        "WPA2",
        "7"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "ORG",
        "ORG",
        "LAW",
        "NORP",
        "MONEY",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "LOC",
        "EVENT",
        "QUANTITY",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "TIME",
        "CARDINAL",
        "GPE",
        "QUANTITY",
        "ORG",
        "ORDINAL",
        "DATE",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "PERCENT",
        "PERSON",
        "TIME",
        "PERSON",
        "ORG",
        "CARDINAL",
        "QUANTITY",
        "QUANTITY",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORDINAL",
        "ORG",
        "ORG",
        "ORG",
        "ORDINAL",
        "ORG",
        "PRODUCT",
        "CARDINAL",
        "PERCENT",
        "PERSON",
        "ORG",
        "TIME",
        "ORG",
        "CARDINAL"
    ],
    "vector": [
        -0.032179124653339386,
        0.0754399523139,
        -0.0025929079856723547,
        -0.024990679696202278,
        0.013516204431653023,
        -0.018757246434688568,
        -0.007415326777845621,
        -0.06295105069875717,
        -0.07339859753847122,
        -0.0399436391890049,
        0.10497336834669113,
        0.03932007774710655,
        -0.003845466999337077,
        -0.04368823394179344,
        0.011581718921661377,
        0.07008408010005951,
        -0.01800573617219925,
        -0.035908687859773636,
        -0.08334280550479889,
        -0.05238296091556549,
        -0.021550146862864494,
        -0.04243829846382141,
        0.06235791742801666,
        0.04443943500518799,
        0.027887875214219093,
        0.10304917395114899,
        0.1031574234366417,
        0.08188528567552567,
        -0.009721886366605759,
        -0.035686299204826355,
        0.0023164604790508747,
        0.008324947208166122,
        -0.004951938055455685,
        -0.04964471235871315,
        -0.04730008915066719,
        -0.02999144420027733,
        0.02456277795135975,
        0.013469923287630081,
        -0.011189310811460018,
        -0.06079747900366783,
        -0.010070901364088058,
        0.010575147345662117,
        -0.02871624007821083,
        0.021881835535168648,
        -0.082326740026474,
        -0.02919822931289673,
        0.021946251392364502,
        0.0167775247246027,
        0.03985852375626564,
        -0.03594159334897995,
        -0.019116222858428955,
        0.0007810031529515982,
        0.06871611624956131,
        -0.015350750647485256,
        -0.011695858091115952,
        -0.10323945432901382,
        -0.060876280069351196,
        0.025556838139891624,
        0.12162315845489502,
        -0.053670141845941544,
        -0.05377468839287758,
        0.009715046733617783,
        0.025896135717630386,
        0.0038047260604798794,
        0.029595566913485527,
        -0.002069025533273816,
        -0.03316067159175873,
        0.005002843216061592,
        0.021493209525942802,
        -0.005818017292767763,
        -0.0010817872826009989,
        0.015148581005632877,
        -0.057435546070337296,
        0.023398669436573982,
        0.0621020682156086,
        0.02611994557082653,
        -0.012024317868053913,
        -0.04346402734518051,
        0.04736359789967537,
        -0.0327674001455307,
        0.05893537402153015,
        0.003506476292386651,
        0.03014594316482544,
        -0.003571499837562442,
        0.07381543517112732,
        0.034803155809640884,
        -0.06411176174879074,
        0.010678238235414028,
        0.05384692922234535,
        0.005453044548630714,
        -0.06762677431106567,
        0.025516467168927193,
        0.07357735931873322,
        0.04464367777109146,
        0.10527966171503067,
        -0.01116346474736929,
        0.04418281838297844,
        -0.00800485722720623,
        -0.06507667154073715,
        0.0803244337439537,
        0.030958915129303932,
        -0.0639910101890564,
        -0.05998656526207924,
        -0.07409888505935669,
        0.010579055175185204,
        -0.004413642920553684,
        0.04758765175938606,
        0.04871778190135956,
        0.05610886216163635,
        0.01878334768116474,
        0.03192310780286789,
        -0.0005786552210338414,
        -0.049116961658000946,
        -0.0584123395383358,
        -0.02659696154296398,
        0.03622591495513916,
        -0.006090824957937002,
        0.07970412820577621,
        0.03489715978503227,
        0.025483388453722,
        0.03121192567050457,
        -0.03848356753587723,
        0.01593650132417679,
        -0.04660853371024132,
        0.0475248247385025,
        -0.03908073157072067,
        -0.018202735111117363,
        9.760698240269663e-33,
        0.07733403146266937,
        0.06024618446826935,
        -0.14235229790210724,
        0.03298378363251686,
        0.027032578364014626,
        -0.05416511744260788,
        0.0004232172213960439,
        0.0016799615696072578,
        -0.010412825271487236,
        -0.01290978118777275,
        -0.039152733981609344,
        -0.019159097224473953,
        -0.06458073854446411,
        -0.06149095296859741,
        0.06079389899969101,
        0.0003120716428384185,
        -0.0008569349301978946,
        0.027256714180111885,
        -0.005859225057065487,
        0.148499995470047,
        0.01920827105641365,
        -0.07074405997991562,
        -0.008481520228087902,
        -0.04690416902303696,
        0.004737507551908493,
        0.05595609173178673,
        -0.04189358651638031,
        0.009427658282220364,
        0.05619226396083832,
        0.041767559945583344,
        -0.047201670706272125,
        -0.013245089910924435,
        0.000956389238126576,
        0.009238366037607193,
        -0.028107376769185066,
        -0.02125108428299427,
        -0.11394140124320984,
        -0.0843876451253891,
        -0.07674340903759003,
        -0.057753000408411026,
        -0.010026873089373112,
        -0.028327716514468193,
        -0.06213501840829849,
        0.0037135311868041754,
        0.11012876033782959,
        -0.0942876935005188,
        -0.021256906911730766,
        0.04136277362704277,
        -0.026177773252129555,
        0.03823535516858101,
        -0.0865127444267273,
        0.05359185114502907,
        0.01921234466135502,
        -0.03361174836754799,
        0.005899820942431688,
        -0.023473577573895454,
        0.05124495550990105,
        0.004846632480621338,
        0.039624352008104324,
        0.0870579332113266,
        0.021726062521338463,
        0.08536237478256226,
        -0.018173592165112495,
        0.001794397016055882,
        -0.03460289537906647,
        -0.0409076064825058,
        -0.0065155671909451485,
        0.0880265161395073,
        -0.05575104057788849,
        0.0822448655962944,
        -0.025502147153019905,
        -0.031101765111088753,
        0.05749836936593056,
        -0.021004239097237587,
        -0.0530555360019207,
        -0.06379034370183945,
        0.011052139103412628,
        0.04309304803609848,
        0.0011030776659026742,
        -0.025893298909068108,
        0.05612817406654358,
        0.007945145480334759,
        0.15248732268810272,
        0.006719551049172878,
        -0.08976419270038605,
        -0.012404162436723709,
        -0.002623622538521886,
        -0.11852078884840012,
        -0.06773354113101959,
        0.10612291842699051,
        -0.007691788021475077,
        0.06292228400707245,
        -0.009612773545086384,
        -0.016418052837252617,
        0.012017352506518364,
        -9.878171268219089e-33,
        -0.05779987573623657,
        0.03413955494761467,
        -0.013438553549349308,
        -0.06385864317417145,
        -0.11907999217510223,
        -0.009952925145626068,
        -0.007236774545162916,
        -0.009940765798091888,
        0.012211102992296219,
        0.0015500024892389774,
        0.08717319369316101,
        -0.050779424607753754,
        0.027489036321640015,
        -0.014276361092925072,
        0.023569589480757713,
        -0.04402567073702812,
        0.10691826790571213,
        0.005618716590106487,
        -0.03997914493083954,
        -0.049642808735370636,
        0.05908066779375076,
        0.11065047234296799,
        0.01514601893723011,
        0.013640247285366058,
        -0.020794035866856575,
        -0.050810880959033966,
        0.076682910323143,
        0.07052050530910492,
        0.1020248681306839,
        0.024340974166989326,
        -0.009197615087032318,
        -0.02314044162631035,
        0.036581993103027344,
        -0.03921840712428093,
        0.07337069511413574,
        0.03305618837475777,
        0.06064362823963165,
        0.06995057314634323,
        0.008349103853106499,
        -0.014580405317246914,
        0.08096105605363846,
        -0.015438062138855457,
        -0.08060138672590256,
        -0.050445307046175,
        -0.050911903381347656,
        -0.046468690037727356,
        0.00802451092749834,
        -0.003967355005443096,
        -0.11291869729757309,
        -0.021229900419712067,
        0.12133058160543442,
        -0.01807711459696293,
        -0.030186688527464867,
        0.08098039776086807,
        -0.0341324657201767,
        0.01667732372879982,
        0.043208613991737366,
        -0.036278482526540756,
        0.03175179287791252,
        0.025270141661167145,
        -0.015841716900467873,
        -0.03322003781795502,
        -0.005027524195611477,
        0.08235049992799759,
        0.0010404395870864391,
        -0.04212037846446037,
        -0.10505273193120956,
        0.0118319783359766,
        -0.005858010612428188,
        0.12274003773927689,
        -0.040144987404346466,
        -0.014969190582633018,
        0.06421536207199097,
        0.022260909900069237,
        0.04268556460738182,
        -0.03190941363573074,
        -0.011946585029363632,
        -0.009201467037200928,
        -0.04083813726902008,
        -0.08382197469472885,
        -0.013128139078617096,
        -0.011051235720515251,
        -0.003918984439224005,
        -0.01874554343521595,
        0.08465579152107239,
        -0.03569169342517853,
        0.012271285988390446,
        0.0480138324201107,
        -0.05378419905900955,
        0.05813491344451904,
        -0.009266586042940617,
        0.002238778630271554,
        -0.05601698160171509,
        0.060999006032943726,
        -7.723726594122127e-05,
        -6.161480570199274e-08,
        -0.06742434203624725,
        0.037486109882593155,
        -0.030963605269789696,
        0.059481848031282425,
        0.01765846088528633,
        0.049782704561948776,
        -0.012071337550878525,
        -0.15495485067367554,
        0.02608463168144226,
        0.03013128973543644,
        -0.03766949102282524,
        0.09012434631586075,
        -0.07009346783161163,
        -0.0591171495616436,
        -0.05378264933824539,
        0.0590519905090332,
        -0.04981377720832825,
        -0.04272555187344551,
        -0.004822177346795797,
        -0.038989901542663574,
        -0.011887047439813614,
        -0.03026047721505165,
        0.016117127612233162,
        -0.02038748376071453,
        -0.026703784242272377,
        0.054478734731674194,
        0.020781995728611946,
        0.030814331024885178,
        0.0038124413695186377,
        -0.05751767382025719,
        -0.12284615635871887,
        -0.026014478877186775,
        -0.04345285892486572,
        -0.03861194849014282,
        -0.052611105144023895,
        0.0727524682879448,
        -0.03524487465620041,
        -0.012769916094839573,
        -0.05111534520983696,
        0.012776781804859638,
        -0.10200505703687668,
        -0.06490741670131683,
        0.025785446166992188,
        -0.022980885580182076,
        -0.03925441950559616,
        -0.0025105669628828764,
        -0.0584983266890049,
        0.04670329764485359,
        0.048630353063344955,
        0.025148365646600723,
        0.02473047748208046,
        -0.037657033652067184,
        0.03510638698935509,
        -0.009581663645803928,
        0.05388148874044418,
        0.02078060433268547,
        0.0644439309835434,
        -0.15753234922885895,
        0.06532353907823563,
        0.05307076871395111,
        0.06740522384643555,
        -0.0022698482498526573,
        0.0077171470038592815,
        0.015572153963148594
    ]
}