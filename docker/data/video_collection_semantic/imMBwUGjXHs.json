{
    "id": "imMBwUGjXHs",
    "title": "The clever camera code on rolls of film",
    "channel": "Technology Connections",
    "channel_id": "UCy0tKL1T7wFoYcxCe0xjN6Q",
    "subscriber_count": 2460000,
    "upload_date": "2022-11-20T17:00:46Z",
    "video_url": "https://www.youtube.com/watch?v=imMBwUGjXHs",
    "category": "Science & Technology",
    "tags": [],
    "views": 889041,
    "likes": 49892,
    "comments_count": 2328,
    "description": "Yep. It's a video!  Links 'n' stuff: Technology Connextras (my second channel where stuff goes sometimes)  Technology Connections on Twitter (...for now):  The TC Subreddit   This channel is supported through viewer contributions on Patreon. Thanks to the generous support of people like you, Technology Connections has remained independent and possible. If you'd like to join the amazing people who've pledged their support, check out the link below. Thank you for your consideration!   Oh, and look at these wonderful patrons! Steven Montalto, jack darko., Tony Coppoletta, ParzivaLore, Erin Explosion, RatchetOfVaporex, Isaiah Simpson, Isaac Waller, NAK , Benjamin Nelson, Jordyn Szretter, Teddy Dubno, AJV, Sylvan , KrystalCroft , Greg Burnett, Ryan Lewis, Justin Lowery, Daniel Kelso, Zack Kenz, Robert Pomeroy, Shannon Juarez, Alexander Stopher, Blake, Jeff Whitney, MayMedia, Mak Zam, CozyYams, Julia, Within , Anders G. Jrgensen, Congruent Crib, Tyler Bowden, Greg King, s4y, John Deweerd, Scoott, Deborah Joseph, thepieman, Adam Glenn, Jason B. Schechter, Ph.D., Ryan Morrison, Darryl B, Theonorth , David Mulatti, Markus Magnitz, Rasmus Mrch, Dennis Owens, Timotej Kova, First Lost, Noah chapman, Andy, Josie Sweeney, AlexanderG, COUsaBL, John Standley, Tim Salerno, Benjamin Blom, Dan Kats, andreamsofcake , Jameel Akari, Cyberbirdy , Saumon, C4 Redalert, Chris, Dennis Henderson, Dark, Noah Spencer, Rachel Arjache, Arnav Dandu, CJ, plusmid, Martin Riggs, Florian, Thatco , Loc Collette (loic2665), superDoubleA, David Whitesell, Tempystral, Joe Eagar, Tim Gartman, Rajeev Suchet Erramilli, David Jenkin, Howard Longden, Harrison Leake, Ken Chalmers, Sam Katzenberg, f00d, SHAGUAR, Doug Kent, Georgi Georgiev, Dean Fehribach, Tara O'Berne, Patrick Noble, Rip Rinehart, Brandon Stansbury, Hunter Harris, Jason Bulgrin, Paul Ogden, OgNimaeb , Flibbles , Brandon Smith, Jean-Marc Bherer, David Thompson, Josh Karpel, E. Seale, Koibu , Ivan Galinskiy, FC, GameGrime, Tom Nute, Jon Schwam, Tim Davis, Brian Batchelder, Huiliang Xia, Andrew Mutch, Otto Ymamto, Rob , Markus , OlyRay, Abel , Joshua Christensen, Tom Wright, Julime , Gurkenwasser, Zach Vaughan, ThumperDaeTime, Vincent Barrie, Felix Grant, Robin Hanford, Arin Riley, David Starks, KlueBat, Torbjrn Lindgren, David Entremont, Demi Vis, , Philip Thoman, Jan Rauschtz, Robby Kilian, Ryan Sanders, , Peter Schmitt (Aragos), Evan Terry, foxspresso , CloudsPoopRainbowTurds, GOLFisNOTaSPORT, Colleen Dunseath, Josef Hunt, Nathanial, Christian Stub, David Welch, devvis, Sydney Walsh, Cameron Cordes, Blake Cerenzia, Skyler Lott, Igor Nunes, Jason Hibbs, Barry Tomasini, Jonathan Pullen, jtfletchbot, The_Tiberius, Isaac Andersen, David Lawrence, Juho Kestil, Evan Mills, melvin2001 , Ellis , Aaron Soto, Maxime Poulin, Joe Johnson, Jason Ash, Chris Aucoin",
    "description_links": [
        "https://www.youtube.com/@TechnologyConnextras",
        "https://twitter.com/TechConnectify",
        "https://www.reddit.com/r/technologyconnections",
        "https://www.patreon.com/technologyconnections"
    ],
    "transcript": "[from off-camera] Every year we go through this. Every year! I tell you its No Effort November but you just you dont believe me! I I dunno how we got here but, um *sigh* lets try again. Hello and welcome to No Effort November, [said really fast] a series of videos for the month of November in which no effort is made. Before digital cameras were a thing, you had to buy this film stuff to take pictures. This film was available in a bunch of different varieties. The sensitivity of the film to light, or its speed, was one of a few factors youd consider when buying film. Faster films, like ISO 800, were good for action shots since the camera could use a faster shutter speed and prevent motion blur. They were also good for lower-light situations, making photography possible when it might otherwise not be. But faster films produced a grainier image, so if image quality is what you were after, you might have wanted to use a slower film like ISO 100, or even 50. Now, because changing the films sensitivity to light will change how the camera needs to expose it for a given scene, cameras featured a setting for film speed. In manual cameras this would usually just change how its light meter responds to light. But those were mostly used by professionals, and consumer cameras from about the 1960s onward would handle exposure automatically. But that can only work if the camera knows the film speed, so you had to match the cameras speed setting to the film you were putting into the camera. That sounds like effort, and if you forgot to change this when you put in a new roll of film that was a different speed from the last one, all the images on that roll would be under or overexposed, and wouldnt that be embarrassing and/or devastating. Clearly, we need to make this a No Effort process. There were many potential ways to do this, for instance we could come up with a new kind of film cartridge that could communicate its speed to the camera through some sorta physical means like, like maybe the longer a little sticky-outy bit is, the faster the film is inside. But despite Kodaks best and repeated efforts to come up with a more convenient film product, the venerable 135 format consisting of 35mm film (essentially the same stuff used in the movie business) spooled and encased in a simple round cassette with a light-proof tangential exit slot so it can poke out like a weird tongue just would not die. A big part of this was likely due to the fact that camera manufacturers had made the process of loading 35mm film much easier with time, which largely negated the benefits of self-contained film cartridges like 126 or 110. This Ricoh FF-3 AF Super, for instance, is an automatic point-and-shoot camera design dating from 1982. And it features easy film loading. Look theres film in here, OK, Im not gonna open it to show you but its just plop the cassette here, pull the film out of it and up to a little orange mark inside, close the back and press the shutter button. The camera will load it automatically. In addition to auto-loading the camera also features auto-focus, auto-exposure, a built-in flash, really this is a very competent point-and-shoot camera but! You still have to set the film speed manually with this control on the front. Luckily by this time we had little windows on the camera back that let you see a portion of the film cassette where it would... usually list its characteristics (and also so you could tell if it was, y'know if there's film in there or not) but you could still screw this up and ruin an entire roll if you werent just a bit careful. So, in 1983 almost 50 years after it officially became a format Kodak would introduce DX Encoding to 135 format film cassettes. DX, for Digital IndeX served to make film handling easier for both the photographer and the photo finisher. It did this in three ways: first, this barcode on the cassettes identifies the specific film emulsion inside, and film processing equipment which could read this barcode could automatically determine developing times and ensure a roll of film wasnt about to go through the wrong development process. Secondly, DX encoding was also present on the film itself. Once developed, film edge marking and barcodes (exposed onto the film when it was packaged) also identified the film stock, which could be used in printing and scanning equipment for automatic color correction. Additionally, it encoded the frame numbers which was useful when ordering reprints and whatnot. But the third and final part of DX encoding is, to me, the most interesting. DX Camera Auto Sensing would finally make loading a camera a (mostly) No Effort experience. Here, take a look. This is my Canon T90, and when I insert this roll of Kodacolor 200 , it knows thats ISO 200 film. Stick in some Cinestill 50D, and it registers as ISO 50. This Fujicolor Superia 400 shows up as ISO 400. And this roll of ProImage 100 registers as - you guessed it - 100. And apparently those are the only four speeds of film I ever buy. The camera determined the film speeds by using electrical contacts to read a series of patches on the surface of the film cassette. These patches can be shiny and electrically conductive, or covered with an insulating layer of black ink. There are 2 rows of 6 patches across the cassettes length, however only 5 patches per row encode data. The five bits along the top row encode the films sensitivity, and the bottom row is split into a three bit section which encodes the number of exposures on the roll, and a two bit section which defines the films exposure tolerance - thats how wrongly you can expose it before it affects the captured image. This simple arrangement, when detected and decoded by the camera, will tell it all it needs to know for automatic operation. Now, this is a professional camera. And as such, its capable of reading most of the encoded information. It will even rewind the film on its own when you shoot the last frame. However, it doesnt read the films exposure tolerance. Frankly, I don't know how much help that would be for any camera to know outside of weird edge cases. But anyway, not everybody has a professional camera, and Kodak knew that. So, when they designed this code scheme, they arranged the information so that a cost-cut consumer camera could set itself correctly for any speed between ISO 25 and 3200. This Yashica Samurai, for instance, is a very weird camera, dont worry too much about that this is a half-frame SLR from 1987. Uh, it's definitely pretty high-end but also definitely still a consumer camera. And well see that in the film compartment there are only four contacts compared to the T90s eight. Actually, the T90 has 16; Canon used a pair of contacts for every bit of the code it could read. Which is weird because, like, the cassette is metal and it was designed so that the two patches closest to the spool post are always bare. Thats why they dont convey information, theyre just a ground plane, and the camera only needs to check for continuity across that ground and a single contact point at each bit location. The T90 doesnt use the ground and instead reads every data bit location individually. I dont know why Canon overcomplicated this but anyway The Samurai, with its four contacts (one of which is ground) is only checking the first three bits of the first row. Thats all. That gives us 8 possible combinations which might not seem like enough but by the time DX encoding was a thing, consumer films were generally sold in doubles in speed, with 100 and 200 being perhaps the most common films, 400 pretty common but less so, 800 your sports/action film, and 1600 being pretty exotic. And see, even though we only have three bits representing eight combinations, we can start at 25 and through doubling get to 50, 100, 200, 400, 800, 1600, 3200. That's eight! Kodak smartly used bits 4 and 5 in the five-bit code to distinguish the weird in-betweeny speeds like ISO 160, 64, or 1000. Speeds that pros might use with regularity, but casual photographers were unlikely to run across at the grocery store. This website I found has a chart of all the combinations and well see that the first three bits are identical across three speeds and only change at the next whole stop in sensitivity. That makes bits 4 and 5 essentially irrelevant for consumer cameras. And heres the other thing: if you mess up an exposure by a third of a stop it doesnt really matter. Print film, especially, has amazing exposure latitude and so really if you were to expose an ISO 1000 film as if it were 800 speed film... you wouldnt notice. Slide film needs exposure to be pretty on-the-nose so its harder to get away with this, but negative film is generally very lenient. These films are all coded as having +3 -1 sensitivity, so you can screw up exposure by a full stop in either direction and be fine. ProImage 100, interestingly, can only take two stops of overexposure. The weenie. Oh, and while it might be nice for the camera to know how many exposures are on a roll of film well, its not exactly critical info. Theres little point in complexifying a point-and-shoot consumer camera to that extent. Youre just gonna shoot till you get to the end of the roll then hit rewind - plus most of the time you could squeeze another exposure or two out of a roll so you wouldnt want the thing to rewind at the end anyway! And thanks to print films generous exposure tolerance (particularly with over-exposure) some other camera manufacturers would cost-cut even further and only look for continuity in one spot. This Minolta Memory Maker 2000 is a cheap little plastic camera that my parents got me when I was maybe eight? I was young enough to go nuts with a blue sharpie and one point. Anyway, look inside its backwards film compartment (thats distressing) and youll find there are only two contacts pressing on the 3rd and 4th bit. If we go back to that chart I found, well see that those two patches are never connected together until we get to ISO 400, after which point they remain connected for 800, 1600, and 3200 speed film. So basically, if these contacts arent bridged, which would be the case for any film less than 400 speed, the camera treats whatever film you put in it as if it were maybe ISO 100. You probably wont notice at least with print film because of the exposure latitude. But if you load 400 or 800 speed film, well now it knows youve got some fast stuff in there! Itll have to, like, speed up the shutter a bit! I would guess it probably just treats everything fast like 800 speed, deliberately underexposing 400 speed film by a stop to get faster shutter speeds. And hey, as imprecise as this is, this did indeed work decently well. Its terrible plastic lens meant the images never looked that great but they were exposed correctly! If you should happen to find ISO 500, 1000, 2000, or 4000 film, though, theyll get wildly overexposed in this camera. I dont think Kodak intended the DX code to be used as this camera uses it. Im pretty sure this is what you might call a hack. As time went on, all of the film manufacturers got onboard with this encoding scheme. From Ilford, to Fuji, to Kodak, to others probably you could eventually expect any new film cassette to have these little boxes on them so your camera knew what it was. And now, this is becoming a bit of a problem for many cameras from the 80s and 90s. See, lots of cameras including this Yashica Samurai have no ability to set the ISO manually. When they were new, you could easily ask why would you want that? but now that film photography is the niche hobby it is, well there are plenty of films available which dont have DX encoding on their cassettes. The big guys like Kodak, Fuji, and Ilford are still making new film cassettes with full DX compatibility. And luckily the folks behind Cinestill are also sourcing proper cassettes. But other less expensive options like Freestyles Arista.edu line of films... Well, they're missing it. There are also an increasing number of sort-of indie films out there in small production runs which often re-use cassettes - which to be clear, is a really cool idea! But theyll be forced cover up the DX code on whatever cassettes they get their hands on because it will usually be wrong. We are also starting to see plastic film cassettes which cant rely on the cassette itself to be a common ground plane - wait, was Canon thinking that far ahead? Uh, there has also always been the option for frugal folks to bulk-roll their own film into re-usable cassettes like these. My Canon T90 has a button to select the ISO when it cant read the DX code, but the Yashica Samurai - well, if it doesnt see a code, itll just default to 100 speed. Thats not a bad strategy necessarily but its still really annoying that I cant use this camera unless the film I want to use has a DX cassette or just happens to be 100 speed. And Im lucky that I was able to find documentation on what this will do with a blank film cassette. Loads of cameras from the 80s and into the 2000s might not have that info available. Luckily, if you want to use such a camera, you can now get DX code stickers. Thats right, folks are making stickers now which are electrically conductive and in just the right spots to put onto film cassettes that are not DX-coded specifically for making your weird 80's and 90s cameras work with weird film. I think the best use for these is when youre bulk-rolling film, as that adds significant expense to a film cassette you wont reuse. But its nice to know that that option is out there regardless. Anyway, I think thats about it. Now look, I didnt whip out the slider for B-roll. I didnt do any research. I didnt even warm up the set before I started shooting this. This was a low-effort production, alright? I phoned it in. This was in my back pocket for years. Just one day I was gonna talk about this. Well here we are, the videos made, it didnt take that long, now go have your turkey or whatever. 10-bit smooth jazz was available in a buncha different varieties ah deh Well I screwed that up already! was designed so that the two patches closest to the spool post are always bare. Thats why they dont contay I did it again! Convey is the word I meant to say. [ guttural yell ] But, you could still screw this up and ruin a roll if you werent just a bit careful. [belches] I dont know why Canon oversimplified this. I said oversimplified? Are you kidding me? The word is overcomplicated you massive dingo. same stuff used in the movie business, spooled and encased in a simple round cassette [ deflates ] Pooooop Gotta be honest, after the effort I went through with the closed captioning data gag last time... yeah, well, you ain't getting much here. Just this. This is all you get. Good day.",
    "transcript_keywords": [
        "film",
        "camera",
        "ISO",
        "speed",
        "films",
        "film cassette",
        "speed film",
        "cameras",
        "film speed",
        "cassette",
        "cassettes",
        "bit",
        "Effort November",
        "roll",
        "Effort",
        "exposure",
        "Kodak",
        "Canon",
        "speeds",
        "bits"
    ],
    "transcript_entity_values": [
        "the 2000s",
        "90s",
        "two",
        "1983",
        "the first row",
        "five-bit",
        "2",
        "35mm",
        "135",
        "Kodak",
        "the 80s",
        "only four",
        "110",
        "four",
        "one",
        "Cinestill",
        "ISO 400",
        "5",
        "T90",
        "Fuji",
        "Pooooop",
        "Canon T90",
        "Samurai",
        "years",
        "Kodaks",
        "ISO 50",
        "less than 400",
        "the month of November",
        "8",
        "4000",
        "Digital",
        "ProImage",
        "Yashica",
        "ISO 160",
        "first",
        "4",
        "1600",
        "2000",
        "100",
        "16",
        "Cinestill",
        "three",
        "eight",
        "1987",
        "Ilford",
        "ISO",
        "ISO 800",
        "only two",
        "25",
        "a third",
        "10",
        "1960s",
        "1982",
        "126",
        "ISO 500,",
        "Good day",
        "DX",
        "100 and",
        "800",
        "third",
        "200",
        "SLR",
        "half",
        "1000",
        "My Canon T90",
        "400",
        "only 5",
        "November",
        "Stick",
        "the 80s and 90s",
        "50",
        "6",
        "ISO 100",
        "Secondly",
        "Ricoh FF-3 AF Super",
        "64",
        "Freestyles Arista.edu",
        "3200",
        "ISO 25 and",
        "Canon",
        "almost 50 years",
        "five",
        "4th",
        "3rd"
    ],
    "transcript_entity_types": [
        "DATE",
        "DATE",
        "CARDINAL",
        "DATE",
        "DATE",
        "QUANTITY",
        "CARDINAL",
        "QUANTITY",
        "CARDINAL",
        "ORG",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "LOC",
        "ORG",
        "CARDINAL",
        "ORG",
        "GPE",
        "PERSON",
        "PRODUCT",
        "ORG",
        "DATE",
        "NORP",
        "ORG",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORDINAL",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "GPE",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "DATE",
        "CARDINAL",
        "ORG",
        "DATE",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "PRODUCT",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "FAC",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORDINAL",
        "ORG",
        "DATE",
        "GPE",
        "CARDINAL",
        "ORG",
        "PRODUCT",
        "DATE",
        "CARDINAL",
        "ORDINAL",
        "ORDINAL"
    ],
    "vector": [
        -0.18234658241271973,
        -0.10405953973531723,
        -0.02823292277753353,
        -0.11828363686800003,
        -0.004773282911628485,
        -0.01338684931397438,
        0.08325336128473282,
        0.0504283681511879,
        -0.022073859348893166,
        -0.027341699227690697,
        -0.010522398166358471,
        0.03849906846880913,
        0.03213811293244362,
        0.029922397807240486,
        -0.054484762251377106,
        -0.004932457581162453,
        0.021037213504314423,
        -0.07104519754648209,
        -0.0018488062778487802,
        -0.041868939995765686,
        -0.02055954560637474,
        -0.11349420249462128,
        0.06324436515569687,
        -0.02085689827799797,
        0.059509675949811935,
        0.0159442275762558,
        -0.007437775377184153,
        -0.031624674797058105,
        -0.01050009299069643,
        -0.019161898642778397,
        -0.03928254544734955,
        0.1216939389705658,
        -0.04083827883005142,
        0.012642955407500267,
        0.014563181437551975,
        -0.008946222253143787,
        0.00956276711076498,
        0.010377293452620506,
        -0.08683275431394577,
        0.01483675092458725,
        -0.04101107642054558,
        -0.0012748491717502475,
        0.056176651269197464,
        0.02175995707511902,
        0.03247502073645592,
        -0.04208611324429512,
        0.041809991002082825,
        -0.10287056863307953,
        -0.05291702598333359,
        -0.02546234242618084,
        -0.14588654041290283,
        -0.02666008286178112,
        0.08539532870054245,
        0.01848766580224037,
        -0.005263238679617643,
        -0.07238959521055222,
        0.05081968009471893,
        -0.031255535781383514,
        0.016513485461473465,
        -0.020306535065174103,
        0.07500306516885757,
        -0.02996857464313507,
        -0.0728738009929657,
        0.035172928124666214,
        0.07350970804691315,
        0.09547729045152664,
        -0.010072925128042698,
        0.06458117067813873,
        0.018909744918346405,
        -0.09554459154605865,
        -0.10270329564809799,
        0.047926027327775955,
        -0.00262651639059186,
        0.004096466116607189,
        0.010431196540594101,
        -0.015130462124943733,
        0.04987163469195366,
        -0.02276208996772766,
        0.03405844047665596,
        -0.0988508090376854,
        0.06578830629587173,
        -0.05744432657957077,
        -0.04649730771780014,
        -0.020208552479743958,
        0.007912831380963326,
        0.04327115789055824,
        -0.021137157455086708,
        0.037485625594854355,
        0.0021021871361881495,
        0.04067428037524223,
        -0.09170516580343246,
        0.03469231724739075,
        0.012211058288812637,
        -0.047472503036260605,
        -0.04045141115784645,
        -0.03459097072482109,
        -0.03613165393471718,
        -0.07674404233694077,
        -0.004478264134377241,
        0.09293001145124435,
        -0.010544187389314175,
        -0.028679706156253815,
        -0.022746801376342773,
        -0.0747813805937767,
        -0.012854823842644691,
        -0.0227410476654768,
        0.05823623016476631,
        0.03811609745025635,
        0.0888124480843544,
        0.006201270967721939,
        -0.05880839005112648,
        0.10788033902645111,
        0.0012510073138400912,
        -0.05444526672363281,
        0.031244605779647827,
        0.024259954690933228,
        -0.041599173098802567,
        0.0726684033870697,
        0.08292550593614578,
        -0.006199093069881201,
        0.05721551179885864,
        -0.022697968408465385,
        -0.08192944526672363,
        -0.023907694965600967,
        0.07672813534736633,
        -0.030507149174809456,
        -0.03536742180585861,
        8.333615772276759e-33,
        0.009484609588980675,
        0.07446389645338058,
        0.06601926684379578,
        0.07250355184078217,
        0.07698430120944977,
        -0.010587146505713463,
        -0.04235756769776344,
        0.02331204153597355,
        -0.12885698676109314,
        0.005659461487084627,
        0.0007269726484082639,
        0.015948908403515816,
        -0.030455779284238815,
        0.03324025496840477,
        -0.05261564627289772,
        -0.07176266610622406,
        -0.07828182727098465,
        -0.029540421441197395,
        -0.010781808756291866,
        -0.015428494662046432,
        -0.0528358519077301,
        -0.00022324244491755962,
        0.008285517804324627,
        0.026300251483917236,
        0.012556206434965134,
        0.03727611526846886,
        -0.023632774129509926,
        0.061828095465898514,
        0.11527304351329803,
        0.035552069544792175,
        -0.05332367122173309,
        0.09219436347484589,
        -0.011505640111863613,
        -0.05192018300294876,
        0.07336939126253128,
        -0.02665894478559494,
        -0.06111439689993858,
        -0.1369691789150238,
        0.01657794788479805,
        0.08379154652357101,
        0.006057509686797857,
        0.05462126433849335,
        -0.0977482795715332,
        0.004401888698339462,
        -0.0297841876745224,
        -0.017900725826621056,
        0.059048376977443695,
        0.03742596134543419,
        -0.021849090233445168,
        0.045208778232336044,
        -0.043162230402231216,
        0.03337503597140312,
        -0.04724666103720665,
        -0.12072973698377609,
        0.011693978682160378,
        0.026152364909648895,
        -0.01613757200539112,
        -0.02554938942193985,
        0.07702009379863739,
        0.024447381496429443,
        0.019645724445581436,
        0.053096674382686615,
        -0.04073240980505943,
        -0.019454963505268097,
        -0.07671163231134415,
        0.05897318571805954,
        0.01145817618817091,
        0.020259080454707146,
        0.0291245486587286,
        0.08193021267652512,
        -0.07840123772621155,
        0.012718685902655125,
        -0.039870310574769974,
        -0.08468837291002274,
        0.06198109686374664,
        0.07610221952199936,
        -0.06322920322418213,
        0.006022381596267223,
        -0.005824217572808266,
        0.014817389659583569,
        -0.03956858813762665,
        -0.030670909211039543,
        0.05003517493605614,
        0.025273321196436882,
        0.02485192008316517,
        -0.03193249553442001,
        -0.03078475594520569,
        -0.04375934973359108,
        -0.04211001843214035,
        0.02204275131225586,
        -0.004494571126997471,
        -0.06617654114961624,
        0.08517041802406311,
        0.009343170560896397,
        -0.02255862019956112,
        -7.212391056896059e-33,
        0.01391963753849268,
        0.004933739546686411,
        -0.07474873214960098,
        -0.04379909113049507,
        0.05704101547598839,
        -0.06276212632656097,
        0.04971696436405182,
        0.001395892701111734,
        0.12583795189857483,
        -7.023430953267962e-05,
        0.11227577179670334,
        -0.014613325707614422,
        -0.06389886140823364,
        -0.027108212932944298,
        -0.011698147282004356,
        -0.1008279100060463,
        -0.0142214335501194,
        -0.056318290531635284,
        0.013092763721942902,
        -0.02843603491783142,
        0.10258687287569046,
        -0.0026520644314587116,
        -0.0428696908056736,
        0.03881603851914406,
        0.015617617405951023,
        0.06691189110279083,
        -0.01441088505089283,
        0.08469443023204803,
        0.0405118353664875,
        0.001607751240953803,
        0.014337455853819847,
        -0.0627480298280716,
        -0.013502031564712524,
        0.015619421377778053,
        -0.010874416679143906,
        0.10555795580148697,
        0.12227693945169449,
        -0.0049050673842430115,
        -0.06535449624061584,
        -0.04065321385860443,
        0.020279470831155777,
        0.02538740448653698,
        -0.05255753919482231,
        0.004398673307150602,
        -0.03475993871688843,
        0.01945074461400509,
        -0.07090245187282562,
        0.000923125830013305,
        -0.10479474812746048,
        -0.01598571427166462,
        -0.012571495026350021,
        0.019501475617289543,
        -0.008396400138735771,
        -0.06437665969133377,
        0.01299696508795023,
        0.06615909934043884,
        0.040601953864097595,
        0.02898317761719227,
        0.08015355467796326,
        0.04581346735358238,
        0.015105113387107849,
        -0.03909582272171974,
        0.027794882655143738,
        -0.054666269570589066,
        0.02089599333703518,
        -0.02952011115849018,
        0.02426760643720627,
        0.08728013932704926,
        -0.0597362220287323,
        0.02266841009259224,
        0.036765098571777344,
        0.02327900193631649,
        -0.04205299913883209,
        -0.06061125546693802,
        0.024729007855057716,
        -0.009785988368093967,
        0.012925969436764717,
        -0.0312630757689476,
        -0.039909087121486664,
        0.022248120978474617,
        0.0129081504419446,
        -0.03733610361814499,
        0.05320291966199875,
        0.0466577522456646,
        0.10297875106334686,
        0.11619479209184647,
        0.02332257851958275,
        0.005331630818545818,
        -0.02070537954568863,
        0.02531314827501774,
        -0.029178760945796967,
        0.008712265640497208,
        0.058436084538698196,
        0.028506720438599586,
        0.0028548308182507753,
        -7.663975054583716e-08,
        -0.04743330553174019,
        0.0441826730966568,
        -0.02548561431467533,
        -0.06651738286018372,
        0.024506021291017532,
        -0.08146633207798004,
        0.02323422022163868,
        0.04016422480344772,
        -0.019246788695454597,
        -0.030894776806235313,
        0.005414813756942749,
        -0.002521868795156479,
        0.044778451323509216,
        0.04126102477312088,
        0.07090426981449127,
        0.05539863556623459,
        -0.056097567081451416,
        -0.006423560436815023,
        -0.0618126280605793,
        -0.015809915959835052,
        0.02488555572926998,
        -0.01166832260787487,
        0.06960713118314743,
        0.00492488220334053,
        -0.026838598772883415,
        0.02707722783088684,
        0.013888304121792316,
        0.004436349496245384,
        0.03704449161887169,
        -0.013410352170467377,
        -0.0974326804280281,
        0.009320642799139023,
        0.016188934445381165,
        -0.0269143208861351,
        0.020082971081137657,
        -0.040734995156526566,
        -0.04769398644566536,
        -0.029878783971071243,
        0.053513579070568085,
        0.07715737819671631,
        -0.0032390127889811993,
        0.005788253154605627,
        0.010786863043904305,
        0.08162339776754379,
        0.06582733243703842,
        0.07064450532197952,
        0.027470804750919342,
        -0.06333472579717636,
        -0.02382957935333252,
        -0.05497457832098007,
        0.010824734345078468,
        0.020583104342222214,
        -0.08434236794710159,
        0.042173635214567184,
        0.06153704226016998,
        0.0060255215503275394,
        0.048517633229494095,
        0.01192688662558794,
        -0.04379630461335182,
        0.03673513978719711,
        0.028048081323504448,
        0.03957610949873924,
        0.008565579541027546,
        -0.010709946043789387
    ]
}