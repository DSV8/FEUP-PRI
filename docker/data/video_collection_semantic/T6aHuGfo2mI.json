{
    "id": "T6aHuGfo2mI",
    "title": "Free CCNP 350-401 ENCOR Complete Course: 6.0 Overlay SDN and SD-Access networks",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2020-04-29T18:21:24Z",
    "video_url": "https://www.youtube.com/watch?v=T6aHuGfo2mI",
    "category": "Science & Technology",
    "tags": [
        "ccnp",
        "encor",
        "350-401",
        "sd-access",
        "sdaccess",
        "ccnp encor",
        "ccnp enterprise",
        "ccnp training",
        "new ccnp",
        "ccnp study",
        "sdn",
        "overlays",
        "overlay network",
        "nsx",
        "esxi",
        "cisco certifications",
        "cisco training",
        "cisco",
        "cisco certified network professional",
        "ccnp certification",
        "encor 350-401",
        "ccnp automation",
        "ccie",
        "ccie encor",
        "cisco ccnp exam",
        "ccie enterprise",
        "cisco certification 2020",
        "cisco ccnp",
        "ccnp routing",
        "cisco encor training",
        "cisco encor exam",
        "2020 ccnp",
        "ccnp review",
        "ccna",
        "cisco ccna",
        "ccna study"
    ],
    "views": 75564,
    "likes": 1858,
    "comments_count": 268,
    "description": "This is a FREE complete CCNP 350-401 ENCOR Course. In this video we discuss overlay and underlay SDN networks and introduce SD-Access networks.   I'll discuss SD-Access in a lot more detail in subsequent videos.  I will be covering all the topics in the Cisco CCNP Encor exam. I want to make this content practical and it will include a lots of labs and demonstrations to help you better understand topics on the exam.  CCNP ENCOR playlist:   Menu: Overview: 0:00 Overlays and Underlays: 0:48 Networking Overlays: 3:03 SD-Acces: 12:00  Videos mentioned: Previous video:  CCNP ENCOR Exam experience:   ====================== Special Offers: ====================== Cisco Press: Up to 50% discount Save every day on Cisco Press learning products! Use discount code BOMBAL during checkout to save 35% on print books (plus free shipping in the U.S.), 45% on eBooks, and 50% on video courses and simulator software. Offer expires December 31, 2020. Shop now.  Link: bit.ly/ciscopress50  Boson software: 15% discount Link: bit.ly/boson15 Code: DBAF15P  GNS3 Academy: CCNA ($10): bit.ly/gns3ccna10 Wireshark ($10): bit.ly/gns3wireshark  DavidBombal.com CCNA ($10):  Wireshark ($9): bit.ly/wireshark9   CCNP CCNP ENCOR CCNP 350-401 CCNP Enterprise ccnp training CCNP Security CCNP Data Center CCNP Service Provider CCNP Collaboration Cisco Certified Devnet Professional Cisco Certified Network Professional   Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!    #ccnp #encor #sdaccess",
    "description_links": [
        "https://bit.ly/freeccnp",
        "https://youtu.be/_Z_OHL8lBqQ",
        "https://youtu.be/Ypk77FytrWw",
        "http://bit.ly/yt999ccna"
    ],
    "transcript": "- In a previous video, which I've linked here and below, I explained the concept of a Software-Defined Network where we have a controller that's managing network devices. The example that I used was an OpenFlow based network. That was one of the original or first Software Defined networks in recent times. There was a lot of hype about OpenFlow in the past, but never really took off. People today are not really using OpenFlow except in very specific niche environments. Another version of software defined networking is what's called an overlay network, where we overlay a network on top of an underlay network, and in this video, I'm gonna discuss that in quite a bit of detail. (upbeat techno music) So overlay networks go back a long way in time. So in the old days, we had a traditional telephone network. The intelligence was in the telephone network. So the public switched telephone network that AT&T, would have bought or British Telecom would have bought here in the UK. The phones were dumb. They didn't even have dial tone without the network giving dial tone to the phone, so the phones were essentially stupid. But then that got revolutionized with voice over IP. Then suddenly, we were using the internet as a dumb core, and I shouldn't say it's totally dumb but from a telephone switching point of view, it was dumb. We were basically setting up calls across the internet and the devices in the core internet, didn't understand what the calls were doing. They were just routing IP packets. So I phoned you using Skype or WhatsApp today. I phone you the internet doesn't understand what we're doing I mean, WhatsApp calls are encrypted. So we're setting up a tunnel across the dumb central internet. So the intelligence is now in the endpoints rather than in the core network. So notice the difference. In the old days intelligence was in the network, end devices were dumb. That's switch round now, core network is just high speed forwarding, that's what the internet should be doing, high speed switching routing of traffic, intelligence is in the edge not in the core. So that was a whole industry that got revolutionized. The PSTN public switched telephone network was intelligent, endpoints were dumb. Intelligence was moved to the edge, to the endpoints core became dumb. All it was doing is high speed forwarding of traffic from A to B. So if I made a call from the UK to the U.S., the core internet routers are just trying to move the traffic as quickly as possible from the UK to the U.S. They don't understand the call setup process, I mean, WhatsApp, again, is setting up encrypted calls. The telephone system in WhatsApp or in Skype is out of the control of the core internet. Okay, so that's great, but in networking for many years, enterprise networking, it didn't work that way. We would have, say, Cisco IP phones on a network, and they would mark their traffic as important. But then the network had the intelligence of saying, okay, this traffic is more important than that traffic. And then we try to implement all kinds of clever stuff on the network, so the applications were still done, but the network was intelligent. Notice where I'm going with this, network was intelligent, applications were dumb from the point of view that a PC just sent traffic to it's default gateway, and then the network took care of things, intelligence in the network endpoints were dumb. VMware, and others changed this entirely. So VMware purchased a company called Nicira. Nicira almost got bought by Cisco. But in a data center, when we using ESXi as an example from VMware, they said, okay, we don't need an intelligent network, we will put the intelligence in the ESXi servers, in the servers because the servers have visibility of the applications running on them. The server ESXi server has visibility of the VMs, and the applications running on the server. The network can't see the VMs, like the ESXi server can. So rather than having an intelligent network, we make the network dumb, just like the internet. It doesn't have visibility of the applications and the VMs on the ESXi server. And what we do is we set up tunnels across the core network. So you could have and it doesn't matter, it could be Cisco routers, could be HP switches, it doesn't matter. Your core network is simply there to route as quickly as possible from one ESXi server to another ESXi server. And we build what they call here an overlay network. So we have our IP network, traditional, say, IP version four, and then we build a whole new network on top of that called an overlay network. This underlay network, the physical network, doesn't understand what's going on because all it sees is tunnels. Think of WhatsApp, think of IPsec tunnels that you use across the internet. You can have the internet, and you build encrypted tunnels across the internet that connect various sites of your company. So your company may have sites in the US and the UK, in Canada, in Japan, whatever. You set up these VPNs across the internet, you would be very upset if the internet routers could actually see inside your IPsec tunnel. The whole idea of encryption is to hide the internal network information from the core internet network. Same principle here. Now we're not using typically encryption in a data center that use rather than IPsec tunnels or GRE tunnels they use VXLAN tunnels. The whole idea of a VXLAN is, think of a restriction in traditional switching, we have 802.1Q, it's restricted to just over 4000 VLANs. You can only have 4000 VLANs in a network. Now, if you running big ESXi servers, and you have lots of customers, and then you have lots of departments for lots of customers, and they wanna whole bunch of VLANs, you run out of 4000 VLANs very, very quickly. So VXLAN supports 16 million VLANs, and I say VLANs because that concept no longer exists, 16 million subnets, rather than 4000 subnets in 802.1Q. So in a traditional switching network, we would create up to 4000 VLANs. That's how we would implement security let's say by restricting who can talk to who based on VLANs or subnets, but in a traditional switched environment we kinda limited that doesn't scale to a data center. So in a data center, they wanna use this whole concept and let me go over it again just to make sure that it's clear. We have a core network, could be Cisco routers, Cisco switches. Now notice the politics here, because VMware and Nicira basically changed the game. The core network now doesn't have to be fancy, because it's gonna be like the internet. I just need the core routers to route traffic from one ESXi server, so one VMware server to another VMware server. And just assume we've got a whole bunch of VMware servers, these VMware servers will set up tunnels to each other automatically. They're not encrypted, but it's the same concept, they will set up a tunnel from one ESXi server to another ESXi server, and they will use a totally different subnet, totally different network. Just like you, if you're setting up a VPN across the internet, we'll use a different subnet, different IP addressing to the core internet. You can route RFC 1918 addresses across the internet agreed, if you use a tunnel. So the outside IP address would be a public IP address when you're routing from one router to another using an IPsec tunnel across the internet, but the inside IP addresses could be RFC 1918 addresses. The core internet doesn't see that data because it's encrypted. So the whole idea in a data center is the core network could be very simple, basic subnetting. We don't need VLANs we can run routing everywhere. So, this solved another problem because let's say we wanna have a VM on one ESXi server and another VM on another ESXi server but we want them in the same VLAN, same VLAN, same broadcast domain, they must be layer two connection between these two Vms, that are in different servers. Now you might say why would you wanna do that. Now think about the vMotion. The vMotion is something that allows you to move a VM, automatically if you want from one physical ESXi server to another ESXi server. So when the load on the server gets too high, it can automatically migrate the VM to another ESXi server to use resources on this ESXi server. But the problem is, you've now moved the VM, from one server to another server, but you wanna keep them in the same VLAN. So what happens if I move it to that server over there using vMotion across a network? Now, traditionally, we would have to run layer two across this because that VM, and this VM are on the same subnet, so we need to have a layer two connection across. But with this overlay network and this concept of doing away with a clever core, the core network can run routing protocols. So we don't need spanning tree we just run OSPF everywhere as an example. So it's a layer three network. But this VM running on this ESXi server and this VM running on this ESXi server can be in the same subnet because they are connected across a tunnel. So this PC could have an IP address of 10.1.1.2, this PC could have an IP address of 10.1.1.1/24 let's say when a broadcast is sent by this PC, it goes into the tunnel sent across the tunnel to that PC on the other side. Now it gets complicated with broadcasts and multicast. But just think of the concept that these two devices are on the same VLAN when in actual fact they're not the same VLAN because this infrastructure is routed. So we are basically pulling a cable logically, from that VM on that ESXi server to this VM on this ESXi server. So logically, you've got an ethernet cable from one side to the other, but it's just a tunnel created using VXLAN. I went into a lot of detail here, let me just summarize. Overlay network is a network that's built on top of an underlay network, underlay network are physical devices, which could be Cisco routers and switches. ESXi from VMware will build, and it's actually NSX, it's not ESXi, it's NSX is the product that does this. NSX will build, a whole new network, an overlay network across the underlay network. This underlay network doesn't understand what's going on with this overlay network. As an analogy, again, think of this underlay as the internet and the overlay network as your VPN tunnels going across the internet. The core routers don't have visibility of the traffic that you are encrypting through your IPsec tunnels. The core, Cisco routers and switches in a data center don't have visibility of the VM traffic going through a VXLAN tunnel, all they see is this ESXi server wants to talk to this ESXi server, or, this ESXi server wants to talk to that ESXi server, they don't understand that it's actually a VM running within this ESXi server that's talking to VM within that ESXi server. So we basically tunneling traffic across. SDN has been very popular in the data center, but there haven't been many offerings for the enterprise. So SD-Access is a product that revolutionizes the way that we configure and manage enterprise networks, specifically campuses. So SD-Access is used in the campus. SD-WAN can be used in the WAN. Notice the term Software Defined something. I wanna introduce these concepts now in the automation section, because notice we are automating networks using a controller or using an application. Rather than manually configuring network through the CLI, we are automating the networks through the use of a controller. Software-Defined Access, now just Software Defined, could be Software Defined coffee. I mean, there's so many terms with this word of software defined, networking got abused. We had software defined networking, there was OpenFlow, then we had software defined networking that was using API's, we had Software Defined Networking, there was overlays. So, we spoke about overlays and underlays already, basically became Software Defined whatever you like. But Software Defined Access or SDA is Cisco's solution, of changing the way a enterprise network works. So traditionally in an enterprise network, we would have spanning tree, that causes a whole bunch of issues because we have to match up you know forwarding of ports to HSRP default gateways, causes a whole lot of issues, so we wanna do away with spanning tree and what we do is we just run routing protocols everywhere. So the default gateway of your PCs will be the local access switch. So the switch on the edge, the switch that they connect to rather than a core switch or a distribution switch. We run OSPF everywhere or a routing protocol everywhere so we do away with spanning tree, we do away with port blocking that kind of stuff. Basically, the idea is the network gets managed as a fabric. So we have all these routers and switches that are controlled by a controller, and then similar to NSX from VMware, what we do is we building tunnels automatically, VXLAN tunnels once again, where we build an overlay across the underlay network. So the core underlay network can be fairly basic. Rather than configuring a whole bunch of access lists on the core devices, we can do everything as a policy on the SDA server and then apply a policy on the network devices, and DNA center will basically build stuff automatically, So it will build the VXLAN tunnels, it will apply the policies. So we have this concept once again of intent based networking, and intent is I wanna do something, but I don't wanna have to explicitly write everything down to make that happen. So as an example, I wanna stop PCA talking to PCB. In a traditional environment, you have to create access lists that stop those devices from talking to each other, but within an intent based scenario, and in some of the other controller based implementations, I would basically say, okay, this guy can't talk to this guy, put a cross there. So that's all done through a GUI as an example. And then that applies a policy to the network that basically stops that. So you as a network engineer don't have to go and configure access lists manually, your intent is stop this guy talking to this guy, and the network just makes that happen automagically, which is quite scary in some ways, because what happens if it goes wrong? So the whole idea of this SDN stuff is fantastic, and I don't wanna blow it out of the water straight away. But just be aware that you should kind of understand what's going on under the hood because what happens if something goes wrong? But the principle is, we have an underlay network, then we put VXLAN tunnels over it, which allows us to apply policies on the overlay network rather than on the underlay network. So we can stop this guy talking to this guy much more easily using these tunnels than to try and have a single access list on an interface of a router that blocks people across the entire network, much better way of doing things. It's basically the way it's going, so we have a controller that manages a whole bunch of devices in the enterprise. Now, just stepping back a second, sorry to jump around. Software Defined Networking was more for the data center. So it was NSX was a fantastic success in the data center. Cisco have ACI, also a data center product, but what about enterprises? So SDA is an enterprise solution, where we take Software Defined principles and apply it to an enterprise. And we applying policies on that network rather than in a data center. So basically, simple things like okay, let's get rid of spanning tree, so we run OSPF or a routing protocol everywhere. Everything's layer three, rather than layer two. But, you know, how do we get this device to talk to this device? We can apply a policy through a GUI, or a management station, or a controller, if you wanna use the right term, that applies the policy onto the network without you having to manually configure a whole bunch of stuff. The idea is use is this term of abstraction. Abstraction is used everywhere. As an example, if I wanna write a piece of Python code, I don't have to know how to make that do something on a hard drive. I'm an abstracted from the low level programming, the operating system abstracts me from the hardware, operating system abstracts me from network cables, stuff like that. I'm programming in a high level programming language, Python that goes all the way down through the stack and actually make something happen on the network. So I'm extracted from assembly language as an example, I'm abstracted from low level stuff. I use my brain for doing high level stuff rather than low level stuff. So very real world example, pilots. A pilot today doesn't fly from the UK to the U.S. manually the whole way. What do they use, they use auto pilot. So the idea is, auto pilot allows the pilot to take care of high level tasks, while the low level stuff is taken care of using autopilot. Now the airplane has all of these sensors that give information about altitude stuff like that, and then the plane can guide the pilot, but autopilot can cause problems where the pilot tries to manage the network, or should I say the plane through autopilot, by adjusting various high level parameters rather than just grabbing the plane and flying it. And there was a really interesting video where they were talking about this issue where automation has actually caused crashes because pilots no longer fly the plane like physically fly it, they try to adjust the planes flying through autopilot so try and feed information to autopilot that then flies the plane and adjusts the plane. But if you got a plane flying at you, you as a pilot you'd grab the aeroplane and fly it out of the way rather than trying to adjust autopilot. And I think that's the same thing that we as network engineers need to be careful of, is don't rely on the autopilot or the cleverness of all of these applications. When the network is burning, or there's a fire, you need to jump in and fix the problems. So automation has its place. But it's still important to understand how networks work, because automation will allow you to break a network, very, very quickly if you don't understand what your automation is doing. I mean, if a programmer just writes a script that sends a whole bunch of BPDUs into a network running spanning tree, it could mess up your whole network. So you need to understand what your program is doing or what these applications are doing. So there's huge advantages to abstraction, huge advantages to automation, but you still need to understand networking. You still a network person, you still a network engineer, you still need to understand protocols like spanning tree OSPF, et cetera. But I think for me, the programming side is very exciting because Cisco now have this DevNet track. So you have this world in front of you which didn't exist. You've got this world now where you can go traditional networking, with a bit of programming, or you can go programming with a bit of networking. So I think if you starting in your career you have two wonderful choices and I mean, you just got to decide what you enjoy, do you enjoy programming with a touch of networking, or do you enjoy networking with a touch of programming? I think those are gonna actually become closer and closer in future. So five 10 years from today, the line between networking and programming will just draw closer and closer. Networking is changing and I've been saying this for many years. I mean, now we going more to the cloud, so Cloud stuff is becoming more important. But don't think that if you put it in the cloud, it's gonna solve your network problems. It's still a network, you still have to manage the network cloud as in your network. I mean, if you put a VM in the cloud, it's cool, it's just a VM, but what happens if you have virtual machines in Asia, and in America and in Europe? You suddenly you start working with load balancers, you start working with firewalls, you start working with access control lists, you start working with VLANs, not call that but you start working with all the traditional networking stuff. So just because it's in the cloud doesn't mean that you can ignore networking. Still gonna be a lot of work for network engineers. It's just the roles may change rather than typing on the CLI, you might be working in a controller, or in the cloud but you still need to understand networking principles. Okay, so that was quite a long ramble, I hope, that kind of discussion was valuable to add to the course. I'm gonna show you some more practical stuff now, in the rest of the course, but hopefully that gives you a good idea of what's important for the exam and kind of sets the 10,000 foot view, an overview of of programming and network automation. You don't have to learn the details of VMware implementation for the Encor exam, but I really think it helps knowing a bit of history and seeing where this concept of software defined networking can be applied in multiple domains. The point is, no longer today are we simply gonna configure networks through the CLI, we're going to use a controller, to give us additional benefits and software defined networks. (upbeat techno music)",
    "transcript_keywords": [
        "Network",
        "ESXi server",
        "Software Defined",
        "software defined networking",
        "server",
        "ESXi",
        "core network",
        "Software Defined networks",
        "underlay network",
        "overlay network",
        "core",
        "internet",
        "Defined",
        "Software",
        "networking",
        "defined networking",
        "tunnels",
        "networks",
        "Cisco",
        "core internet"
    ],
    "transcript_entity_values": [
        "UK",
        "America",
        "Asia",
        "three",
        "4000",
        "many years",
        "AT&T",
        "VXLAN",
        "Cisco IP",
        "Cisco",
        "PCA",
        "just over 4000",
        "API",
        "VPN",
        "four",
        "two",
        "10,000 foot",
        "Canada",
        "GRE",
        "Europe",
        "802.1Q.",
        "SD-Access",
        "Vms",
        "Software Defined Networking",
        "second",
        "1918",
        "ACI",
        "Nicira",
        "today",
        "Skype",
        "Japan",
        "NSX",
        "IP",
        "SDA",
        "VLAN",
        "PCB",
        "Python",
        "HP",
        "IPsec",
        "five 10 years",
        "one",
        "Software",
        "OSPF",
        "HSRP",
        "the old days",
        "Encor",
        "VMware",
        "vMotion",
        "GUI",
        "U.S.",
        "British Telecom",
        "16 million",
        "SDN",
        "Python",
        "first Software",
        "VMs",
        "VM",
        "PSTN",
        "CLI",
        "US",
        "NSX",
        "WhatsApp"
    ],
    "transcript_entity_types": [
        "GPE",
        "GPE",
        "LOC",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "PRODUCT",
        "CARDINAL",
        "CARDINAL",
        "QUANTITY",
        "GPE",
        "ORG",
        "LOC",
        "DATE",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORDINAL",
        "DATE",
        "ORG",
        "GPE",
        "DATE",
        "ORG",
        "GPE",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "DATE",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "DATE",
        "PERSON",
        "ORG",
        "ORG",
        "ORG",
        "GPE",
        "ORG",
        "CARDINAL",
        "ORG",
        "WORK_OF_ART",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORG",
        "ORG",
        "GPE",
        "PRODUCT",
        "ORG"
    ],
    "vector": [
        -0.05517754331231117,
        -0.0051802885718643665,
        -0.021386360749602318,
        -0.007675543427467346,
        0.039377111941576004,
        0.03667455539107323,
        0.0006970252143219113,
        0.03739022836089134,
        -0.09709937870502472,
        0.009140361100435257,
        0.048529427498579025,
        -0.00038205651799216866,
        -0.07558024674654007,
        -0.022614767774939537,
        0.03408047929406166,
        0.004110618028789759,
        0.04410354420542717,
        -0.03405889496207237,
        0.02461065724492073,
        -0.02676071599125862,
        -0.007968585006892681,
        -0.08393704146146774,
        0.041225139051675797,
        0.008599168621003628,
        -0.03030574694275856,
        0.031269099563360214,
        0.018618935719132423,
        0.012708812020719051,
        0.024095667526125908,
        -0.0516650415956974,
        -0.02974766492843628,
        0.050991762429475784,
        0.07028643786907196,
        0.03598632663488388,
        0.033670537173748016,
        -0.07315997779369354,
        0.006661655846983194,
        -0.020333971828222275,
        -0.043513424694538116,
        -0.03209782764315605,
        -0.06766532361507416,
        0.021387437358498573,
        -0.006580381654202938,
        0.03216087445616722,
        0.06179370731115341,
        -0.07068920135498047,
        -0.05303994193673134,
        -0.08017782866954803,
        0.05860424414277077,
        -0.00931050255894661,
        -0.01192083116620779,
        -0.018884481862187386,
        0.01825595088303089,
        -0.062312640249729156,
        -0.007581118028610945,
        0.021236184984445572,
        -0.000557979685254395,
        -0.030223583802580833,
        -0.003375583328306675,
        0.014802712015807629,
        -0.02979752980172634,
        -0.09093812853097916,
        -0.030286554247140884,
        0.04441987723112106,
        0.010958286002278328,
        0.047404944896698,
        -0.017192596569657326,
        0.10875550657510757,
        0.018373560160398483,
        -0.041060615330934525,
        -0.02574067749083042,
        0.04337577894330025,
        0.005348162725567818,
        0.06222841143608093,
        0.021179277449846268,
        0.048120684921741486,
        0.012764251790940762,
        -0.053591229021549225,
        -0.0003423704765737057,
        -0.09726286679506302,
        0.0780237540602684,
        0.05321924388408661,
        -0.04525244981050491,
        -0.06153833866119385,
        0.09233289957046509,
        -0.003261574311181903,
        -0.0036608967930078506,
        0.01909862458705902,
        -0.02883058413863182,
        -0.0228473711758852,
        0.03413594141602516,
        0.03987450152635574,
        -0.07249226421117783,
        0.010044144466519356,
        0.03449341654777527,
        -0.007057247217744589,
        -0.021934501826763153,
        -0.08401623368263245,
        -0.052151963114738464,
        0.04572773352265358,
        0.037056319415569305,
        0.012778066098690033,
        -0.03893088176846504,
        -0.06950844079256058,
        -0.09157730638980865,
        0.002130718668922782,
        0.12261959910392761,
        0.05412499979138374,
        0.05042661353945732,
        0.01662793941795826,
        -0.03795879706740379,
        0.045273590832948685,
        -0.02516585774719715,
        -0.08252615481615067,
        0.04344717040657997,
        0.06110934913158417,
        0.005933471955358982,
        0.08660032600164413,
        0.08023782819509506,
        0.00097726343665272,
        -0.04950540512800217,
        0.032821692526340485,
        -0.06647656857967377,
        -0.0550038106739521,
        -0.0580124668776989,
        -0.10460454970598221,
        0.05699940025806427,
        8.014989212278747e-33,
        -0.016089584678411484,
        0.0006216630572453141,
        -0.11909694969654083,
        0.0498078279197216,
        0.06132962554693222,
        -0.008030655793845654,
        0.08940576761960983,
        0.016317255795001984,
        -0.12811973690986633,
        0.001981819747015834,
        0.024327948689460754,
        0.022507941350340843,
        -0.05077908933162689,
        0.00696819182485342,
        -0.01560136303305626,
        -0.09069600701332092,
        -0.08418134599924088,
        0.008846408687531948,
        0.03130904585123062,
        0.052668604999780655,
        0.006303106434643269,
        -0.07060632854700089,
        0.008223055861890316,
        -0.010093056596815586,
        0.03598839417099953,
        0.0292679313570261,
        0.03990854695439339,
        -0.03034592606127262,
        0.1017703041434288,
        0.02013404853641987,
        -0.06746314465999603,
        -0.022088870406150818,
        -0.0549333319067955,
        -0.016360893845558167,
        0.08188498765230179,
        0.017926475033164024,
        -0.004636963363736868,
        -0.012904721312224865,
        -0.01912112720310688,
        -0.05585535243153572,
        -0.08042111247777939,
        0.028531422838568687,
        -0.0746525377035141,
        -0.05443158373236656,
        -0.0813802033662796,
        -0.023796631023287773,
        0.030115997418761253,
        0.03112405352294445,
        0.068300262093544,
        -0.004193468950688839,
        -0.029634078964591026,
        0.01740526221692562,
        -0.09303425997495651,
        -0.12776358425617218,
        0.03727466240525246,
        -0.09026583284139633,
        0.049762334674596786,
        -0.005864769220352173,
        0.01599319651722908,
        0.00819485355168581,
        0.024033570662140846,
        0.026052361354231834,
        -0.08117208629846573,
        -0.07330257445573807,
        -0.07953818887472153,
        0.05132552981376648,
        -0.15088213980197906,
        -0.08699548989534378,
        0.10597506910562515,
        -0.07202721387147903,
        -0.050046298652887344,
        -0.04040783643722534,
        0.011383691802620888,
        0.0026988033205270767,
        0.026668930426239967,
        0.042845718562603,
        -0.09689802676439285,
        0.005394136533141136,
        -0.01077188178896904,
        0.042108479887247086,
        -0.07364698499441147,
        -0.0028548783157020807,
        0.021494897082448006,
        0.031480010598897934,
        -0.01620319113135338,
        -0.010074031539261341,
        0.03972763940691948,
        -0.0749228298664093,
        -0.06709177047014236,
        0.018913548439741135,
        -0.019419865682721138,
        -0.029422588646411896,
        0.09849248826503754,
        0.034957405179739,
        0.025665415450930595,
        -8.66304292130692e-33,
        0.01835290715098381,
        0.0724736899137497,
        -0.07878223806619644,
        -0.04800361394882202,
        0.0034371346700936556,
        -0.0013985902769491076,
        0.029140405356884003,
        0.02537163905799389,
        0.0675671324133873,
        0.008224429562687874,
        0.04261397570371628,
        -0.02862788923084736,
        -0.011442570947110653,
        -0.026749055832624435,
        0.024855976924300194,
        -0.08769198507070541,
        -0.07236944884061813,
        0.030844997614622116,
        -0.0013653449714183807,
        0.000551116478163749,
        0.019013646990060806,
        0.14029362797737122,
        -0.04416834935545921,
        -0.005578945856541395,
        0.005742788780480623,
        0.08967947214841843,
        0.0059371707029640675,
        0.03828622028231621,
        0.07987534254789352,
        -0.02657589502632618,
        -0.043214719742536545,
        -0.030524035915732384,
        -0.05811813473701477,
        0.08390884101390839,
        0.019501203671097755,
        0.07738225162029266,
        0.09748049080371857,
        0.018802247941493988,
        -0.09764421731233597,
        0.014297259040176868,
        0.03843439742922783,
        0.00205723918043077,
        -0.06612658500671387,
        -0.005600808188319206,
        0.011862083338201046,
        0.0027843997813761234,
        0.028834372758865356,
        0.020386749878525734,
        -0.07744081318378448,
        0.03608322888612747,
        0.002765860641375184,
        0.012860608287155628,
        -0.0533946231007576,
        -0.047867972403764725,
        0.04308804124593735,
        0.04493093490600586,
        -0.010357212275266647,
        -0.04716891422867775,
        0.026287192478775978,
        -0.007559620309621096,
        0.06039637699723244,
        -0.01597382314503193,
        -0.03587973862886429,
        0.0558612234890461,
        0.03272159770131111,
        -0.038251373916864395,
        0.001609275583177805,
        0.012265152297914028,
        0.018684420734643936,
        -0.027980033308267593,
        -0.07541441172361374,
        0.051657430827617645,
        0.05529312416911125,
        -0.05061550438404083,
        0.03255440667271614,
        -0.009716927073895931,
        0.014525465667247772,
        0.0027965728659182787,
        -0.012124864384531975,
        -0.05933374539017677,
        -0.07049816101789474,
        0.02273746393620968,
        -0.041034307330846786,
        0.12099102884531021,
        0.021527878940105438,
        0.09086297452449799,
        0.06021064892411232,
        -0.04425583407282829,
        -0.040798887610435486,
        0.0792035460472107,
        -0.0747867226600647,
        0.01478930376470089,
        0.0748361349105835,
        0.10921283066272736,
        0.015847301110625267,
        -5.285394522047682e-08,
        -0.048152096569538116,
        0.02305806614458561,
        -0.04915119707584381,
        0.0033720077481120825,
        -0.04534376785159111,
        -0.0388486348092556,
        -0.01641526073217392,
        -0.03138100355863571,
        -0.02073347568511963,
        -0.00348629429936409,
        0.044980112463235855,
        0.03353096544742584,
        -0.04774417355656624,
        0.04374147579073906,
        -0.026453116908669472,
        0.05376829579472542,
        -0.022886192426085472,
        0.02757054753601551,
        -0.015004544518887997,
        -0.07307901233434677,
        0.05101499706506729,
        -0.03851788491010666,
        0.0015339076053351164,
        0.05039670690894127,
        -0.0898481160402298,
        0.07572381943464279,
        -0.01698879897594452,
        0.0762123242020607,
        0.04744529351592064,
        -0.03183691203594208,
        0.0011343975784257054,
        -0.05244329571723938,
        0.0480048842728138,
        -0.018475983291864395,
        0.07816299051046371,
        0.04684211313724518,
        -0.013502124696969986,
        -0.0153894554823637,
        0.04752795025706291,
        0.10535252094268799,
        -0.11380170285701752,
        -0.09358122944831848,
        0.011102828197181225,
        0.05154234170913696,
        0.0380917489528656,
        -0.04439639300107956,
        -0.09697370231151581,
        0.011399163864552975,
        0.01998024806380272,
        0.016034772619605064,
        -0.07352414727210999,
        -0.043185845017433167,
        -0.0893852710723877,
        -0.004343830980360508,
        0.05800097808241844,
        0.056737322360277176,
        0.03405867889523506,
        -0.010679777711629868,
        -0.07810112088918686,
        0.08730599284172058,
        0.010211209766566753,
        0.033501144498586655,
        -0.06378132849931717,
        0.06390824168920517
    ]
}