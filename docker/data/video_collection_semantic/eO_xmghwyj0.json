{
    "id": "eO_xmghwyj0",
    "title": "Hexadecimal, ARP and MAC address learning",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2020-09-11T14:25:21Z",
    "video_url": "https://www.youtube.com/watch?v=eO_xmghwyj0",
    "category": "Science & Technology",
    "tags": [
        "hex",
        "hexadecimal",
        "hexadecimal to binary",
        "hexadecimal to decimal",
        "ccna",
        "binary",
        "binary to decimal",
        "binary to decimal conversion",
        "computers",
        "numbers",
        "binary numbers",
        "packet tracer",
        "cisco packet tracer",
        "ccna 200-301",
        "ccna training",
        "cisco ccna",
        "free ccna",
        "ccna study",
        "ccna certification",
        "ccna exam",
        "new ccna",
        "ccna full course",
        "ccna tutorial",
        "ccna 2020",
        "200-301",
        "cisco training",
        "number system",
        "arp",
        "ethernet",
        "mac address",
        "mac address windows 10",
        "mac address explained",
        "ccna course",
        "cisco"
    ],
    "views": 31655,
    "likes": 840,
    "comments_count": 93,
    "description": "Why learn Hexadecimal?  Join my Discord here:  Buy the full course here for $10:  Or support the mission, join thisisIT:   This is video #15 of my FREE CCNA Course 200-301 - a complete CCNA course for the new Cisco CCNA exam. I am going to be covering all the topics in the exam blueprint in this course.   I want to make this content practical and it will include a lots of labs and demonstrations to help you better understand topics on the exam.  The course will contain: - Videos - Labs using Cisco Packet Tracer - Quiz Questions - And more!  Menu: Why do we care? 0:00 Windows 10 Example: 1:08 Mac Example: 2:38 Windows NICs: 3:07 Packet Tracer Network: 4:17 Mac address format: 6:00 What is ARP?: 6:58 Mac address table: 11:05  CCNA 200-301 Playlist:   Support me via thisisIT: support the mission, join thisisIT:   Or, buy the CCNA course and support me: DavidBombal.com: CCNA ($10):  Udemy CCNA Course:  GNS3 CCNA Course: CCNA ($10):   Get Packet Tracer here:   ====================== Special Offers: ====================== Cisco Press: Up to 50% discount Save every day on Cisco Press learning products! Use discount code BOMBAL during checkout to save 35% on print books (plus free shipping in the U.S.), 45% on eBooks, and 50% on video courses and simulator software. Offer expires December 31, 2020. Shop now.  Link: bit.ly/ciscopress50  ITPro.TV:  30% discount off all plans Code: DAVIDBOMBAL   Boson software: 15% discount Link: bit.ly/boson15 Code: DBAF15P  hex hexadecimal binary CCNA Free CCNA 200-301 ccna 200-301 free ccna course network networking thisisit osi model tcp/ip model  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #ccna  #hexadecimal #arp",
    "description_links": [
        "http://discord.davidbombal.com",
        "https://bit.ly/ccnafor10",
        "https://bit.ly/thisisitccna",
        "https://bit.ly/freedbccna",
        "https://bit.ly/thisisitccna",
        "http://bit.ly/yt999ccna",
        "https://bit.ly/ccnafor10dollars",
        "https://bit.ly/gns3ccna10",
        "https://www.netacad.com/courses/packet-tracer",
        "https://itpro.tv/davidbombal"
    ],
    "transcript": "- In this video, we're going to talk about hexadecimal. Firstly, why do we care? Well, we care about hexadecimal because it's used in networking all over the place. As an example, when you look at the MAC address of a device, it's a written in hexadecimal. What's really becoming important these days is IPv6. IPv6 addresses are also written in hexadecimal so you'll see an IP address such as FE80::1. You need to know how to do conversions from one numbering system to another. As an example, you to know how to convert hexadecimal to binary, binary to hexadecimal, hexadecimal to decimal, decimal to hexadecimal and all those different combinations. So if I gave you a decimal number of one to eight, you need to know how to convert that into binary you need to know how to convert that into hexadecimal. These are the foundations you need to know these foundations before you really get into networking. So bold a good foundation. Learn your numbering systems, learn binary, learn hexadecimal, and it'll make your life a lot easier. Okay? So let me show you an example of where hexadecimal is used. This is a Windows 10 computer. It's actually that a laptop over there, which I'm controlling from my MAC. I'm using Windows here because a lot of people have Windows computers. This is Windows 10 once again, I'm gonna type IP config when I type that you'll notice that command shows us the IPv4 address of this computer, but it also shows an IPv6 address. This is a hexadecimal value, notice FE80. That's known as a Link local address in IPv6. We'll talk about that later, but for the moment notice FE80 hexadecimal values, but let me show you a MAC address so ipconfig/all I'll scroll up, there's the command. We can see that this is the name of my Windows computer notice here, Physical Address this is for a virtualBox interface written in hexadecimal. Notice the values 0A-00-27-00-00-18 those are hexadecimal values once again. Let's have a look at the Wireless card. So here we've got a Wireless network adapter. This is the Physical Address or MAC address. Here is another one Physical Address or MAC address. Once again these are hexadecimal values. Now we can look at the MAC address on my MacBook as an example so forgive the pun of looking at the MAC on a MAC, going to the Wireless Connections, open Network Preferences here's my WI-FI interface. I'll go to advanced, go to Hardware and you can see here is the MAC Address of my wireless interface card. I've hidden that because a MAC address is unique to a device. I can see that once again, by going to Control Panel in Windows, go to Network and Internet Network and Sharing Centre, Change adapter settings and I can look at the MAC address of any network interface card on my computer. So here's my WI-FI network interface card, or Nick go to Details and here's the MAC Address. Now I actually changed to the MAC Address of this network interface card notice it's a number 0E-55-44-33-22-11 I'm manually configured that. If you wanna know how to do that, you can watch this video, which I've put in YouTube, but you don't have to do that, but you need to know how to read MAC addresses and what they mean, and to help us do that, let's make this practical and use Packet Tracer. So please open Packet Tracer and follow me and make sure that you see something similar, the numbers that you get maybe different, but we'll manually configure MAC addresses in Packet Tracer cause it's easy to do that. So make sure that you can view the MAC addresses I'm then gonna show you how to work with hexadecimal and how to convert numbers from binary to hex, hexadecimal to decimal and so forth. So the first thing is let's get a switch and I'll get a 3560 switch and drag that into the topology. I'll go to end devices, grab a PC, grab a laptop, add that to the topology. Go to Network Connections and get a straight through cable and connect the PCs ethernet interface to the switch on gigabit 001. You don't have to use exactly the same interfaces it's really up to you but what I've done here is connected the PC to the switch. To make it easier to follow I'll go to Preferences and I'll show the port labels in my diagram. So FastEthernet0 and the PC is connected to gigabit 101 on the switch. I'll connect the second gig interface to the laptop on FastEthernet0. So we've got our devices in our topology the switch needs a power supply so grab a power supply and add that to the switch and as you can see the switch is now booting up. But now let's view the MAC addresses on the devices. So on PC1, go to FastEthernet0. This is the MAC address of the PC by default, I'm gonna give it an IP address of 10.1.1.1 with a subnet mask of slash 24 or 255.255.255.0. If you don't understand that yet, don't worry too much we'll talk a lot about subnetting in later videos but for the moment I've configured the PC with those details. I'll go to desktop, Command Prompt and if we type ipconfig like you would on a Windows computer notice there's the IP address of the PC, ipconfig/all there is the MAC address of the PC. Not easy to read we'll change that in a moment, but for the moment I wanna show you that the switch will learn those MAC addresses so hence it's important for you to learn hexadecimal. On the laptop, go to config, FastEhternet0, I'll configure this laptop with an IP address of 10.1.1.2 and a subnet mask of that 255.255.255.0 there's the MAC address of this PC. So if I go to Command Prompt on the laptop and type ipconfig/all there's the IP Address there's the MAC address. Back on the PC, PC1, PC starts with 0004 laptop starts with 0006. The first half of this address is the vendor code second half is a unique identifier for the MAC address. But notice please when I type a command such as arp-a, it says there are no ARP Entries. ARP is used to find the MAC address of another device in the network. It's basically a broadcast sent out into the network saying who has this IP address? And then that device will reply back with its MAC address. So back on the laptop, if I type arp-a notice it says no ARP Entries are found. ARP is used to discover the MAC address of another device. In ethernet, devices have MAC addresses allocated to them by vendors. If I want to talk to your device, I need to know what your MAC address is to be able to send the traffic onto the ethernet network. So if the laptop pings the PC, it's basically gonna send a broadcast into the network saying who has this IP address and then that PC will reply back. Notice now when we type arp-a we see that this IP address is using this MAC address and that's correct per the information on PC1. Back on the PC ipconfig/all shows us that the PC has this IP address and this MAC address. The laptop has learned the MAC address of the PC and in the same way, the PC has learned the MAC address of the laptop. So that's an example where hexadecimal values are used, but it's not only there if I have a look at the switch, I'm gonna bypass the initial configuration on the switch. Now don't worry too much if you don't know the commands on Cisco switches in a lot of detail yet you'll learn as we go along. Enable takes us to privilege mode and here I can type show mac address table to see the MAC Address Table on the switch. The switch had learned where the devices are. The whole idea with the switches, when it receives traffic on one port, it needs to switch that traffic out of another port. It needs to know where the devices are so that it can efficiently send the traffic to only the correct ports. So in other words, if traffic arrives on this interface, going to the laptop, we only wanna send it out of this interface. Now the switch doesn't have other interfaces connected at the moment, but if we did we wouldn't wanna send that traffic out of all interfaces we would want to limit it to this one interface. So the switch learns where devices are in the network. If we change the MAC address of the PC so going back to the PCs config or click on FastEthernet0 I could as an example, set the MAC address to 00C0 and then just make it a number like that a whole bunch of ones. Notice a MAC address consists of six hexadecimal values. This is hex which is the vendor code and then six hexadecimal values, which is the unique identifier for the MAC address. A hex value is four binary bits and I'll explain that in more detail in a moment, this is a 48 bit number. We've got 12 hexadecimal values a MAC address, 12 times four 48 bits. Each number here is a hexadecimal number. What I'll do now is change the MAC address of the laptop. So go to config, FastEthernet0, let's make that 00C02222 and a bunch of twos. So I've changed the MAC address of the laptop as well. If I type ipconfig, that's the IP address do slash all make this bigger that shows us the MAC address of the PC has changed 0r the laptop in this case has changed. So now arp-a the ARP cache has timed out or has been flushed in this example, there are no ARP entries. If the laptop pings the PC and type arp-a now you can see that the MAC address of value has been updated. So the laptop has learnt the new MAC address associated with the PC. And in the same way, the PC has learnt that was the previous entry. The PC has learnt the new MAC address of the laptop and the switch will have learned the new MAC addresses. Now it still has the old MAC addresses in its MAC Address Table they will time out after a period of time, but for the moment it's got both the old MAC addresses and the new MAC addresses in its MAC Address Table. The switch learns where the MAC addresses of devices are in the network and then basically switches the traffic from one MAC address to another, depending on who's talking to who. So as you can see here, MAC addresses are used in a lot of places you need to know how to read MAC addresses you need to know what that means. If I tell you that that's a 48 bit number, you need to know that. Why, why is it 48? So let's talk about the theory and I'll show you how to do conversions from one numbering system to another. Don't forget that IPv6 also uses hexadecimal so if I type ipconfig/all on the PC, notice Link local IPv6 address DHCP Client identifier. These are all hexadecimal numbers. We've got a Bluetooth hexadecimal number. Hexadecimal is used in multiple places you need to know how to work with hexadecimal. (upbeat music)",
    "transcript_keywords": [
        "MAC address",
        "MAC",
        "mac address table",
        "address",
        "MAC addresses",
        "hexadecimal",
        "show mac address",
        "MAC address consists",
        "address table",
        "laptop",
        "network",
        "switch",
        "Physical Address",
        "addresses",
        "Windows",
        "read MAC addresses",
        "read MAC",
        "notice",
        "interface",
        "type"
    ],
    "transcript_entity_values": [
        "first",
        "YouTube",
        "six",
        "these days",
        "Network Connections",
        "0004",
        "255.255.255.0",
        "half",
        "FE80::1",
        "12 hexadecimal",
        "48",
        "00C0",
        "Cisco",
        "0A-00",
        "0006",
        "12",
        "ARP",
        "four",
        "Nick",
        "Firstly",
        "Control Panel",
        "0r",
        "WI",
        "0E-55",
        "second",
        "one to eight",
        "Physical Address",
        "Packet Tracer",
        "IP",
        "Packet Tracer",
        "Windows",
        "MacBook",
        "101",
        "second half",
        "one",
        "48",
        "four 48",
        "MAC",
        "Wireless",
        "virtualBox",
        "Windows 10",
        "the Wireless Connections",
        "3560",
        "44",
        "24",
        "Windows",
        "Physical Address",
        "Network and Internet Network and Sharing Centre"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "GPE",
        "CARDINAL",
        "DATE",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "QUANTITY",
        "DATE",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "PERSON",
        "ORDINAL",
        "ORG",
        "CARDINAL",
        "GPE",
        "CARDINAL",
        "ORDINAL",
        "CARDINAL",
        "ORG",
        "PRODUCT",
        "ORG",
        "PERSON",
        "WORK_OF_ART",
        "FAC",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "QUANTITY",
        "ORG",
        "ORG",
        "NORP",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "PRODUCT",
        "PERSON",
        "ORG"
    ],
    "vector": [
        -0.01472438219934702,
        -0.019312862306833267,
        -0.015433558262884617,
        -0.017574843019247055,
        -0.0261058546602726,
        0.018577974289655685,
        0.08916061371564865,
        -0.028594044968485832,
        -0.06456983834505081,
        0.030782120302319527,
        0.014499124139547348,
        -0.030534932389855385,
        -0.050710372626781464,
        0.007254425436258316,
        -0.01912785694003105,
        -0.013709863647818565,
        -0.03106493502855301,
        -0.11885933578014374,
        0.003040619660168886,
        0.048825450241565704,
        0.010009486228227615,
        -0.00403481675311923,
        -0.05439762398600578,
        -0.05966128408908844,
        -0.0641406774520874,
        0.07177611440420151,
        0.06013039872050285,
        0.04275646433234215,
        -0.025086654350161552,
        -0.08004529029130936,
        0.0010059305932372808,
        0.1001603901386261,
        0.08038307726383209,
        -0.02311130240559578,
        -0.007925056852400303,
        -0.057966768741607666,
        0.06465897709131241,
        0.028048595413565636,
        -0.08923563361167908,
        -0.030851708725094795,
        -0.02524581551551819,
        0.01896299049258232,
        0.028717001900076866,
        0.03639396280050278,
        0.04518970474600792,
        -0.03524455800652504,
        0.014217371121048927,
        -0.034790486097335815,
        0.042287442833185196,
        0.0045352475717663765,
        -0.0443287156522274,
        0.017114359885454178,
        -0.0007655617082491517,
        -0.013048471882939339,
        0.04098993167281151,
        0.011082395911216736,
        -0.05365469679236412,
        -0.07737423479557037,
        0.06170756369829178,
        -0.08273141086101532,
        -0.0898578017950058,
        -0.04657036066055298,
        -0.0309075228869915,
        0.018435779958963394,
        0.017643768340349197,
        -0.03055049479007721,
        0.0006826567696407437,
        0.026093730702996254,
        0.03564288839697838,
        -0.01653728075325489,
        -0.1093611940741539,
        0.014066820032894611,
        -0.03969105705618858,
        0.12165331840515137,
        0.007669664453715086,
        0.02560940943658352,
        0.03195830434560776,
        -0.09241243451833725,
        0.026509905233979225,
        -0.031107326969504356,
        0.028394365683197975,
        -0.0024064236786216497,
        0.023506836965680122,
        0.021057847887277603,
        0.07422299683094025,
        0.03747512772679329,
        -0.02522341161966324,
        -0.012403595261275768,
        -0.05697416141629219,
        -0.019045390188694,
        0.006921481806784868,
        0.011759266257286072,
        -0.053496308624744415,
        0.01297087874263525,
        0.11740389466285706,
        -0.0036447930615395308,
        0.06588114798069,
        -0.025980008766055107,
        -0.042071353644132614,
        0.06547947227954865,
        0.10453097522258759,
        0.036356281489133835,
        -0.05718185380101204,
        -0.02812987193465233,
        -0.05459815263748169,
        0.009496266953647137,
        0.033158570528030396,
        0.02552635595202446,
        0.07892697304487228,
        0.022108403965830803,
        -0.055918291211128235,
        -0.009042425081133842,
        -0.09652649611234665,
        -0.15477384626865387,
        0.017546772956848145,
        0.07666335999965668,
        0.021156854927539825,
        0.03319351375102997,
        0.06623129546642303,
        -0.01561435405164957,
        -0.08442074060440063,
        0.0013384212506935,
        -0.03266311436891556,
        0.036543115973472595,
        0.06238493695855141,
        -0.09910965710878372,
        0.019397633150219917,
        7.380040795894303e-33,
        -0.061892855912446976,
        0.01059502549469471,
        -0.042427971959114075,
        0.028374534100294113,
        0.08106186240911484,
        -0.09366433322429657,
        0.008016854524612427,
        0.06987620145082474,
        -0.012523266486823559,
        -0.010090763680636883,
        -0.014339656569063663,
        -0.03261512145400047,
        0.014818097464740276,
        0.025277694687247276,
        0.009805651381611824,
        -0.006220140028744936,
        -0.061790481209754944,
        0.011285776272416115,
        -0.005531579256057739,
        -0.018524279817938805,
        -0.014608727768063545,
        0.01881323754787445,
        0.04436035454273224,
        -0.010980953462421894,
        0.07447540760040283,
        0.03969402611255646,
        0.022667082026600838,
        -0.015546824783086777,
        0.0875244215130806,
        -0.008212342858314514,
        -0.014150669798254967,
        0.02464788220822811,
        -0.10417541116476059,
        -0.028898604214191437,
        0.06409218162298203,
        0.03187482804059982,
        -0.018270622938871384,
        -0.07505158334970474,
        -0.03259522095322609,
        -0.032628148794174194,
        -0.039085738360881805,
        -0.019960906356573105,
        -0.029461320489645004,
        -0.042237456887960434,
        -0.01870412938296795,
        -0.06200941652059555,
        0.01059164758771658,
        -0.03885365277528763,
        0.004486802499741316,
        0.06255095452070236,
        -0.004144906532019377,
        0.03996504098176956,
        -0.025845205411314964,
        -0.041583240032196045,
        0.00380977476015687,
        -0.036809902638196945,
        0.058158066123723984,
        0.044442594051361084,
        0.02028888650238514,
        0.0827098935842514,
        0.04078143090009689,
        0.028181737288832664,
        0.0025310164783149958,
        0.08216860890388489,
        -0.04554026946425438,
        0.017144912853837013,
        -0.001578686642460525,
        -0.03723412752151489,
        0.08430507779121399,
        0.02630094438791275,
        -0.049242980778217316,
        -0.004435107111930847,
        0.077439084649086,
        -0.053501565009355545,
        0.04318570718169212,
        0.03948671743273735,
        -0.1015637218952179,
        0.021693559363484383,
        0.03248059004545212,
        0.005778588820248842,
        0.007848338223993778,
        -0.034239187836647034,
        0.013564369641244411,
        0.00048383118701167405,
        -0.08212189376354218,
        -0.016145462170243263,
        0.08103986084461212,
        -0.07987415045499802,
        -0.011683834716677666,
        0.021055616438388824,
        0.04578644409775734,
        0.01376182772219181,
        -0.05982983484864235,
        0.032502155750989914,
        0.017447195947170258,
        -8.490496513653532e-33,
        0.049725934863090515,
        0.017013730481266975,
        -0.11292049288749695,
        -0.00036485918099060655,
        -0.12347221374511719,
        0.0002977426629513502,
        0.10029536485671997,
        -0.04182561859488487,
        0.06008017063140869,
        -0.08067746460437775,
        0.004664882551878691,
        0.039679888635873795,
        0.006074489094316959,
        -0.048689860850572586,
        0.026086196303367615,
        -0.061182159930467606,
        -0.04037773609161377,
        -0.0021143355406820774,
        -0.01946467161178589,
        -0.02783307619392872,
        -0.015223002061247826,
        0.06811899691820145,
        -0.08874338120222092,
        -0.060460351407527924,
        -0.009053983725607395,
        0.014946045354008675,
        0.07842772454023361,
        -0.0005789059214293957,
        0.11181095987558365,
        0.008863887749612331,
        -0.004272776655852795,
        0.04084748402237892,
        0.017245180904865265,
        -0.0071227774024009705,
        0.01534003671258688,
        0.06516606360673904,
        0.05953875929117203,
        0.11338842660188675,
        -0.005275205243378878,
        0.034516505897045135,
        0.04036693274974823,
        0.03119056113064289,
        -0.06668306142091751,
        -0.036758020520210266,
        0.01587626338005066,
        0.060019783675670624,
        -0.005260578356683254,
        0.04112789407372475,
        -0.04620688408613205,
        -0.028934484347701073,
        0.09098360687494278,
        -0.03416742384433746,
        -0.010937253013253212,
        -0.002889462513849139,
        0.019614562392234802,
        0.06544170528650284,
        -0.020340343937277794,
        -0.044275056570768356,
        0.03844485431909561,
        0.0209715086966753,
        -0.0033240553457289934,
        0.01737939566373825,
        0.015629293397068977,
        0.01809355802834034,
        0.053364500403404236,
        -0.010531383566558361,
        -0.01469584833830595,
        -0.08452831953763962,
        -0.06445498764514923,
        -0.009521270170807838,
        -0.08037417382001877,
        -0.032537974417209625,
        0.01105103176087141,
        -0.06953135877847672,
        0.007177019491791725,
        -0.003925052471458912,
        0.07844459265470505,
        0.002935464261099696,
        -0.05108580365777016,
        -0.008604740723967552,
        -0.029120100662112236,
        0.00905748549848795,
        -0.02495911717414856,
        0.10976303368806839,
        -0.0657162293791771,
        0.06223249062895775,
        0.06112194433808327,
        0.07727326452732086,
        0.005079188849776983,
        0.04327423498034477,
        0.001137882354669273,
        0.07630094140768051,
        0.005348866805434227,
        -0.030911121517419815,
        -0.08200456947088242,
        -5.6780745438800295e-08,
        -0.1409621685743332,
        0.028039749711751938,
        -0.07936304062604904,
        0.0023985793814063072,
        -0.01773429475724697,
        0.09856799244880676,
        -0.0432901568710804,
        -0.04449405148625374,
        0.059098418802022934,
        0.06841567903757095,
        0.07143664360046387,
        -0.0597766675055027,
        -0.07966699451208115,
        -0.041122764348983765,
        0.03798395395278931,
        0.0443076454102993,
        -0.03133270889520645,
        -0.07633821666240692,
        -0.010089426301419735,
        -0.07020673155784607,
        -0.03206033632159233,
        0.03208693861961365,
        -0.032241031527519226,
        -0.003979282919317484,
        -0.092719167470932,
        0.08313436061143875,
        0.02160271629691124,
        0.11593683063983917,
        0.014823895879089832,
        -0.020534511655569077,
        -0.03830397129058838,
        -0.005047723650932312,
        -0.017177997156977654,
        -0.0024426348973065615,
        0.05021252483129501,
        0.021951938048005104,
        -0.04046156257390976,
        -0.008978763595223427,
        0.0719708800315857,
        0.044312313199043274,
        -0.11941801011562347,
        -0.10234075039625168,
        -0.07033771276473999,
        -0.02559933252632618,
        0.008456024341285229,
        0.009793543256819248,
        -0.1464957892894745,
        -0.0017426972044631839,
        -0.03546268865466118,
        -0.04703488573431969,
        -0.011198787949979305,
        -0.01787160336971283,
        0.01772836036980152,
        -0.003468553302809596,
        0.06652715802192688,
        0.061677154153585434,
        0.03929268196225166,
        -0.12222529947757721,
        -0.037477459758520126,
        0.07937553524971008,
        0.0610756017267704,
        0.036377254873514175,
        -0.11875521391630173,
        0.064646877348423
    ]
}