{
    "id": "kZ4YqqlU5eM",
    "title": "Free CCNP 350-401 ENCOR Complete Course: 6.4: REST APIs Part 4",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2020-05-21T15:05:48Z",
    "video_url": "https://www.youtube.com/watch?v=kZ4YqqlU5eM",
    "category": "Science & Technology",
    "tags": [
        "python",
        "ccnp",
        "encor",
        "cisco sdn",
        "rest",
        "rest api",
        "restful api",
        "350-401",
        "json",
        "ccna",
        "ccnp encor",
        "ccnp enterprise",
        "ccnp training",
        "new ccnp",
        "ccnp study",
        "cisco certifications",
        "cisco training",
        "cisco",
        "ccnp certification",
        "encor 350-401",
        "ccnp automation",
        "ccie encor",
        "cisco ccnp exam",
        "ccie enterprise",
        "cisco certification 2020",
        "cisco ccnp",
        "cisco encor training",
        "cisco encor exam",
        "ccnp review",
        "cisco ccna",
        "ccna study",
        "ccna training",
        "cisco encor test",
        "learn python",
        "python rest api"
    ],
    "views": 18810,
    "likes": 1035,
    "comments_count": 107,
    "description": "This is a FREE complete CCNP 350-401 ENCOR Course. In this fourth REST API video I demonstrate the use of REST APIs using Python and a Cisco IOS XE device. This is the first video showing the use of REST APIs - in the next video I'll show you how to use POST and DELETE and loops to create and delete lots of interfaces.  It's important that you learn both REST APIs and Python for the ENCOR exam as well as the real world.  I will be covering all the topics in the Cisco CCNP ENCOR exam in this course. I want to make this content practical and it will include a lots of labs and demonstrations to help you better understand topics on the exam.  Slides:    Previous video:   CCNP ENCOR playlist:   Menu: Menu: Overview: 0:00 Lab Setup: 1:33 Python Script: 2:10 Test Python Script: 4:10 Testing and Verification: 4:33  ====================== Special Offers: ====================== Cisco Press: Up to 50% discount Save every day on Cisco Press learning products! Use discount code BOMBAL during checkout to save 35% on print books (plus free shipping in the U.S.), 45% on eBooks, and 50% on video courses and simulator software. Offer expires December 31, 2020. Shop now.  Link: bit.ly/ciscopress50  Boson software: 15% discount Link: bit.ly/boson15 Code: DBAF15P  GNS3 Academy: CCNA ($10): bit.ly/gns3ccna10 Wireshark ($10): bit.ly/gns3wireshark  DavidBombal.com CCNA ($10):  Wireshark ($9): bit.ly/wireshark9   Python REST API JSON CCNP CCIE CCNP ENCOR CCNP 350-401 CCNP Enterprise ccnp training CCNP Security CCNP Data Center CCNP Service Provider CCNP Collaboration Cisco Certified Devnet Professional Cisco Certified Network Professional  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!    #ccnp #python #restapi",
    "description_links": [
        "https://bit.ly/encorapi4",
        "https://youtu.be/Bqd901dKIB4",
        "https://bit.ly/freeccnp",
        "http://bit.ly/yt999ccna"
    ],
    "transcript": "- In a previous video in this course, which I've linked here and below, I showed you how to interact with the REST API of a iOS XE device. We used the Postman application to send commands to that device. So as an example, by using the REST API, we could retrieve a list of interfaces, we could also create a new interface or delete an interface using Postman. In this video, I'm gonna show you how to interact with the REST API of the iOS XE device, using a Python script. Remember, this is where we going when we've got many, many devices, we want to interact programmatically, with those devices using a well known exposed API. So rather than having to manually type commands on the CLI, we're going to programmatically send commands to the device to get it to do things such as, create an interface or just to retrieve information from that device. It again doesn't make a lot of sense, if you've only got one device, makes a lot more sense when you've got many devices. In this video. However, I just wanna get you started with the basics, so we're going to interact with a single device, a iOS XE device, hosted in the DevNet Sandboxes. This isn't always on sandbox, so you can access the device just like I am, and try things for yourself. Okay, let's get started. (upbeat techno music) In this example, I'm running an Ubuntu 18 zero four three virtual machine, in VMware Fusion on my Mac. Now you could do it directly on a Mac, but I'm gonna do it in Ubuntu so that, if you're using a Windows machine, I would suggest you run an Ubuntu shell or run an Ubuntu VM or something. Seriously, Linux is the way to go. So just learn Linux. So I'm gonna do this by creating a file called ex dot py. In a previous video, I showed you how to install Python on Ubuntu, so I'm assuming that's already done. What I've done here is created a script that imports requests. Requests is a great way to interact with a web interface such as a REST API. So again, rather than reinventing the wheel, I'm just gonna import that library and then you'll see that my code is very simple. I'm going to allow self signed certificates. So I'm going to add this so that it ignores self signed certificates. Here are our credentials. So copy that to my Ubuntu computer, paste that in, that's the first part of the code. Second part of the code is, notice the URL. This is exactly the same URL that we used in Postman. It's exactly this URL, but I've got that in a Python script now. Notice the headers, here we've got Content-Type application Accept application yang-data JSON. That is the same as here. Now, as I said, you can get away just using Accept, but for a POST I had to use Accept and Content -Type. So here I've just got both in the script. And what we gonna do is, run a GET. This is a variable that stores that information, so we doing requests dot GET. This is a method of requests, we are going to use this URL, specify our username and password, which was specified over here, headers that we're using are these headers, and we not going to verify our certificates. So copy that and paste that in to the Ubuntu server. So here is our entire script, very simple, only a few lines. And then I'll save that script and I'm gonna run Python three xe dot py. And hopefully we'll see the interfaces on the Router, and there you go. All the interfaces on the Router. These Havi once again, who configured Gigabit two on the Router. Okay. But just to prove the point, let's go to Postman and let's create interface loopback 1, 2, 3, 4, and click send, and go back to the Python script and run it again. Notice we've created loopback 1, 2, 3, 4. Let's create loopback 1, 2, 3, 5. That tells me it's created. Run my script again. There it is. And just for fun, let's duplicate this and what we'll do is, in the body say let's create a loopback of 2000 and let's say I can see this using Python and let's make this two dot two dot two dot two, click send. It's now being created, back in Ubuntu, Python three ex dot py. There you go. Just a quick interruption, in this video I showed you how to use GET, but I wanna show you more than that. So I've created an additional video where I show you how to use POST to create interfaces, delete, how to delete interfaces, but I'm not just gonna show you how to do that for one interface, I'm gonna show you how to use a loop, to do that for multiple interfaces. But the video got too long, so I didn't wanna edit to this video. So just note, there's more coming than just this video. This is a short video, just showing you how to use a basic Python script using a GET to retrieve information from a Router, but in a subsequent video, I'm gonna show you how to do a lot more than this. Okay, so I've shown you how to get a list of interfaces using a REST API and Postman, then I showed you how to do that using a Python script, I showed you how to create interfaces using Postman. I showed you how to delete interface using Postman. Postman is a great way to get started if you're not sure about the coding, then use the Graphical User Interface to get started. I've once again, given you all the steps in this PowerPoint presentation. So download the PowerPoint presentation and just follow the steps and you should be able to do this yourself. Okay. Hopefully you've learned something, hopefully you're now more comfortable using a REST API, but in addition to help me, please like this video, please consider subscribing to my YouTube channel and clicking on the bell to get notifications, that really does help me with YouTube robots, so if you don't mind doing that, I'd really appreciate it. I wanna wish you all the very best. (upbeat techno music)",
    "transcript_keywords": [
        "REST API",
        "API",
        "Python script",
        "Python",
        "Ubuntu",
        "device",
        "Postman",
        "video",
        "REST",
        "interfaces",
        "interface",
        "script",
        "dot",
        "create",
        "interact",
        "Router",
        "URL",
        "showed",
        "show",
        "run"
    ],
    "transcript_entity_values": [
        "first",
        "three",
        "Mac",
        "API",
        "Ubuntu 18 zero",
        "Router",
        "four",
        "4",
        "two",
        "iOS XE",
        "Second",
        "YouTube",
        "the REST API",
        "Python on Ubuntu",
        "the Graphical User Interface",
        "2000",
        "Python",
        "Linux",
        "Mac",
        "one",
        "PowerPoint",
        "VMware Fusion",
        "Postman",
        "4",
        "the DevNet Sandboxes",
        "Windows",
        "Havi",
        "1",
        "Gigabit two",
        "CLI",
        "5",
        "2",
        "POST",
        "3"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "PRODUCT",
        "ORDINAL",
        "ORG",
        "ORG",
        "WORK_OF_ART",
        "PRODUCT",
        "DATE",
        "ORG",
        "PERSON",
        "PERSON",
        "CARDINAL",
        "PRODUCT",
        "ORG",
        "PERSON",
        "DATE",
        "GPE",
        "PRODUCT",
        "PRODUCT",
        "CARDINAL",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "DATE",
        "ORG",
        "DATE"
    ],
    "vector": [
        -0.07043588161468506,
        0.02154357358813286,
        -0.0053213355131447315,
        -0.0195514764636755,
        -0.023944344371557236,
        -0.0415087528526783,
        -0.03422410041093826,
        0.03758672624826431,
        -0.10202998667955399,
        0.014262025244534016,
        0.03888889029622078,
        -0.03732677921652794,
        -0.019254960119724274,
        0.03774647414684296,
        0.0615130253136158,
        -0.020309073850512505,
        0.03703752160072327,
        -0.019294138997793198,
        0.041815709322690964,
        -0.03661711513996124,
        0.017249660566449165,
        -0.006192049942910671,
        0.06965040415525436,
        0.015313525684177876,
        -0.07777772843837738,
        0.009915962815284729,
        0.014861802570521832,
        0.020110508427023888,
        -0.013248851522803307,
        -0.040917664766311646,
        -0.015694938600063324,
        0.01430946309119463,
        -0.00025050833937712014,
        0.044457901269197464,
        0.03729955106973648,
        -0.010791384615004063,
        0.04963332414627075,
        -0.0722087025642395,
        -0.01938125304877758,
        0.007080333773046732,
        -0.03427581861615181,
        0.002247563796117902,
        -0.031091909855604172,
        0.00807245448231697,
        0.06708893179893494,
        -0.030878258869051933,
        -0.07302872836589813,
        -0.06092698872089386,
        0.03295121714472771,
        -0.016500435769557953,
        -0.011836671270430088,
        -0.024344146251678467,
        -0.01388881728053093,
        -0.06792742013931274,
        -0.0076678418554365635,
        -0.019291548058390617,
        -0.006499221082776785,
        -0.02200382947921753,
        0.02144666388630867,
        -0.01176409050822258,
        0.03514767810702324,
        -0.05519308149814606,
        0.015599487349390984,
        0.03177649527788162,
        0.05937352776527405,
        -0.031818777322769165,
        -0.04528149217367172,
        0.07802731543779373,
        0.0427732951939106,
        -0.0587751530110836,
        -0.0713162049651146,
        -0.007954680360853672,
        -0.03767397999763489,
        0.05654192343354225,
        -0.0030148366931825876,
        0.017106981948018074,
        0.032460521906614304,
        -0.09740223735570908,
        -0.05364082008600235,
        -0.05129067227244377,
        0.055949922651052475,
        0.041977155953645706,
        -0.05044451728463173,
        0.02112477831542492,
        0.0784699097275734,
        0.035143934190273285,
        0.006155524868518114,
        0.07101143896579742,
        -0.07619413733482361,
        -0.012488597072660923,
        0.06059682369232178,
        -0.02962566539645195,
        -0.06450508534908295,
        0.006902394350618124,
        0.07295934110879898,
        0.027140479534864426,
        0.04267258197069168,
        -0.09594748169183731,
        -0.09884536266326904,
        0.04545440152287483,
        0.08027258515357971,
        -0.02968541905283928,
        -0.01142630260437727,
        -0.018731264397501945,
        -0.05410217493772507,
        -0.003239489160478115,
        0.07654739171266556,
        0.014694522134959698,
        0.039348095655441284,
        0.0023286445066332817,
        -0.07188927382230759,
        0.012823598459362984,
        -0.040230683982372284,
        -0.03244643658399582,
        0.044060226529836655,
        0.11847835034132004,
        0.029425356537103653,
        0.11094745993614197,
        0.06221803277730942,
        0.012355130165815353,
        -0.0005201223539188504,
        0.025874227285385132,
        -0.04865036532282829,
        -0.021543405950069427,
        -0.011117473244667053,
        -0.08897093683481216,
        0.08539242297410965,
        8.095736857972607e-33,
        0.0031131517607718706,
        0.014678758569061756,
        -0.044037774205207825,
        0.04476277157664299,
        0.04368668049573898,
        -0.017752667888998985,
        0.11122645437717438,
        0.1067628413438797,
        -0.10064750164747238,
        -0.004010375589132309,
        0.004954358097165823,
        0.11524410545825958,
        -0.008154645562171936,
        0.046148791909217834,
        -0.05214602127671242,
        -0.06883876770734787,
        -0.09034072607755661,
        0.04038716480135918,
        0.02861766144633293,
        0.051782041788101196,
        0.024246668443083763,
        -0.04337678477168083,
        0.038641076534986496,
        0.024886876344680786,
        0.016427909955382347,
        0.01293090172111988,
        -0.021465077996253967,
        -0.018520724028348923,
        0.038388919085264206,
        0.010104326531291008,
        -0.08296710252761841,
        0.026997290551662445,
        -0.11642351001501083,
        -0.01973547600209713,
        0.046773605048656464,
        0.0081679942086339,
        0.005719768814742565,
        -0.03193605691194534,
        -0.06078049913048744,
        -0.03796878457069397,
        -0.08737402409315109,
        0.06392274051904678,
        -0.049097709357738495,
        -0.060025084763765335,
        -0.08655643463134766,
        -0.005853403825312853,
        0.01768448017537594,
        0.0026597732212394476,
        0.0825362429022789,
        -0.012464267201721668,
        -0.02772936038672924,
        0.020003359764814377,
        -0.05894363671541214,
        -0.11388162523508072,
        0.02532207779586315,
        -0.06837963312864304,
        0.049378715455532074,
        0.013125664554536343,
        -0.03074432909488678,
        -0.05869542434811592,
        0.08309976011514664,
        0.011380210518836975,
        -0.0605725534260273,
        -0.029583105817437172,
        -0.05833272263407707,
        0.039278507232666016,
        -0.11468885838985443,
        -0.04906342551112175,
        0.10205888748168945,
        -0.004426575265824795,
        -0.0653994083404541,
        0.03691551834344864,
        -0.00529412180185318,
        -0.04149524122476578,
        0.06758410483598709,
        0.019329968839883804,
        -0.07713579386472702,
        -0.0009414769592694938,
        0.0032656744588166475,
        -0.004699561279267073,
        0.03533603623509407,
        -0.020293697714805603,
        -0.0059641385450959206,
        -0.01384347677230835,
        0.0030570512171834707,
        -0.0016067092074081302,
        0.04925176128745079,
        -0.04417111724615097,
        -0.08256416767835617,
        0.0013410145184025168,
        -0.001942070317454636,
        -0.01629076898097992,
        0.0765547901391983,
        0.0048179891891777515,
        0.05297331139445305,
        -9.070088697005846e-33,
        0.0418432392179966,
        0.032589998096227646,
        -0.04002901911735535,
        -0.024390947073698044,
        0.012302737683057785,
        -0.024375393986701965,
        0.04722512140870094,
        0.05524703487753868,
        0.04657811298966408,
        0.02586614340543747,
        0.022076822817325592,
        -0.05222462862730026,
        0.0269563440233469,
        0.0101969288662076,
        0.009256391786038876,
        -0.06541559845209122,
        -0.15971364080905914,
        0.013542445376515388,
        0.017404012382030487,
        0.008942430838942528,
        -0.011800694279372692,
        0.1544734686613083,
        -0.04119231551885605,
        -0.05304066464304924,
        -0.031183602288365364,
        0.04657452926039696,
        -0.0027248046826571226,
        -0.035625871270895004,
        0.05194053798913956,
        -0.06575758755207062,
        -0.03277498483657837,
        -0.0020866114646196365,
        -0.04324162378907204,
        0.06530015170574188,
        -0.0032599307596683502,
        0.06497325748205185,
        0.09673226624727249,
        0.06352421641349792,
        -0.045038022100925446,
        2.260759356431663e-05,
        0.06731177121400833,
        0.025660671293735504,
        -0.059395816177129745,
        -0.0418819859623909,
        0.030643315985798836,
        0.009356597438454628,
        -0.006081515923142433,
        0.06843997538089752,
        -0.05143297463655472,
        0.04863028600811958,
        0.04397577792406082,
        0.00392495933920145,
        -0.11737357825040817,
        -0.0851166620850563,
        0.005751463584601879,
        -0.001772698829881847,
        -0.009022178128361702,
        -0.0746489018201828,
        -0.0441461019217968,
        -0.019997885450720787,
        -0.030070288106799126,
        0.020383425056934357,
        -0.03301919624209404,
        0.06610491871833801,
        0.015871405601501465,
        -0.08151770383119583,
        -0.07186535000801086,
        -0.02459418587386608,
        -0.004782248288393021,
        -0.05143768712878227,
        -0.0517672635614872,
        -0.030293293297290802,
        0.06420838832855225,
        -0.057322800159454346,
        0.04809611290693283,
        -0.007501397747546434,
        -0.0197440218180418,
        -0.06740597635507584,
        -0.005647643003612757,
        -0.0381680466234684,
        -0.06293334811925888,
        -0.019898463040590286,
        0.03441830351948738,
        0.18339796364307404,
        -0.00592254102230072,
        0.06910380721092224,
        0.04809879511594772,
        0.0076458873227238655,
        -0.04074190929532051,
        0.08532840758562088,
        -0.01535855233669281,
        0.02598264254629612,
        0.0896139144897461,
        0.12555073201656342,
        0.030664440244436264,
        -5.3781981534939405e-08,
        -0.019101547077298164,
        0.018479982390999794,
        -0.06032485514879227,
        0.07284341007471085,
        -0.10623401403427124,
        0.03370784595608711,
        0.01714300736784935,
        -0.025632435455918312,
        0.040331628173589706,
        0.022578226402401924,
        0.00592613173648715,
        0.019547170028090477,
        -0.04600384086370468,
        0.07193293422460556,
        -0.014208212494850159,
        0.05580007657408714,
        -0.02254783920943737,
        0.03669538348913193,
        0.00386118795722723,
        -0.07112047076225281,
        0.03302868455648422,
        -0.05769659951329231,
        0.01475545484572649,
        0.02743336372077465,
        -0.06921412795782089,
        0.0544893816113472,
        -0.004564483650028706,
        0.07469576597213745,
        -0.010604845359921455,
        -0.05586550384759903,
        -0.01659487932920456,
        -0.1087689995765686,
        0.054991912096738815,
        -0.015983691439032555,
        0.07889153808355331,
        0.011099710129201412,
        -0.06894112378358841,
        -0.038169827312231064,
        0.028874829411506653,
        0.053551044315099716,
        -0.07095102965831757,
        -0.06094565987586975,
        -0.027584196999669075,
        0.018198641017079353,
        0.09579997509717941,
        -0.025856569409370422,
        -0.06482607126235962,
        -0.02548804320394993,
        -0.00795009359717369,
        0.019037172198295593,
        -0.07570721209049225,
        -0.07826334983110428,
        -0.008646775968372822,
        -0.04137491062283516,
        0.06849582493305206,
        0.12577667832374573,
        0.010963217355310917,
        -0.028009336441755295,
        -0.050677791237831116,
        0.0417148619890213,
        0.059681788086891174,
        0.08591679483652115,
        0.0006423706654459238,
        0.008812199346721172
    ]
}