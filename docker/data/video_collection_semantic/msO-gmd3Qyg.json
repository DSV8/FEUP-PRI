{
    "id": "msO-gmd3Qyg",
    "title": "Security Myths: Your locked laptop keeps you safe // hak5 Bash Bunny",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2021-06-02T15:31:30Z",
    "video_url": "https://www.youtube.com/watch?v=msO-gmd3Qyg",
    "category": "Science & Technology",
    "tags": [
        "cybersecurity",
        "hak5",
        "bash bunny",
        "bash bunny tutorial",
        "bash bunny hak5",
        "bash bunny vs rubber ducky",
        "bash bunny usb",
        "bash bunny setup",
        "cyber security",
        "windows 10",
        "security",
        "computer security",
        "bash bunny 2021",
        "bash bunny payloads",
        "bash bunny switch positions",
        "darren kitchen",
        "shannon morse",
        "hack5",
        "cyber security career",
        "hacking",
        "hacker",
        "kali linux",
        "ceh",
        "oscp",
        "ethical hacker",
        "ethical hacking tutorial",
        "information security",
        "hack",
        "ethical hacking",
        "usb",
        "hacking tutorial",
        "oscp certification"
    ],
    "views": 118481,
    "likes": 5557,
    "comments_count": 353,
    "description": "So you think locking your laptop will keep you safe? Well, think again.  Need help? Join my Discord here:   Menu: 0:00  Demo of auto login 0:36  Password 0:59  Grab credentials 2:08  What are we doing? 2:32  What did we manage to capture 3:18  Quickcreds 4:16  Rubber Ducky vs Bash Bunny 4:40  Switch positions 5:30  Firmware Updater 8:02  Payload Library 8:40  Payload 1 explained 9:57 Download and install tools 11:53  Payload directories 13:45  Payload process from beginning to end 15:33  Demo of payloads  ===== Links: ===== Buy:  Wiki:  Tools:  Github:  Download firmware:   ================ Connect with me: ================ Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:  YouTube:     Boson software: 15% discount Link: bit.ly/boson15 Code: DAVF15P  security myths myths laptop security myth busting cybersecurity bash bunny hak5 bash bunny hak5 windows 10 passwords david bombal oscp hack5 darren kitchen bash bunny usb  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #cybersecurity  #mrrobot #hak5",
    "description_links": [
        "https://discord.com/invite/usKSyzb",
        "https://davidbombal.wiki/buybashbunny",
        "https://davidbombal.wiki/bashbunnywiki",
        "http://davidbombal.wiki/bbtools",
        "http://davidbombal.wiki/bashbunnygithub",
        "http://davidbombal.wiki/downloadbashbunny",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal"
    ],
    "transcript": "- True or false? Locking your laptop protects your data? Is it good practice and should you lock your laptop when you're not at your desk? Well, let's see how good the security is on this Windows laptop. I'm gonna simply toggle a switch on this Hak5 Bash Bunny, and notice as quickly as that, I've been able to log into this laptop. So I've logged in. What I'll do here is lock the laptop. Laptop has been locked. I'll toggle the switch again, and there you go. I've been able to log in. Now, in that example, I don't need to know what the password is of this laptop. The password was grabbed from the laptop using the Bash Bunny, even though the laptop was locked. Password was cracked locally by the Bash Bunny. And in this case, keystrokes was sent to the laptop by the Bash Bunny to allow me to order log on. Now, in some cases you may not get the password but there's another attack that you can use. So let's log off this laptop, and what I'll do here is unplug the Bash Bunny and then I'll put it to Position 1, the bottom position here, and then I'll plug it in, and what this attack is gonna do is it's going to grab passwords from the laptop and store them locally so that I can take the Bash Bunny away and then crack the passwords offline. So I'll show you two types of attacks in this video. First one is where I'm grabbing the passwords from the laptop, locally cracking them on the Bash Bunny, and then order logging on. Second type of attack is just where I grab the passwords and I can do offline attack to crack the passwords. (\"Don't I\" by Swif7) Now, before we continue, please consider subscribing to my YouTube channel if you enjoy this kind of ethical hacking content, please like this video, and click on the bell to get notifications, that really does help me with the YouTube algorithm. Okay, let's continue. Zebra, what are we doing? - [Zebra] Hacking. - [David] What type of hacking are you doing? - [Zebra] Bash Bunny. - [David] You're going to use Bash Bunny to break into networks. - [Zebra] Mm-hmm. - [David] Are you a good or bad zebra? - [Zebra] Bad zebra. - [David] Why? Because you're a hacking zebra. - [Zebra] Yes. (David laughs loudly) - [David] Well done Zebra, let's break some networks. Okay, so let's see what we managed to capture. First thing you need to do is make sure that you set this to Position 3. I'll plug it into this computer and there you go. I've got the Bash Bunny. Let's have a look under loot. Here's my DellXPS. Notice passwords. It's discovered three passwords. Those are the three passwords of my three users. So it's discovered the user peter has this password, 123456. David has password1. Jane has password qwerty. Now I purposely chose bad passwords because otherwise this video would just end up being really, really long. You can use quickcreds, if you wanna do an offline attack. So looking at Proxy-Auth-NTLMv2, I've got a hashed version of the password, and I could take that offline and do a brute-force attack against it. But if the users passwords are in my dictionary, I can do a local attack and log on to the computer. So under loot again, here's my nmap_results. It found a device and then ran the attack because this port is open, tcp 445. It was as simple as that to attack a computer that was locked and get access to the information on that computer, I could log in, because Bash Bunny discovered the passwords based on a dictionary attack. And again, I could use quickcreds to grab the passwords, remove the drive and then do a brute-force or another offline attack. Now the Bash Bunny from Hak5 has a lot of options. I demonstrated the Rubber Ducky in this video, showed you a different type of attack using the Rubber Ducky. The Bash Bunny has a lot more options than the Rubber Ducky, including the fact that you can have multiple payloads here. You can also create your own payloads but in this video, we'll show you two very powerful payloads that you can download with the Bash Bunny. Okay, so the first thing you need to know are the Switch Positions. Position 3, closest to where you plug the USB in. That's how you configure the Bash Bunny. And then you can switch to Position 2 or Position 1, where you can load different payloads. So first thing I'll do is set this to Position 3, which is Arming Mode, allows me to configure this, update the firmware, load different payloads. I've plugged that into this Windows laptop. I'm gonna use Windows for this demonstration because a lot of people use Windows. You can also use Linux or macOS to configure this device. Okay, so it's picked up the Rubber Ducky as disk D. This runs Linux, has lots of powerful options, but I'm just gonna show you some simple options to get started, show you how to run those two very powerful scripts. The first thing you wanna do is update the firmware. You can download that from the Hak5 website. I'll put all these links below this video so that you can access them easily. But what I'm gonna do is download the Rubber Ducky Updater, in my example for Windows 64-bit. As you can see there are options for Linux and macOS. So I'll download this to my Downloads directory. I've already downloaded it previously but for this demonstration, I'll replace that. I'll show it in folder. Okay, so here it is. I'll extract that. And what I get is an executable file. Now on my BashBunny, I already have that file. All you do basically is copy that and put it into the root of the BashBunny. So I'll replace that file. So again, on my D drive, the BashBunny in the root, I've pasted that file. I'll double click on that. Only option available here is to Update the Bash Bunny. So I'm gonna type 0, press Enter, and the software checks whether it's up to date. As you can see, my software's already up to date. What this also does, which is very nice, is copy payloads to the Bash Bunny. Now I've had problems with that, so I'll show you how you can update that manually. Press Enter to exit that script. And all you need to do now is Eject the BashBunny, make sure that you eject it safely, and then unplug it, plug it back in, and it'll auto update the software. The LEDs are really important, they tell you what are the Bash Bunny is doing but as you can see here, mine booted up and I see the BashBunny directory again. On the Bash Bunny Wiki, available on the Hak5 website, I'll link to that once again, you can see Position Indicators. You can see the directory structure. As an example, we wanna look at loot to see the hacked information. We can see default information of the Bash Bunny, but notice here Green blinking means it's booting up. Blue means it's Arming. Red blinking means that we're in Recovery Mode or the Firmware is Flashing, and Blue, Red alternating means don't unplug it. So there's a lot of other information available on the Hak5 website. Again, I'm not gonna show you that in a lot of detail, what I wanna show you is that under payloads, you can specify a payload for switch1 and switch2. Under library, they have a whole bunch of payloads. Now, if this, for some reason doesn't get updated by the Payload Updater, you can download all the payloads from GitHub. So under payloads, notice switch1, switch2, but library has a whole bunch of payloads that you can use, and the two that I demonstrated are payloads from here. So under credentials, we have a whole bunch of payloads. I'm gonna select this one, and looking at the readme file, you can see that this uses ethernet to attempt a dictionary attack against passwords, and that's exactly the payload that I ran. Okay, so the payload is here. All we need to do is copy this to the right switch and it will attack per this payload. So this makes it really, really easy for us. We don't have to write this. Someone's already done all the hard work. Under userlist, the default user available is Administrator. I've added additional users here so that we can crack at those users. Under wordlist, here are a bunch of passwords that could be used to try and attack the device. The wordlist isn't very long. We're told in the readme file that there are great wordlists available on GitHub. This is a famous wordlist. So you can download a whole bunch of wordlists here if you want to. You can update this wordlist that comes with this attack, with your own passwords. Now, this attack does rely on additional software that you need to install on the Bash Bunny. So going back to the Hak5 website, you're gonna wanna download Metasploit. You need the Metasploit-framework for this attack to work. Okay, so first thing I'm gonna do is download Metasploit, that's gonna be saved to tools on the BashBunny. So I'll save that file and then I'll download gohttp, save it to the same directory, save Responder, and save Impacket Now, as you can see here, it says Virus detected. So what I'm gonna do, and this is a problem using Windows as an example rather than Linux, it's I'm gonna go to Virus & threat protection. And I'm gonna turn this off, and I'm gonna try and download Responder again. Okay, so the files have been downloaded. They are stored in tools on the BashBunny. So what I'm gonna do now is Eject the BashBunny. All I need to do is unplug it and then plug it back in again. But that'll take a while because it's gonna move those files to Linux. But for a lot of these attacks, you need that software. So as an example, for the attack that I demonstrated at the beginning of this video, you need the Metasploit-framework, but for the others, you need some of the other software. So I've simply downloaded all those tools. Okay, so at the moment, it's still installing the software, the LED is actually purple at the moment. You just need a white for that process to complete. Okay, so there you go. That process has now completed. As you can see under tools, the tools have been moved from this directory into Linux, so they'll now be available to be used by attacks. Okay, so under payloads, I put two attacks in the payloads directory. Under switch2, and that's the one that I demonstrated, I have a userlist of various users. So peter, david and jane, as an example, are the user accounts that I'm gonna attack. And I know that because when I looked at the computer, I could see the various accounts on that computer. Wordlist is a list of passwords. Again, you can use SecLists or Rockyou or another wordlist to try and break the passwords on a device. As mentioned, if that doesn't work, the attack that I've put into switch1, basically snags all the passwords. So snags credentials from locked and unlocked machines. So quickcreds is a way to just grab passwords and then you can do an offline brute-force attack or dictionary attack. But going back to switch2, here's the payload, this is the actual script that someone else has written. We can simply use this from the library of scripts available from Hak5. These are the passwords that it discovered and rather than trying to rerun the attack, it can simply use this file to try and log on to the machine again. The readme file tells us that this attack is for Windows at the moment, it uses ethernet to attempt dictionary attacks against passwords. When the password is discovered, it's stored in a file for future use as demonstrated. The password may be used to unlock the machine by manually selecting a user and placing focus on the password field and then it auto logs on, we do that by switching the position of the switches which I demonstrated. Okay, so let's delete these files and start the attack from the beginning to the end. I've updated my Bash Bunny, I've uploaded the tools to the Debian installation. So under payloads, library, I'm gonna try and snag credentials. I'm gonna go to this directory and I'm simply gonna copy all of these files to switch2. That's the attack that we wanna run when the switch is in Position 2 on the Bash Bunny. So just to double-check, that there are our users, by default it's only Administrator, but I've added these additional users. Wordlist, there's the passwords. There's the payload that's gonna run, and there's the readme file once again. On switch1, I'll delete these two files, go to library, go to credentials, go to quickcreds and I'll copy those two files to switch1. And what I'm gonna do is delete all of the files under loot, to show you the attack from the beginning. So I've deleted all the files and let's run the full attack once again. So just to reiterate, under payloads, switch1, I've got an attack. Switch2, I've got my attack. It hasn't discovered the passwords for the Dell XPS laptop yet, but let's run the attack again and I'll show you how it discovers those passwords. First thing I need to do is Eject the Bash Bunny. Make sure that you Eject it properly from your computer. Okay, so attack is ready to be launched. Okay, so here's my Dell laptop. I'll start it up. I'll plug this in, and I'll set the Bash Bunny to Switch 2. This will try and snag all the credentials. So I'll plug that in. You can see it's green at the moment. Now it goes to purple, that means that it's starting to attack. You can see it's flashing now. Just have to wait a while for this to complete. Okay, so after a while it goes green, that means that it's successfully attacked this computer. So again, all I need to do is toggle this to say, Position 1, and then back to Position 2 and I can log in to the computer. Do that again. So I'll lock the computer. Okay, incorrect password, I need to put it in this position. So I'll toggle this and there you go. Log back in. Okay, so the Bash Bunny is really powerful. These are just two examples of attacks using the Bash Bunny. It's got its own scripting language. You can write your own attacks, but here are two really powerful attacks that you can deploy using the Bash Bunny. I'm David Bombal, hope you enjoyed this video. If you did, please like it. Please subscribe to my YouTube channel and click on the bell to get notifications. (\"Don't I\" by Swif7)",
    "transcript_keywords": [
        "Bash Bunny",
        "Bash",
        "Bunny",
        "attack",
        "passwords",
        "Bash Bunny Wiki",
        "Bash Bunny discovered",
        "Position",
        "payloads",
        "laptop",
        "password",
        "Rubber Ducky",
        "attacks",
        "file",
        "Windows",
        "download",
        "payload",
        "show",
        "files",
        "computer"
    ],
    "transcript_entity_values": [
        "first",
        "D.",
        "Position 2",
        "Metasploit",
        "Linux",
        "three",
        "The Bash Bunny",
        "Green",
        "USB",
        "Proxy-Auth-NTLMv2",
        "Bash Bunny Wiki",
        "BashBunny",
        "445",
        "Position 2",
        "peter",
        "switch2",
        "Hak5",
        "two",
        "Position 1",
        "Impacket Now",
        "SecLists",
        "Second",
        "Arming Mode",
        "Rockyou",
        "Dell",
        "Jane",
        "123456",
        "YouTube",
        "3",
        "David",
        "Downloads",
        "Metasploit",
        "Windows",
        "Zebra",
        "BashBunny",
        "david",
        "the Bash Bunny",
        "Recovery Mode",
        "Responder",
        "Linux",
        "BashBunny",
        "switch2",
        "the Rubber Ducky",
        "GitHub",
        "jane",
        "Hak5",
        "Position 3",
        "Debian",
        "XPS",
        "First",
        "Responder",
        "Windows",
        "the Rubber Ducky",
        "switch1",
        "Position 2",
        "Bash Bunny",
        "David Bombal",
        "Wordlist",
        "the Bash Bunny",
        "the Switch Positions"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "NORP",
        "LAW",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "PERSON",
        "ORG",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "CARDINAL",
        "PRODUCT",
        "PERSON",
        "ORG",
        "PRODUCT",
        "CARDINAL",
        "LAW",
        "ORG",
        "ORG",
        "ORDINAL",
        "WORK_OF_ART",
        "PRODUCT",
        "ORG",
        "PERSON",
        "DATE",
        "ORG",
        "CARDINAL",
        "PERSON",
        "PERSON",
        "ORG",
        "WORK_OF_ART",
        "ORG",
        "FAC",
        "PERSON",
        "WORK_OF_ART",
        "WORK_OF_ART",
        "ORG",
        "GPE",
        "PERSON",
        "PERSON",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "EVENT",
        "NORP",
        "PRODUCT",
        "ORDINAL",
        "WORK_OF_ART",
        "PRODUCT",
        "WORK_OF_ART",
        "ORG",
        "EVENT",
        "PERSON",
        "PERSON",
        "PERSON",
        "PERSON",
        "ORG"
    ],
    "vector": [
        -0.031002283096313477,
        -0.014323031529784203,
        -0.03843270614743233,
        -0.10161865502595901,
        0.10395068675279617,
        0.04704183712601662,
        0.08982757478952408,
        0.009614319540560246,
        0.03628532961010933,
        0.03062448836863041,
        0.059139054268598557,
        0.009712356142699718,
        0.013685322366654873,
        -0.03418337553739548,
        0.023113710805773735,
        -0.0007754097459837794,
        -0.0062691220082342625,
        -0.08690248429775238,
        -0.06749044358730316,
        -0.09711926430463791,
        -0.04212357848882675,
        -0.010642743669450283,
        0.012421666644513607,
        -0.0215277262032032,
        -0.031214002519845963,
        -0.15090221166610718,
        0.10376744717359543,
        0.005051763728260994,
        -0.13421857357025146,
        -0.07856405526399612,
        -0.03869229555130005,
        -0.0013752860249951482,
        -0.058203794062137604,
        -0.025731686502695084,
        0.06118591129779816,
        -0.019450996071100235,
        0.024828745052218437,
        0.02014937810599804,
        0.01102349441498518,
        -0.09863678365945816,
        -0.056232307106256485,
        -0.13958191871643066,
        -0.015632933005690575,
        -0.017758777365088463,
        0.00011893155897269025,
        -0.03763780742883682,
        -0.07257058471441269,
        -0.0260467566549778,
        0.056975264102220535,
        0.006717413663864136,
        -0.008996435441076756,
        0.07927461713552475,
        0.03237396851181984,
        0.049972835928201675,
        -0.05903945118188858,
        -0.00718333013355732,
        0.04156622290611267,
        0.053513940423727036,
        0.07476219534873962,
        -0.06506730616092682,
        -0.014939682558178902,
        0.028147142380475998,
        -0.004529238678514957,
        0.0033637145534157753,
        -0.04883885756134987,
        -0.009444527328014374,
        0.011542975902557373,
        -0.023371702060103416,
        0.0719045102596283,
        0.07141227275133133,
        -0.04833356663584709,
        -0.03035845048725605,
        -0.04572218656539917,
        -0.07171151787042618,
        0.0097291748970747,
        -0.02118515968322754,
        -0.042311977595090866,
        -0.02894768863916397,
        0.017166465520858765,
        0.011240711435675621,
        -0.0042405156418681145,
        0.0003446298069320619,
        0.03322528675198555,
        0.03876597061753273,
        -0.04121078923344612,
        0.12157838046550751,
        -0.05610381066799164,
        0.001049137325026095,
        -0.009296558797359467,
        -0.030231185257434845,
        -0.015595759265124798,
        -0.016706708818674088,
        0.11258190870285034,
        0.032757971435785294,
        0.057603199034929276,
        -0.04371250048279762,
        0.04110116884112358,
        0.009243911132216454,
        -0.09351056814193726,
        0.059461161494255066,
        -0.010519010946154594,
        -0.023884020745754242,
        0.020261745899915695,
        0.0024565302301198244,
        0.06582458317279816,
        -0.01786152645945549,
        0.07620297372341156,
        -0.017163878306746483,
        0.02696354314684868,
        -0.03472350910305977,
        -0.03963429108262062,
        0.06213593855500221,
        -0.029609551653265953,
        0.0019351558294147253,
        0.011890570633113384,
        0.07936664670705795,
        -0.06734837591648102,
        0.0417935885488987,
        0.031543098390102386,
        0.02348870411515236,
        0.12324514985084534,
        -0.01535082794725895,
        0.03558671101927757,
        -0.03759560361504555,
        0.0035392739810049534,
        -0.002509054495021701,
        0.05497223138809204,
        1.2113805035797626e-32,
        0.05059070885181427,
        -0.00948919914662838,
        -0.1041291281580925,
        0.03237916901707649,
        0.03495609015226364,
        0.014468958601355553,
        0.004011003766208887,
        -0.0056356447748839855,
        -0.10235513746738434,
        0.044895004481077194,
        -0.04945302754640579,
        -0.04968438297510147,
        -0.02507738023996353,
        -0.03305377811193466,
        0.03242487832903862,
        -0.04884127154946327,
        0.055931445211172104,
        0.047624778002500534,
        -0.014477095566689968,
        -0.004334279336035252,
        0.01639295555651188,
        -0.030109595507383347,
        0.03780225291848183,
        0.0035169692710042,
        0.0829683169722557,
        0.009967327117919922,
        -0.06581556051969528,
        -0.021864185109734535,
        0.08526574820280075,
        0.0683513656258583,
        -0.098141610622406,
        0.029063161462545395,
        0.010647821240127087,
        -0.06810468435287476,
        -0.03205302357673645,
        -0.07062090188264847,
        -0.0731227844953537,
        -0.1082034558057785,
        -0.015871936455368996,
        -0.024426400661468506,
        0.017420144751667976,
        -0.06292456388473511,
        -0.051221445202827454,
        -0.07465098053216934,
        0.04175974056124687,
        -0.058628764003515244,
        -0.0916653424501419,
        0.003332847496494651,
        -0.06834429502487183,
        0.0642271339893341,
        -0.08778782188892365,
        0.02479974925518036,
        0.01775621809065342,
        -0.08346200734376907,
        -0.0907633975148201,
        -0.08805317431688309,
        0.014407149516046047,
        -0.033751800656318665,
        0.040132708847522736,
        0.022628052160143852,
        0.013044069521129131,
        0.05881201848387718,
        0.07216536998748779,
        -0.05233994498848915,
        0.024699870496988297,
        -0.045211877673864365,
        0.03679078072309494,
        -0.008320565335452557,
        0.003254988230764866,
        0.05650070682168007,
        -0.11039578169584274,
        -0.041532017290592194,
        0.0056802621111273766,
        -0.06076808646321297,
        -0.07435385137796402,
        -0.03558238968253136,
        -0.013037601485848427,
        0.03640473261475563,
        -0.0018756994977593422,
        -0.03327213227748871,
        0.07912060618400574,
        0.015696901828050613,
        -0.028683830052614212,
        -0.026392117142677307,
        -0.013981621712446213,
        -0.01952797919511795,
        0.0060156844556331635,
        -0.07374516129493713,
        -0.06234519183635712,
        0.10122976452112198,
        -0.04655680060386658,
        0.03308232128620148,
        0.0008378791972063482,
        0.01157620083540678,
        -0.07260546088218689,
        -1.368684349454435e-32,
        0.02640695869922638,
        -0.013394568115472794,
        0.03344552591443062,
        0.018956048414111137,
        0.043190401047468185,
        -0.00905927736312151,
        0.006879783701151609,
        -0.01868988759815693,
        -0.005581711418926716,
        -0.011501635424792767,
        -0.0340324304997921,
        0.06560511887073517,
        -0.06090067699551582,
        -0.05567855387926102,
        0.12212774157524109,
        0.019603772088885307,
        0.02839960716664791,
        -0.03064451552927494,
        -0.05296565592288971,
        0.010227133519947529,
        -0.03398854285478592,
        0.008532770909368992,
        -0.02287793532013893,
        0.07233840227127075,
        -0.050448980182409286,
        0.016326121985912323,
        -0.039643559604883194,
        0.04856840521097183,
        0.001765608205460012,
        0.030270110815763474,
        0.008142944425344467,
        -0.04142092168331146,
        -0.04396145045757294,
        0.09242033213376999,
        0.03754682093858719,
        -0.0732525885105133,
        0.09642712771892548,
        0.09953363239765167,
        -0.03541766107082367,
        -0.10602421313524246,
        0.10860848426818848,
        0.012227596715092659,
        -0.09364338964223862,
        -0.02841733582317829,
        -0.003835127456113696,
        -0.025584187358617783,
        0.032100122421979904,
        -0.019980160519480705,
        -0.05928682163357735,
        0.012634820304811,
        0.07652919739484787,
        -0.06286374479532242,
        0.03112553060054779,
        -0.0473128966987133,
        -0.00998980924487114,
        0.01890685223042965,
        0.002820804249495268,
        -0.0030425055883824825,
        0.024836203083395958,
        -0.07793636620044708,
        0.018043531104922295,
        -0.016963019967079163,
        -0.023781688883900642,
        0.055526699870824814,
        0.059879887849092484,
        -0.028300713747739792,
        -0.025967873632907867,
        0.017675837501883507,
        -0.047624848783016205,
        -0.05437137186527252,
        0.057555753737688065,
        0.022909771651029587,
        0.05210212990641594,
        0.03766896203160286,
        0.022279798984527588,
        -0.06572288274765015,
        -0.04627363011240959,
        -0.1079905778169632,
        -0.045062799006700516,
        0.03192894533276558,
        -0.024680182337760925,
        -0.0595225915312767,
        -0.06744369864463806,
        0.020178867504000664,
        -0.0016514398157596588,
        -6.569939432665706e-05,
        0.037149012088775635,
        0.06668248772621155,
        0.05035237967967987,
        -0.057505398988723755,
        -0.05223061144351959,
        -0.018558764830231667,
        -0.0876551941037178,
        0.043163470923900604,
        0.0640038549900055,
        -6.051075018831398e-08,
        0.029394157230854034,
        0.005244286265224218,
        -0.025019068270921707,
        0.1036543995141983,
        0.006787813734263182,
        -0.004453171510249376,
        -0.004176854155957699,
        -0.09673050045967102,
        -7.041936623863876e-05,
        0.02022244967520237,
        0.052424266934394836,
        -0.030258657410740852,
        0.005043364129960537,
        0.019864536821842194,
        -0.05975370109081268,
        0.08175565302371979,
        -0.040302082896232605,
        0.03353900462388992,
        -0.023298827931284904,
        -0.053520940244197845,
        0.024561356753110886,
        0.03827836737036705,
        0.07309073954820633,
        -0.01536579430103302,
        -0.03165484592318535,
        0.019646700471639633,
        0.03018517792224884,
        0.02471161261200905,
        -0.0020265544299036264,
        0.01976931095123291,
        -0.1107061356306076,
        -0.06640609353780746,
        -0.024991368874907494,
        0.020561201497912407,
        0.0047712926752865314,
        0.055718425661325455,
        -0.07484772056341171,
        0.011360250413417816,
        0.07742368429899216,
        0.05311182886362076,
        -0.0032050805166363716,
        -0.009256679564714432,
        0.014571747742593288,
        -0.0003903727629221976,
        -0.11882326751947403,
        -0.0216547679156065,
        -0.006064400542527437,
        -0.0017455621855333447,
        -0.03782432898879051,
        0.005986356642097235,
        -0.01356513425707817,
        -0.012992924079298973,
        0.04389447718858719,
        0.15755899250507355,
        0.04799804836511612,
        0.016310907900333405,
        0.05649520829319954,
        -0.05946613848209381,
        0.08643440902233124,
        0.056753478944301605,
        0.052764710038900375,
        -0.02256709337234497,
        -0.024822359904646873,
        -0.03849764168262482
    ]
}