{
    "id": "HYzbihjcbLs",
    "title": "NSA Backdoor in Windows? This and more from the guy who created Windows Task Manager!",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2023-07-23T14:30:05Z",
    "video_url": "https://www.youtube.com/watch?v=HYzbihjcbLs",
    "category": "People & Blogs",
    "tags": [
        "task manager",
        "windows task manager",
        "microsoft windows",
        "source code",
        "how to",
        "windows xp",
        "windows 10",
        "windows 95",
        "operating system",
        "windows 8",
        "windows 11",
        "task manager windows 11",
        "history documentary",
        "windows tips",
        "dave plummer",
        "windows nt",
        "windows 98",
        "zip",
        "unzip",
        "winzip",
        "pinball",
        "nt",
        "nsa",
        "windows nsa",
        "windows backdoor",
        "windows zip",
        "rust",
        "python",
        "golang",
        "best language",
        "best computer language"
    ],
    "views": 468224,
    "likes": 12827,
    "comments_count": 926,
    "description": "So many stories and so much advice from Dave Plummer - the original creator of task manager and other interesting software like unzip on Microsoft Windows. Did the NSA have a backdoor in Microsoft Windows?  Should you learn Rust or GoLang? Learn from someone who has years of development experience!  // Daves Social // Youtube:   Twitter:   LinkedIn:    // Great videos on Dave's channel // Windows Task Manager:  Windows Clock:  Windows Start Menu:  Windows Zip Folders;  Windows Activation:  10x your code with ChatGPT:   // Great Playlist on Dave's channel //   // David's SOCIAL // Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:   // MY STUFF //   // SPONSORS // Interested in sponsoring my videos? Reach out to my team here: sponsors@davidbombal.com  // Menu // 00:00 - Coming up 01:01 - Dave Plummer's history 02:26 - Dave's Garage  03:33 - How Dave started at MicroSoft 06:15 - Task Manager  10:36 - Other Operating Systems 11:06 - What OS is Dave coding on? 11:30 - How Dave got into coding 13:14 - Advice to younger people 14:18 - Sell your work, not yourself 15:38 - Still coding long after Microsoft 16:22 - Visual Zip 18:40 - Show your work 19:31 - Was it easier in the old days? 21:07 - Would you use Rust today? 21:43 - Should I learn C? 22:10 - What language is Windows written in? 23:14 - ZIG and other programming languages 25:05 - Start with Python 26:32 - Write your code right 27:00 - Windows 95 vs NT 30:00 - 20-year-old code still in Windows 30:47 - Task manager is still the same 31:11 - Politics between Win 95 and NT team 31:48 - Product Activation  33:42 - Loved for task manager; hated for Windows activation  35:05- Open Source 36:00 - Who is looking at your code? 37:15 - NSA and backdoor access to Windows 38:07 - Sneaking code into Windows 38:53 - Windows Easter eggs 39:54 - Doom on Excel 40:17 - Secret messages in MS DOS 40:46 - Pinball  43:49 - The Start menu 45:08 - Calculator and Clock  47:58 - Blue screen of death 48:59 - Chat GPT 51:01 - Chat GPT and bad code 51:30 - Plans with your channel  52:27 - Meeting Dave in person 52:45 - Outro   microsoft windows microsoft windows windows nt windows 98 windows 95 python  rust  #microsoft #windows #cybersecurity",
    "description_links": [
        "https://www.youtube.com/@DavesGarage",
        "https://twitter.com/davepl1968",
        "https://www.linkedin.com/in/davidplummer",
        "https://youtu.be/Ve95Nh690l0",
        "https://youtu.be/Ve95Nh690l0",
        "https://youtu.be/HrDovsqJT3U",
        "https://youtu.be/aQUtUQ_L8Yk",
        "https://youtu.be/FpKNFCFABp0",
        "https://youtu.be/pspsSn_nGzo",
        "https://youtube.com/playlist?list=PLF2KJ6Gy3cZ7jCgV1VEAIcr867nCkynPn",
        "https://discord.gg/davidbombal",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.amazon.com/shop/davidbombal"
    ],
    "transcript": "Why had Microsoft apparently included a key from the NSA and Windows and what was its purpose? Had they been forced or coerced by the Government into including a breaking key that could reveal everyone's private data? So I mean 20 year old code that you wrote is still in Windows today?Yeah the thing that surprises me the most is that if you minimize Task Manager you get a little tiny draft down by the clock. Blue screen of death why is it blue and is it possible to change the color? Should I learn Rust because everybody else is learning Rust or should I learn Go because everybody's learning to Go or do I just wait until I need that and it just kind of grew from there as I was building the Task Manager didn't even know what it was going to be called Task Manager yet Windows is 99.9% C and C++ [Music] Hey everyone it's David Bombal back with a very special guest Dave welcome. Thank you thanks for having me. Of course Dave I'm really excited to you know get you on the channel and I believe you can give us a quick history about yourself for people who haven't seen you something to do with stuff in these boxes right I've got a few of them behind me as well. Yeah back in the days when software came on coasters my fingerprints were on most of them um I started at Microsoft in MS-DOS and I worked in MS-DOS for a year doing smart drive and double space and disk copy and a bunch of the utilities set up things that come with MS-DOS then I move briefly to the comm Ola team but I jumped really quick to an opportunity to join the NT shell team at Microsoft which was to take all of the Win 95 user interface from 195 rewrite Port it for the 32-bit NT Operating System and so we spent a number of years doing that where we just churned through thousands upon thousands of lines of other people's code which is actually a really good way to learn the system when you're trying to get your feet wet that's where we did a lot of the side projects like Task Manager and Visual zip and Pinball and things like that that people may recognize we're generally done in that era as well and so I worked on that all the way through XP and Server 2003 so everything from MS-DOS to server 2003 kind of that time period. Dave I really want to pick your brains about that software but I'll say this I started my sort of MCSE journey with NT 4 so NT 4 is a really special place for me so thanks so much for you know all the hard work that you did on that so let's talk about like NT 4 and Task Manager because I think that's this a really special story there you've got a lot of cool stories and actually just before we start with that just for everyone watching please go and make sure that you subscribe to Dave's Channel Dave tell us about your channel and then tell us about Task Manager. Sure Channel Dave's Garage it focuses really on two bulk topics one is programming issues and the other one is Microsoft history particularly the stuff that I was involved in so there are a number of topics that have generally proven proper popular such as uh Why are blue screens blue and who decided that they were going to be blue and that kind of thing and I have a video on Windows Pinball and the evolution and the history of that and how that got brought over to Windows and of course we talked about Task Manager and uh what are those zip folders We have a video on I believe and then some more esoteric content like scroll lock, why is it there?what's it for what's it do? what's it used for today?why do computers get slower with age and so on. I mean I've watched a lot of your videos I spent most of today watching your videos fantastic content so anyone who's interested in the like sort of the history of Windows and why decisions were made or just learning programming highly recommend that you go and subscribe to Dave's channel one of the big things you're trying to do Dave is grow your channel and I love what you said at the end you're not trying to sell something you haven't got Patreons you're just trying to get subs and likes right? Pretty much yeah that's what I made it for so. So Dave let's talk about how you started at Microsoft because I they're sort of like a theme if you like and correct me if I'm wrong but I've kind of seen this theme where you write some software and then perhaps on the side and then it opens doors or something happens. So yeah that's been a bit of a history for me yeah um initially I had put myself through college writing a software package for the Amiga called Hyper Cache which was to add OS level cache into the operating system since the Amiga lack that yeah and then for the summer I was working at the telephone company doing a 10base-T swap over of all their network from I guess they were on UbiNet at something one point and so it was kind of a grunge grind job you know going through swapping network cards and drivers and one day I went down to the food court to eat my lunch with the old and the board and I grabbed the book from the bookstore called hard drive uh hard drive it was the history of making the making of Microsoft and Bill Gates I believe yeah so I started reading this book and it was so quantitatively different from the life I was leading swapping network cards but the stories of what these people were working on and how fascinating was and the fact that billions of people would eventually wind up running it I knew that's where I wanted to be but I was in Saskatchewan going to University at the time so I decided to go through my registration cards for Hyper Cache because back in those days there was no internet yet or there was no web anyway and people would fill out these cards with their name and address and you'd mail them when there was an update to the software so people mailed these cards in and a few include their email addresses so I went through and I looked for absolutely anybody I could find with a microsoft.com email address and I just cold emailed them saying hi I'm a programmer in Saskatchewan here's what I've done and I'd love to work for Microsoft and one guy named Alistair Banks got back to me and he gave me probably the the greatest gift you can give to an aspiring graduate which is the email of a hiring manager with an open position and that turned out to be Ben Slivka who did a phone interview with me for MS-DOS and that's how I wound up being MS-DOS so it came out and did like the full interview circuit where it's five or six one-hour interviews with a lunch interview in between it used to be a pretty grueling process I don't think they do it quite that way anymore. Because you wrote the software on the side and and if I remember correctly you you actually had a little business going with that software did that kind of open the doors for you? Well it got me the job in the sense that it got me the connection initially and then when I started at Microsoft I told them I always have had a hobby of writing software on the side and we made allowances so that I could continue doing that as long as it wasn't competitive with Microsoft and so that became handy as well basically I was always working on something at home because I see something interesting in the shell at work and I'd want to Tinker with it but you kind of need an opportunity to do that that works so I would take her at home and one of the things that was very frustrating about Windows NT at least in 3.1 the very first version was there was no Task Manager there was a list of running Windows and you could end task on them but that was really it so I started thinking around with just hey I'll make myself a list of programs and I'll map that to what processes they are and I'll go through and see if I can figure out how to kill a process as it would do under not Linux at the time but perhaps Unix and it just kind of grew from there as I was building Task Manager didn't even know what it was going to be called task manager yet but I was building it at home and adding the features and functionality that seemed obvious and apparent to me that people would need because I wanted it so I was by and large writing software for myself and then I took it in and I was using it at work on my debugging machine and other developers saw it and so can I have a copy of that to try it on mine and it kind of spread around the team until it got to the notice of some of the higher ups like Dave Cutler and he seemed to enjoy it as well so he gave me the dispensation to just he said put on the top of the start menu well that kind of outraged the Windows 95 designers because they had this design aesthetic of simplification and keeping everything out of your face so sticking it right on top of the start menu was kind of an affront to them so I think we moved it down to system tools for the actual NT 4 release and uh that's where it's lived ever since. So I mean you were riding this if I if I remember correctly because you've got a whole video about this so just for everyone who's watching if you want to get more detail kind of have a look at Dave's Channel you wrote this like at home as a hobby and then then that was actually incorporated into windows and it's basically the Task Manager we have today right? Yeah I got it uh the the stuff I wrote at home was the real basics the pages and the layout and stuff like that and then once I was able to bring it internal I was able to talk directly to the kernel because when I was linking at home I was linking with Visual C whereas once you're part of the operating system you have a little greater access to some of the internal functions so it actually simplified my life quite a bit to become an internal project I think in that case. And I believe I mean let me see my notes to write you've got some like interesting names um in the code still well perhaps till today where it's like Dave's Frame Window or Dave's controls stuff like that right? Yeah there are some windows controls that actually don't paint without flicker so for example a group box erases its Center and then redraws its contents and that makes it flicker so I didn't want that so I came up with Dave's group box when I was still working very original right yeah I just stuck my name in front of the real name and gave it my custom behavior and functionality but that has stuck apparently because it's one of those things it's never a good time to go in and change and there was another example where there was a process called kill process and that was the one that would go through and actually end the process in the kernel and Jim also wanted to make that recursive so you could say unprocessed tree and it would kill your process and everything all the way down so naturally the programmer that was working on this work item just went through and replaced process with all children and so for years and the source code we had the kill all children function I was gonna say it's a rather unfortunately named function but But I mean that's not visible to me as a user right it's all in the source code? Yeah perhaps if you had a full internal debug build it would show up in maybe the symbol table but I'm pretty sure it makes it uh doesn't make it past the sanitizing action of the compiler for the public retail builds anyway. Now I remember in the old days with uh task manager I mean I started with Windows well dos and Windows 3.1 was the first version of Windows that I like had in production um you mentioned something and I I kind of when you when you said in your video I remembered this where you could elevate the privileges of a process right or and you could kill any process with task manager but they've kind of like limited that these days is that right? A little bit so initially we allowed you to kill absolutely anything including the win logon process which would instantly terminate your session and tear down the machine because you do technically have the rights to do that if you're an administer where if something is running in another user session entirely because NT is a multi-session multi-headed workstation normally they don't allow you to kill things in other people's session but task manager knows it could if you wanted to so so it just goes ahead and does it for you so you're limited only by the security and the axles and everything you have on your account and we found that journalists were having a great time killing win log on or bug checking the system by killing important pieces of the system and saying oh look how unstable the system is but I mean you can kill negative nine the wrong thing on Linux two and get the same results so it's one of those don't do that things. And it's interesting because when I've watched some of your videos you always had a piece and I don't want to get into like the the Flaming Wars but like Linux versus Windows and I mean you said something along the lines that you go immediately into DOS prompt or like Powershell or something in Windows it's not like you're just a windows guy you know multiple operating systems yeah I do most of my development under Linux on WSL too on Windows and then I spend the other half of my day probably because I have the YouTube channel on a Mac in Final Cuts and so on so I I actually mixed my day almost one third I would say between the three systems so each one has you know what they're really good at. Yeah exactly I mean it's I always find it hilarious when guys like try and like this is the best operating system on Earth it's like it just depends on the use case I find because I use Windows I use Linux and I use Mac right so are you coding for like is this just your like your own projects again or when you're coding in Windows obviously you wouldn't be coding on Linux or is that what you were doing in back in the day actually everything I've written in the last five years is fully compatible that it will run our Windows Mac or Linux and that's just been a case of even if we're writing a C sharp we use the mono framework so that it will again run on the Mac and Linux so I've tried to keep all of my code on GitHub building for all three systems equally. So going back to like when you started did you code as a child or did was that that project that you mentioned that got you that sort of opened the doors at Microsoft was that the first coding that you did really or how did you get into it? I was born in 68 so I was around 10 in 1978 to 80 in that window there and I happened to walk into a Radio Shack store and they had a box uh the TRS-80 model one level one 4K the very first one that came out from Radio Shack and it's a computer on the side and I was pretty fascinated by that so I asked them can I use it and they said well it's not set up yet I said well can I set it up for you and they kind of laughed at me and said sure kid have a shot in reality it's not much different than setting up a component stereo you know that's just cables one or the other except Tandy and their Infinite Wisdom back in the day used the same five pin DIN connector for power video and keyboard so you had many chances to blow it up but I managed not to so once I had it up and running they were pretty impressed by that and they allowed me to ride my pedal bike down there every Thursday night for nighttime shopping and I'd spend several hours on Thursday and sometimes on Saturday um tinkering away in a TRS-80 model one and I knew absolutely nothing about it I thought it was a computer so I was typing English sentences in and getting SN errors which I thought were spelling but were of course syntax I just didn't know what syntax was yet but within a week or two I figured out that there was a set of commands in basic that you could use to build basic apps and so I started coding in basic around 10 I would guess 10 to 12 somewhere in there and then by the time I was 15 or 16 I had tinkered a bit with machine language on the Commodore 64 and I moved pretty much to everything in assembly at that point. I said in those days you were programming in assembly yeah largely well the first thing I did was a machine language monitor it didn't have an assembler so it was literal hex codes and if you wanted to insert code you had to jump out execute jump back it was just horrible spaghetti nonsense but it was a good way to learn the lower levels of the machine. So I mean what's your advice to people today or young people who want to get into coding is there any like or development let's say their dreams to work for a company like Microsoft do you have any recommendations of things to do programming languages you've done the you've been down this road many many years of experience what you know what's your advice to younger people or someone who wants to start out. Yeah my recipe today is different than it would be 20 years ago I think today I would focus on being really proficient in Python not because you're going to write products in Python but it's just such a functional tool for what developers do all day long that I think knowing and being proficient in it is pretty much essential and then from there you want to be writing in a language like C++ or even c-sharp I suppose Java depending on the industry you want to get into but those will be the big three and once you've developed proficiency in those I think if I'm a hiring manager and you're talking to me my first question is going to be well do you have any code on GitHub that I can go and look at so I think contributing to open source projects and biting off big chunks and doing important pieces of multiple different projects goes a long way to show both your ability and your flexibility. Yeah so in other words it's important to show your work right and put it on GitHub. Yeah that's something now I have autism and that's something that I coach people that have Asperger's and autism to do which is to sell their work and not themselves because they may not shine at the personality level in an interview regardless of how technical and brilliant they may be so for some folks and myself included I think it's easier to focus on what can I actually do for you as opposed to how wonderful of a person am I not that they're not wonderful people it just doesn't come across all the time. I just wanted to say I mean at the end of the day when you have someone writing code you're not there you've been in the games you'd correct me if I'm wrong but I mean if you want someone to to write good code that's their job it's their job is not to be like like a salesperson it's a different type of role different kind of skill set right? Yeah it very much is I was somebody who remained an individual contributor for as long as I could because as I got in it because I love code and I love coding I didn't grow up saying I wish I could go to a lot of meetings so it didn't really push that hard in my career for that there's sort of an inexorable draw towards management as you go through any career I think and the bar is probably a little lower when you're managing people than trying to just survive by your own technical merits so it's an easier path for some folks but I always wanted the code and so I still code most of the day today even though I've been retired for 20 years I'm still sitting in my shopping studio here coding in C++ because it's what I love to do so yeah.But you said it offline we didn't record that you've you you finished at Microsoft 2003 time frame right? Right I was there until 2003 was when I left but you're still coding to till today in other words you've got this love from full coding since a young age and you haven't stopped?Yeah after I retired I spent a couple of years doing 3D graphics and learning everything that I you know starting kind of where I left off in college and then building with DirectX and Direct XII through some fairly complicated graphics just to get my feet wet and to understand that because it's an important area and I've done a bunch of database work again I've done a bunch of work in areas that I'm not super comfortable in in order to expand my skill set. I mean what I love about your story and I mean I want to talk about the zip thing so let's talk about zip and then I'll come back to like the career stuff because sure what you've said about showing your work I mean that's opened so many doors for you and brought you I don't want to give it away red things let's leave it at that so let's talk about the zip episode if you like. Yeah it's the perfect case where there's absolutely no personality and only code involved because I that's something I had written at home and was selling as a shareware product and just for some backstory before that you would use command line tools to unpack a zip and then WinZip would come out a couple years around the same time maybe a couple years later but we're looking for a way or I was looking for a way to learn the new shell API which allows you to host uh different things within a shell folder such as you can have control panel outlets or files or different things to be hosted in it so I thought what if I was to take a zip file parse the internal structure and then expose that as a folder hierarchy that you could just browse through and grab the file you wanted it seemed to fit in really well with the new shell paradigm so I went about writing that and then got it finished and it was called visual zip I was selling it as shareware and I was selling maybe a dozen copies a day something like that at the time and I was leaving for work one morning and I got a call from a lady at Microsoft he said are you the are you Dave Plummer and I said yes and she said did you write visual zip and I said yes or she probably called it yeah she's called visualize it um and I said yes she said ell we'd like to talk to you about an acquisition of buying it to include a Windows and we will you know have you come in and talk about it and I was like great what building are you in I'll be right over she's like whoa whoa you gotta talk to Microsoft legal and travel and all this and I'm just like totally confused because well I already worked there why would I have to go to see the legal department to come to your building and that's what I figured out neither one of us knew that she didn't know that I didn't or that I worked at Microsoft already and she had just cold called the author of this piece of software to see who owned it and turned out to be me so uh once it's your own company that you're negotiating with and you've got a stipulation clause that you can't compete with them anyway you're kind of stuck in a bad position where you take whatever offer you get and that's kind of what I did so I took their first only and best offer and I bought a used 94 Corvette at the time with it so I had that for a long time and that was my visuals at mobile. But I mean the story is from what I've you know sort of the thread through your story is you love coding and development you you wrote the stuff on the side and a lot of the tools that we used today exists because she did this on the side and it opened doors for you? Yeah it sure did open doors for me that's certainly true the fact or to the extent that other people find the stuff I've written for myself useful I mean I love that but it wasn't necessarily an attempt to write something that everybody would find useful so much as write something that I really think would be useful and then luckily other people find it so as well. Let's go back to like the advice to young people people who starting out it's like you said like show your work and I mean I you and I both on YouTube If you're looking for a video editor I don't care what your personality is it's like can you edit right I think you'd show me your work is it's the same kind of thing if you're putting your work on GitHub or you're making your products like you did in selling it that just opens doors rather than like trying to make a speech or something especially if you struggle to talk. Right yeah I think uh being able to demonstrate your technical ability in that market is really important and you can only get so much across even on a whiteboard interview you can do pretty well in a whiteboard interview but many companies don't do those anymore they just sit and talk for 45 minutes and you're supposed to convince them that you understand why a C++ class with a virtual function needs a virtual destructor and it doesn't come across in that kind of environment I don't think so if that's what you're good at you're gonna have to find some way to get that across and your work is probably the best way. So you mean another criticism a lot of young people have is like it was easier in the old days than it is today and then all the old-timers say well it's so much easier today what are your thoughts you know if if I was starting out today is it easier to get into this now I mean it sounds like in the old days you had to do assembly and all low-level stuff it sounds like the past a lot easier today with Python. Yeah I think it's a different landscape so back in my day the landscape was much smaller no one person could understand all of NT but you could understand the storage manager or the heat manager or the shell and know that piece really really well whereas today the system is so big and so wide the landscape of what is involved in a PC that you can't know everything about it so you almost have to specialize I think in my day I specialized in operating systems because that was where my fascination was but other people may find other niches to be active in and the big thing I think is that you achieve mastery in at least something as opposed to being a dilettante and being good at 100 things be good at least one thing for sure I guess. That's great advice I mean become an expert in in like you were in Operating Systems don't try and like do web programming and windows programming like focus on something right right that's a question I often have for other people that are in my position uh is at what point do you decide to learn something should I learn Rust because everybody else is learn and Rust or should I learn Go because everybody's learning to Go or do I just wait until I need that and I never know and you know if it's been around several years yeah I'll go learn Rust because it's been out five eight if you know your number of years now but I'm not one of those jump on the immediate coattails of the coolest thing because so many things have come and gone in the last 20 years yeah. I'm glad you mentioned that I had it on my list here because you mentioned Python C# C++ maybe Java but you didn't mention Rust and you didn't mention Golang like you'relist still the same or would you say have a look at Rust today I would definitely look at learning Rust today especially if I were just starting out my thought on Rust is that it's great and it provides you a great level of safety sense and security that you can also achieve in C++ by not doing silly things um if you don't try to manage your own memory and strings and all the other things that are so air prone in C++ and you use the new C-17 1420 versions of the language facilities you can avoid stabbing yourself the way that you used to and so Rust, Rust is one way to solve that problem but it's not the only way. And should I learn C? I think so I I think you have I think everybody needs to learn C at some point. And but not use it in production I mean just just use it to learn or and then go and Go and use Rust. I think the thing is you will run into it in your career because the C is so ubiquitous in the industry that if you get to a chunk of code and you can't read it it's going to look rather odd so you should at least be very familiar with C even if you don't write production code in a daily or anything. How much of Windows is written in is it C or what languages is Windows written in? C or Windows is 99.9% C and C++ and in my day it was probably 50 50 split between C and C ++ with more stuff migrating to C++ in fact in the Shell the shell code is actually kind of fascinating because it's C++ and it uses comm and Ola but it is not C++ and it doesn't use commore directly wishes to say they manually set up their own V tables on classes and invoke through the jump table because they don't want to load comm dll they don't want to load Ola a32 dll and they don't want to load all these other dependent dlls so they wound up recreating a lot of the infrastructure in the Shell to just never have to load any external code and I think that we removed a lot of that in NT because I think a lot of that came from the four megabyte minimum working set of Windows 95. um they had to do a lot of tricks to run in four Meg. So yeah I want to talk about the difference between 95 and NT because I mean that was a huge shift but just before we get there we're talking about languages you did a speed test of various I think it was 100 languages and I think it was a new language that I'd never heard of Zig or something that came there was like top top of the list is that right? Yeah a number of years ago actually about two years ago I wrote a prime sieve and then I thought well I'm going to write this in C++ and I'll write it in C# and I'll write it in Python and I'll write the exact same algorithm in all three different languages and then we'll drag race them and see how it turns out so there's an episode on that and spoiler alert Python does not win um the C++ one did the best but that's probably because that's where I'm most proficient so I thought what if I put this up on GitHub and I allow other people to contribute their code and solutions to it and pretty soon I started to run away and I had to find people to help manage the GitHub projects and I've got Rutger in the Netherlands who does that for me now and he's been essential because there are 100 languages with a couple hundred different solutions or implementations and I gotta confess that half of these languages I'd never heard of so if you know 50 languages they're not known for that if you've heard of 50 languages you're doing pretty well the other 50 were all uh new to me I would say or if not half many of them so we did all 100 and we have an automated system that every day goes through it builds every solution builds a Docker container for each one test the solution and ranks and scores it puts in a database and so we've had pretty good handle on the performance trends for a while and Rust and Zig both overtook C++ in recent months and I believe Go is right up there as well but uh Zig is definitely for some reason the fastest and I've looked at it a bit I can tell that the language seems to provide some level of facility for multi-threading within it as opposed to making the programmer do everything manually like you do in C++ largely so I think that's giving them a leg up but I haven't decided if the compiler itself is smarter or what's causing it but the numbers don't lie so for now Zig is the fastest. But I think RedOx Rust was two is all right? I think Rust is number two and then C++ was three. YouTube's interesting places I mean you know this because you you've got a huge Channel and you get crazy amount of views which is fantastic to see people will like say bad things about Python I mean you mentioned Python didn't come first because it's a slow language would you say if I'm starting out Learn Python and focus on getting good at that rather than trying to get like the most efficient code I mean you can you can use the more efficient languages later. Yeah I think that premature optimization is one of the great evils of software uh people tend to try to make things fast before they make them right then it gets just worse and worse and worse so I wouldn't write anything that was super perform a sensitive in Python but the last Python script I wrote was to be able to grab a YouTube video take the frames as they come off scale them down to 64 by 32 Wi-Fi them over to a matrix and draw them on a display and it was less than a page of code and it ran at full 60 frames a second so what more do you really want to ask of a language if you need more speed like C++ let's hope you're doing some very fine grain things that are called an awful lot because for most things Python will get you 95 of the way there I think. I'm glad you said that I mean if you're riding kernel level stuff like you were operating level stuff that's a totally different ball game but for most of us you know we're starting with applications like that was a use case that you found really useful for Python so I think I always recommend start with Python and I'm glad to hear you saying the same thing. Yeah the number of cases where you need to be in there counting actual machine cycle or machine cycles like we used to is pretty uncommon if you're writing again the heat manager or a thread schedule or something like that that is called millions of times per second then it's essential but if you're writing a piece of code that's going to be called once and you just need the results it's probably fast enough yeah. So I mean you need to focus on writing your code right rather than trying to get it optimized because I mean if you write it badly it doesn't matter how good the optimization is right?Yeah so a lot of that comes from doing it right the first time which you can't do because programmers generally write a really terrible version for the first version because they don't know what they're doing they don't know what they don't know yet and then they come along and they write the second version where they have a dangerous level of knowledge where they make it super complicated and over engineer it and then they come back the third time and they write it like they should have the first time but it usually takes three iterations to get something really well done I think. So let's talk let's switch to like 95 versus NT I mean that was a massive change so can you give us a bit of like insider stories just everyone is watching Dave's got a whole bunch of these insider stories and we've kind of like spoken a few about a few of them but tell us a bit about the stories of like 95 versus NT and how it changed? So in late 94 95 before this before Win 95 had shipped there was an effort amongst some Rebels at Microsoft to take the Windows 95 code and put it on NT and the reason that was rebellious is that NT already had a user interface plan for Cairo and it was completely different I had folder hangers and it had some features the Windows 95 didn't and it lacked it was just different Cairo is a long way away so at some point somebody made up T-shirts for Microsoft Tukwila which for context is probably 30 miles from here the the joke being we know where it is and we can get there from here and so that became the internal code name and the push was to take all of the code that gave you the user experience Win 95 and adapted for NT now some of that is really easy because it's both the win32 API so a lot of the code just translates directly the problem the biggest problem is that Windows NT is fully Unicode so it has to support the Asian character sets the Middle East and right to left reading and everything in the base system so that means 16-bit characters and when you're a programmer if you've been writing in C you've probably been assuming for your entire life that a character is one bite and all of a sudden it's not and so every line of code that ever made that assumption assumption or that a Buffer's length is equal to the number of characters times one for the number of bytes that's also wrong size ups are also wrong so there's just a ton of code is all of a sudden wrong you can catch a certain amount of that with automated tools but bulk of it was going through line by line and reading every piece of code and seeing what it was doing and where the assumptions were wrong and broken again as I mentioned earlier it's a great way to learn code because you're going to look at every line of the system by the time you're done and it probably took us a solid year to get it to the point where it was running well in Unicode there was an initial boot where we did it in ANSI but had everything working on NT but of course we can't ship that because it's English only and NT is an International System but it was sort of the first foothold getting it working in English the compatibility was really tough because imagine on disk you have a shortcut file for Win 95 it's got all this information packed in there about the path and all that but it's antsy so when Windows NT has given one of these it can parse it using the official format but when it goes to if you rename the file and then throw a kanji character in the middle of the name what's it going to do with it and it winds up having to store everything in a way that is invisible to Windows 95 but present for Windows NT systems and yet Windows 95 will preserve and take that information payload around with it so it gets fairly common complicated to do this in a way that's totally backwards compatible with almost no help from the backwards compatible system because they were not you know they were on a death march to get this thing out the door they weren't going to make a bunch of changes to make our lives easier so they just shipped what they shipped to get it working for Win 95 and we had to adapt it from there. I mean in today's world we've got Windows 11 at the time of this recording a lot of what you and the team developed in those days either is part of Windows 11 today or it's like an iteration of that is that fair to say I mean the original uh histories from NT. Yeah I would bet that 80 to 90 percent of the Shell Code that we rode for NT4 is still in there and they've built on top of that of course to add new features and functionality but Plumbing is all the same underneath so. And how many years ago is that? 20 at this point so I mean 20 year old code that you wrote is still in Windows today?Yeah the thing that surprises me the most is that if you minimize task manager you get a little tiny draft down by the clock and it's 10 frames you know 10% 20% 30% and so on up to 100 and I drew those in the visual studio 2.0 resource editor in 1993 and they're identical and they haven't changed so it's the last Vestige of any well I guess except for the format dialogue it's the last UI that I wrote or that I designed quote unquote designed that's still in the system so that's met and I mean task manager is is still similar very similar to what you did all those years ago yeah the code is largely the same and they've added a new page uh for the GPU and sort of that sort of type of thing where as they add functionality but the basic thing is still there and it just built on top of so I'm rather fortunate to have code in there that's over 20 years old they haven't thrown away and started again yet it seems so. But I mean it just shows you how good the system was I mean I'm assuming there's a lot of politics in those days between the Windows 95 team and the NT team. There was I was kind of isolated from that because I was just an angry code monkey just writing code and um fortunately insulated from most of the back and forth politics but you can imagine that we're taking their code and we're saying oh this is nonsense look at all these assumptions you made and we got to fix it and make it right then we'll check it into our tree and we'll give it back to you when we're done so you can use it that message may not come across if it's not delivered carefully. So Dave I mean I love hearing stories um especially you know this stuff still affects so many of us today have you got any other cool and interesting stories or just like outrageous stories that you can share? Well there's one that I wasn't going to share but somebody else shared it for me a couple years ago and that is I did Windows product activation it was the last thing I worked on it was my last major project so that's when you enter your CD key and it does the back end connection and the hardware ID and does all the enforcement and we really did try to make it as nice and pleasant for the user as possible but there's a case where you have an OEM key and this key is intended to say only work on a Dell Latitude from 1997 and so what you do is you encode a digital signature for those strings in the system bios where they appear but for that payload to be small if we're only if you buy it you can upload that to use net and other people could download it at the time and they would a hole through activation so to make it hard to do that I made the file I think it was 10 megabytes which in those days took a long time it took like 10 hours to download 10 megabytes over a modem so um I figured that would slow people enough that it would be a hurdle to piracy and it's a 650 Meg CD so it's not really taking up any room on the CD because we had lost spare at that time but what to put in the file I wanted to make sure that it was non-compressible so you couldn't just archive it and transmit it easily and I wanted to make sure it was nonsense and encrypted so I started with a set of disk images that I found on our product server which happened to be Microsoft BoB so I took the six or seven or eight floppies whatever it is for Bob and I packed them all together and I encrypted them with a couple different formats I think truecrypt was popular popular at the time and we used uh the internal encryption as well and finally went up with this 10 megabytes of goo and it has shipped on every CD of every Microsoft XP and some of the subsequent operating systems as this payload that follows a round activation keys and nobody knew it was actually Microsoft Bob except when I was leaving the company I figured I gotta tell one person because if they ever have to fix this or undo it there's got to be somebody who's got to know this so I told Raymond Chen and uh I saw a blog post a couple years from him about it so that secret's out of the bag but uh I probably shipped a lot more copies of Bob than they ever did I would imagine. That's funny I mean I just like looking at this from the outside you must be loved for task manager and you must be hated for Windows activation. Yeah probably um I mean even my mom doesn't like activation and she's my mom so what are you gonna do but uh we really did try to make it as flexible as possible particularly in things like the hardware ID so if you go and get a new GPU and you put that in your system you're not suddenly inactivated we look at it and we say well same amount of RAM same CPU same amount of hard disk space same number of drives it's probably the same machine so there's a lot of cases where the system says it's probably all right or if you go to activate it the third time and it's only been 2 years it's probably all right so they build a lot of leniency into the system we tried to make it so that all the policy would be effective on the back end so the system was always fully secure and locked down but the back end could be as gracious as it wanted down to the level of just saying activate everybody for free if they ever had to so we gave them the flexibility I think the really painful part of activation was if you had to phone it in read your CD key into a automated voice system or punch it in with a T9 I think that experience was terrible but fortunately very few people are in that boat where they have a completely disconnected system that they can't get any kind of connectivity to so hopefully that painful case is sufficiently rare. Yeah I mean it's I understand why you had to do it you've made a video on your channel where you talk about open source and I mean I'll just throw this in as like in like something hopefully won't make too many people upset but you said something along the lines that open source like Linux has closed parts to it and I don't think a lot of people realize that. Yeah I took a lot of heat for that one there was some pretty tense I can imagine yeah I can imagine Reddit threads my point was that in a system like Linux even if 99 of it is open sourced and readable if the system ships with closed binaries that run in ring zero and you don't know what those do or if they run on a driver or they run in a chip and an expansion card and you're just giving an opaque driver for it well it doesn't matter how much code there is that's closed if there's any code that's closed that runs privileged then it's not a fully open source system now the one thing I didn't say is that there are fully open source versions of Linux I think mint is one and if you're careful but unfortunately those aren't the distributions that people actually run they run Ubuntu and it comes down with opaque driver sets and it was really more a philosophical argument than any assertion that I thought there was anything nefarious in the closed drivers but from a philosophical perspective they're both closed systems to an extent so. And I mean it's only in the recent day well it's only like I think was last week Red Hat changed things so I mean there's a whole blow up about Red Hat anyway at the moment something you also said which maybe people don't like it but people assume because it's open source all the codes going to be looked at but you made this point which I thought was really interesting that just because the code is open source doesn't mean that someone with the expertise is going to look at all the code right? Yeah having a million people look at your heat manager is not as good as having 4 people that are really qualified to be writing heat managers so it's really about who's looking at your code who's writing it who's fixing it who's debugging it and who's being diligent about it and that can vary entirely by process and I I don't mean to imply that Linux is anything but well managed and well engineered but it's not a guarantee just because it's open source because it's the eyeballs that are looking at the code that are important and not the number of them. I mean just recently it's again in the last few days is this huge vulnerabilities in Linux so just because it's open source doesn't mean it's not going to have vulnerabilities and be able to be hacked for that reason that you mentioned on other reasons? yeah vulnerabilities do come up and you can ask the question well everybody saw this code there were millions of people looking at this code and nobody saw it so that's kind of the example of why it's not a guarantee by any stretch. So let's talk about security because a lot of people watch my channel into security it's and cyber um there was you did this interesting video about the NSA there was some like code or like key in the in Windows that was called NSA something and then a lot of people assume that the NSA had backdoor access. Long story short no the NSA did not give Microsoft a backdoor key to break into Windows and I've seen the code and it's all right I'll tell them I'll tell them no I'm just kidding um well it's really unfortunately named it's the fact that you've got a grid inside the code base called the NSA key that you have to explain away in later years and that's really the jackpot there it's not that it's doing anything everybody I'm sure educational institutions have access to the NT code and there are other groups that have access to the NT code so if there were a back door and it were that transparent it would be obvious and well known at this point. So Dave have you have you got any examples of where someone snuck something into the Windows code or did something perhaps nefarious was a joke yeah. I don't know of any examples of that I do know of one example in MS-DOS where an intern put a secret message in MS-DOS but that's the only and it was caught before it got in so I've never seen any nefarious code get snuck into it and everything is pretty well scrutinized by the time it gets into the main source tree not that it's impossible it's just that it's never happened to my knowledge and it wasn't something that I think a lot of people thought about so if you can put your initials maybe in something I I've seen that kind of level of vanity and when it comes to operating systems and I've done that myself where you need to come up with a signature well DP works as well as zero seven forty four so why not but in terms of nefarious code no I've never seen anything really. For years Windows has had these Easter eggs right so could you explain what an Easter egg is and give us an example where I think your name is in one of these. Yeah it's in a couple uh Easter egg is basically a code feature left in that traditionally displays the names of the programmers and engineers and people that contributed to the Operating System theygo back I believe well back to the 60s if you look hard enough but in modern software the game adventure from activation I believe there was a secret room that you could run into and if you put your guy over a particular pixel a message would pop up telling you who the original programmer was and so that's one of the very first Easter eggs the ones that are in windows are generally there with wide knowledge and by the time they make it to the operating system implicit consent from the op from the management that it's okay so there's no secret Easter eggs but they are generally hidden and the real requirement for an Easter egg are look it can't slow down the system it can't take up RAM it can't take up disk space and to any measurable extent so you have to encode your vanity well I guess because they don't want something it was an example and I don't want to slam on it because it's not my team but I think Excel shipped with like an entire doom game inside of it where if you did something. I was just thinking about that there was I remember there was a game in in one of the products I can't remember which one. As far as I know I think you had to use the CD to load it so that it wasn't taking up your hard disk working space but uh it got a bad rep for being a large thing within the app and everybody's like well excel's got Doom built in no wonder excel's so big the only case I've seen where anything untoward was put in was an intern when I was working in 93 he was actually in my office and they called me later and asked what I knew about it which was fortunately nothing but um an intern had added a command switch to the copy command in MS-DOS that would display a message about uh I heart and then sex and if you entered in the right command you could get to generate this over and over and over so I guess he thought it was clever and funny but they caught it longer before it actually got into the actual source tree so because everything goes through several layers of scrutiny before it's built into the main product so. One cool other project you worked on was Pinball right you got Pinball into Windows there was a reason for doing that and perhaps you can talk about you know the Pinball development that you worked on. Sure Pinball was a product that was actually developed by a company called cinematronics I believe and radiator acquired by Maxis and then it was licensed by Microsoft to put in the Plus Pack but of course that only run Win 95. there was an effort in NT to try to show them hey we're cool too we can run games and so the vice president decided well we got to have something flashy in the box and Solitaire is just not cutting it for me so what about that Pinball game they ship in the Plus Pack so my manager came to my office and said hey how do you feel about working on Pinball for a few months and that had been a long time since I worked on a game so I was actually kind of stoked about it problem with it is a lot of it was still an x86 Assembly Language and I still needed it to run on mips Alpha power PC and the Intel box so anything that was written in Assembly was an entire rewrite but I was able to save all the game logic and and the Arts and the assets and the game design and get those translated over to work on NT there was another issue in that I think Win 95 had early DirectX support and we were stuck with Win G or create dib section the drawing mechanism was different so I wrote a wrapper layer that would intercept the Pinball calls and then draw them using NTS facilities and it all works pretty well so the game wound up shipping in Windows NT 4 I believe was the first time we shipped it and then it shipped all the way through XP the problem came for them when they added 64-bit support for some reason on one of the systems and I think it might have been the alpha or the ia64 I'm not sure which but the ball would go through the paddle only on 64 bits and only on this one architecture if it were all 32-bit or all 64-bit architectures it's probably an easy bug to find but when it only happens on one CPU uh it proved pretty challenging so they were working on it for a long time we got brought in all these other sets of eyeballs trying to figure out what was going on and Rick couldn't get a solution in time and he had about 50 other things that he had to port to so just and the reality of the schedule was there's not going to be time to make Pinball work on all platforms and the thing about Microsoft and the way they ship Windows is it pretty much has to work on all platforms or you can't ship it so I can't put a Intel pinball game in the alpha or the mips box and say run into the emulator we didn't have time to Port it for you so because they never take that approach the code has to work everywhere or nowhere and it didn't work everywhere so it came out for whatever release I was where they finally pulled it this day. I mean Dave it must be amazing that you've written this stuff such as so many years ago and it's still being used today I mean what what's that feeling like to see it still out there.Well it's it's really fortunate that I had the opportunity to work on things that people know very well it's even more fortunate that some of these things have gone on to have fairly long histories like Task Manager and Pinball hasn't been in the product but everybody still remembers it knows it and remembers the sound effects and the music so it's been really nice to work on stuff that people at least can recognize so if I was working on Missile guidance or something it would be much harder to explain what you do all day than to say well yeah Task Manager I wrote that or Pinball you've played that I worked on that that kind of thing so it's nice to have a few common touch points because a lot of the stuff I did right was you know doing ref counts down in the calm plumbing and stuff like that that you don't see so you know. I just while you're talking about this I thought about you did start the start menu as well you were you were heavily involved in the in in the studman NT as well yeah that was part of the show that we were reporting and one of the first challenges we've faced with it was that it said Windows 95 on the side banner of the start menu and that was because Windows can't draw text sideways they actually had to create a graphic in Photoshop or paint shop or whatever they were using and then rotate it and they would blid it onto the screen as a graphic well there were two problems the biggest of which was we had to ship Windows NT workstation server Advanced server and then there were 64-bit and 32-bit variants and they would all say something slightly different on the start menu so now you've got at least six different bitmaps per language and now you've got probably 12 languages and 72-bit maps it gets pretty unwieldy pretty quickly so I decided let's see if we can rotate the whole thing and I use the NT drawing calls to rotate a device context and then render Windows NT in the correct font up the side and draw the gradient behind it and all that's done live as opposed to Win 95 or with just a snapshot but it allows you to have it say or do whatever you want. Amazing so it's like Task Manager is like the one that I think a lot of people would recognize because it's software that we've all oh well I think anyone who's really used Windows as unless it's perhaps my mother or someone is not really technical has used and found really really useful but you've also done like other stuff like the um the zip thing as people just use it today without even thinking about it but I think you were also involved in calculator and clock isthat right? I own calculator for a while and that's when we did the switch to infinite precision math so we purchased or license the library that instead of just using IEEE floating point in the actual calculations you could have infinite precision math and it's a lot of pressure you don't want to be the guy that broke calc and had calculator give the wrong answer because you can imagine the Press would just it was bad enough with a Pentium bug in the day so if you had calculator given the wrong answer a lot of pressure to make sure all the answers still came out right let's say that I never never actually worked on the clock but the NT clock was unique in that it was a circle and you could double click on any of the dead space and it would remove the frame and give you this little floating widget that you could drag around the desktop so I thought well what a great idea I'll do that in task manager and if you double click any dead space in Task Manager it removes all the UI and you just get the graphs my intent was now you you can park that little graph up in the corner of your screen and have a CPU graph but I think 90% of people that ever accidentally did that were suddenly confused by word and my task manager go and what is this and how do I fix it so I think it's still in there but uh not the best feature I ever added yeah. But I mean I just think it's it's amazing to be able to talk to someone like you who he's touched millions of lives with the code that you've written and to hear the stories and hear that I think it's a huge inspiration for a lot of people that a lot of this stuff you did on the side and then it was something useful and either Microsoft bought it or it just made its way into the Windows that we know today. Yeah I seem to have a good knack for knowing what it was that I thought was missing and that I could go and patch a hole in the system and say this is an area where I wish it had this functionality I'll just go home and write it and then that doesn't know I mean I've got a source folder on my machine with 200 300 projects that never went anywhere as well but obviously there are some that have gained traction and so I'm very lucky in that regard. Now I love that I think it's an inspiration for anyone I mean I've written some code nowhere near obviously what you've done but I've I've written some code that was useful for me and then it became useful for other people. yeah I think this might sound a little grandiose but one of the things that's cool to me is because I have an intimate knowledge of how the machinery of Task Manager Works how the message pumps works and how the pages are laid out and what the code does and I know that there are at any point up to a billion of them out there installed in the use so I know that in my head I've got this little machine I built and now there's a billion copies of it out there all running the same way and that feels really cool and it's not a popularity thing it's a I made a machine and now there's a whole bunch of these machines doing lots of work around the world for some reason that's fascinating to me. I think it's amazing I mean it's the same on YouTube like the video that that you did on Task Manager when I looked today is like 1.2 million views that's over a million people have watched your story about Task Manager it's fantastic. Yeah it's a lot of Carnegie Halls if you fill them up one at a time but it's it depends how you think about it I guess. So I want to ask you about this you mentioned it right in the beginning blue screen of death um why is it blue and is it possible to change the color? It is possible to change the color, there are red screens of death and green screens of death the reason it is blue I don't really give away the entire thing I'll tell you the reasons why it's not blue my assumption was that when we would have labs in the machine they'd all be black text or white backgrounds but if they were in text mode or in Windows mode and so if you walked into a lab of 50 PCS and one of them was crashed well the fact that it's the one with the big blue screen makes it really obvious and so I think somebody had told me that and I always assumed that was true but I know the guy who wrote the original crash dump code John Vert and I worked with them at Windows and so I tracked him down and I kind of do the detective work of how did it get to be blue why is it blue and the answers are non-obvious but it's one of those things that somebody made a decision you know 30 years ago and then somebody said well I'll do the same as that guy and the next guy said I'll do the same as that guy and it became a tradition basically and I kind of followed that trail back. Just everyone who's watching Dave explains it in a lot of detail I'll link that video below and as well as a lot of the other videos that we've mentioned Dave ChatGPT is taking the world by storm what do you what's your thoughts about ChatGPT I know you've done a video on it as well which I'll link below um is it a good thing is it a bad thing saying you know what's your thoughts on ChatGPT? I think it's transformational for programmers because pretty soon you won't be able to program without ideally having it look over your shoulder or tell you where to start because so much of when you're writing code is you could write that from scratch ideally you would take it from a library but if you had something you had to write from scratch I think starting with a ChatGPT framework and asking it to give me the rough code and then fill it out from there is a lot more productive than writing all the boilerplate yourself so for boilerplate Stuff chat gbt is great and then once you've got your code already figured out and working or not working in this case perhaps uh you can find feed your code back in at ChatGPT and say where's my bug and quite often it can spot the fault in your logic or in your implementation and it really shortcuts some of the development process that I think everybody's going to need to know and use it it's not that programmers are going to be extinct and you're just going to ask ChatGPT to write an app because it's the complexity and the interaction and the synchronization between parts of code that's where you make your money as a programmer it's not writing hello world so it can do the easy work while you're doing the fun and cool stuff I think yeah. I love that because I mean that's the concern people are saying that ChatGPT is going to replace all of us and uh developers are going to be replaced or coders are going to be replaced with ChatGPT but you don't think that's gonna? No I think GPS will have a huge impact on London tax taxi drivers but it's not going to replace the taxi or obviate the taxi they'll still need good drivers. And I love that because it's a it's an encouragement for everyone who's for the young people starting because I get this question a lot like should I get into cyber security should I get into Dev because I mean there's going to be no jobs but it's good to hear that you you see it as an enabler or a tool rather than a replacement for absolutely I would say if you were doing a job that can be replaced by ChatGPT at this point you're probably doing a job that you don't want to do for the rest of your life anyway because it was probably a little mundane and predictable the real cutting edge stuff is not coming out of ChatGPT so. And I mean the other issue a lot of people have raised with ChatGPT is the code that it creates is bad code as in it's got like vulnerabilities or doesn't use the you know best. 3.5 was quite bad 4.0 I'm actually fairly impressed with with how it can do it but I still do get things where I look at the code and I'm like wait a minute and then I ask it are you sure you met this because this can only hold eight bits and it goes oh yeah I forgot about that and then it goes back and fixes it which is a little frustrating why didn't you do that without me asking but uh hopefully they will improve that to the point where you don't have to interrogate it quite as hard. It's been fascinating to you know go through your videos on your channel what's your plans with your channel live what do you what kind of content are we going to be seeing you know coming to the channel? I think a lot of the same focus on Microsoft history there's only so much stuff that I touch so only so many stories to tell but occasionally I think of a new one and throw it out there is a new episode a lot of programming topics and we're doing a lot of addressable LED and Matrix LED coding we've got a mesmerizer project that is a desktop display that does audio graphs it's a fireplace it's a stock Decker it does sports scores that kind of thing so we've been having a lot of fun with that and that's an open source project that people have been contributing to since I did a video on that about a month ago. So Dave your channel is amazing I've spent a lot of today like I said watching it and I have seen on bunch of videos in the past highly recommend that all of you who are watching go and subscribe to Dave's Channel you can learn so much and it's not just history it's also about coding best practices a whole bunch of stuff that that you can go and learn but Dave what apart from your YouTube channel do you can you share any things that you're going to be doing and I believe you're going to a conference or you're doing something any other like places people can perhaps meet you or you know? VCF West in Mountain View I believe it's August 4th and 5th I'll be speaking there and I'll be on the speakers panel as well with Adrian Black and a few other people so that should be an interesting time I encourage anybody in the area to come check it out say hello. That's brilliant Dave thanks so much for sharing you know your knowledge and experience of this especially the thing about ChatGPT and you know AI replacing developers and like encouraging people who are you know who are starting their careers I mean I mean it's amazing to be able to talk to you I a lot of us have used the products that you've created um so thanks so much for creating those things even you know doing it as a side project then suddenly became something useful in the windows kernel or you know the Windows operating system have a great day [Music]",
    "transcript_keywords": [
        "Task Manager",
        "Windows",
        "code",
        "people",
        "Yeah",
        "Dave Channel Dave",
        "Manager",
        "yeah Task Manager",
        "Dave",
        "lot",
        "Microsoft",
        "Task",
        "called Task Manager",
        "Task Manager Works",
        "System",
        "things",
        "Dave Frame Window",
        "thing",
        "Windows operating system",
        "kind"
    ],
    "transcript_entity_values": [
        "Microsoft",
        "a ton",
        "YouTube",
        "Carnegie Halls",
        "Ben Slivka",
        "20 year old",
        "these days",
        "Linux",
        "three",
        "at least one",
        "late 94 95",
        "at least six",
        "20 years",
        "London",
        "Java",
        "32",
        "UbiNet",
        "Win G",
        "80",
        "Rick",
        "the last 20 years",
        "Saturday",
        "you'relist",
        "Dave ChatGPT",
        "99.9%",
        "C++",
        "the last five years",
        "two",
        "Dave Cutler",
        "Asperger",
        "my day",
        "four",
        "Zig",
        "night",
        "Meg",
        "eight",
        "80 to 90 percent",
        "one day",
        "a dozen",
        "second",
        "Press",
        "YouTube",
        "Win 95",
        "Thursday",
        "Python",
        "English",
        "Adrian Black",
        "Linux",
        "Pentium",
        "Saskatchewan",
        "many many years",
        "Intel",
        "about two years ago",
        "1978",
        "Zig",
        "Netherlands",
        "ANSI",
        "the Operating System",
        "Task Manager",
        "David Bombal",
        "NT",
        "Hyper Cache",
        "Wi-Fi",
        "five eight",
        "20",
        "PCS",
        "a couple of years",
        "the end of the day",
        "50 50",
        "1993",
        "2 years",
        "Easter",
        "a week",
        "Assembly",
        "XP",
        "30 miles",
        "Vestige",
        "MCSE",
        "the recent day",
        "Maxis",
        "Solitaire",
        "Direct XII",
        "API",
        "12",
        "Task",
        "millions",
        "64",
        "4",
        "45 minutes",
        "NT4",
        "thousands upon thousands",
        "10 megabytes",
        "Jim",
        "one morning",
        "DirectX",
        "today",
        "the days",
        "99",
        "Powershell",
        "Windows",
        "NT",
        "Bill Gates",
        "30%",
        "a couple years ago",
        "last week",
        "over a million",
        "30 years ago",
        "2003",
        "Asian",
        "Cairo",
        "one",
        "a couple hundred",
        "later years",
        "Pinball",
        "the last few days",
        "RAM",
        "Win 95",
        "around 10",
        "a couple years",
        "the Middle East",
        "100",
        "Red Hat",
        "Pinball",
        "Windows",
        "Tinker",
        "5th",
        "Corvette",
        "Reddit",
        "68",
        "UI",
        "this day",
        "2.0",
        "IEEE",
        "first",
        "Tandy",
        "650",
        "Earth",
        "Arts",
        "John Vert",
        "the Plus",
        "15",
        "Mac",
        "SN",
        "Rust",
        "Port",
        "the day",
        "Zig",
        "Task Manager Works",
        "10 to 12",
        "Pinball",
        "Matrix",
        "Operating Systems",
        "WSL",
        "Center",
        "Windows 95",
        "Windows NT",
        "Alistair Banks",
        "several hours",
        "95",
        "Channel",
        "Raymond Chen",
        "90%",
        "years",
        "Windows",
        "20 years old",
        "ell",
        "Pinball",
        "C++",
        "72",
        "Ola a32",
        "NSA",
        "Mac",
        "Amiga",
        "Linux",
        "Microsoft Bob",
        "up to 100",
        "93",
        "a great day",
        "seven forty four",
        "the old days",
        "TRS-80",
        "Bob",
        "August 4th",
        "Rust",
        "Windows NT",
        "Windows 3.1",
        "Meg",
        "60",
        "Shell",
        "mips Alpha",
        "number two",
        "16",
        "Dave",
        "10",
        "a minute",
        "six",
        "recent months",
        "Buffer",
        "BoB",
        "Photoshop",
        "Decker",
        "about a month ago",
        "Mountain View",
        "many years ago",
        "10base",
        "Docker",
        "half",
        "Dave's Channel",
        "seven",
        "Dave Plummer",
        "third",
        "10 hours",
        "an International System",
        "mips",
        "C++",
        "five",
        "those days",
        "20 years ago",
        "One",
        "Rebels",
        "the Plus Pack",
        "NTS",
        "Windows Mac",
        "Rutger",
        "3.1",
        "1997",
        "a few months",
        "1.2 million",
        "94",
        "200 300",
        "1420",
        "CPU",
        "zero",
        "Excel",
        "Golang",
        "daily",
        "Radio Shack",
        "Ola",
        "Plumbing",
        "32-bit NT Operating System",
        "all 100",
        "about 50",
        "Mac",
        "Microsoft Tukwila",
        "Win 95",
        "four megabyte",
        "years ago",
        "10% 20%",
        "GPU",
        "Easter",
        "a billion",
        "3.5",
        "Windows 11",
        "a couple years later",
        "a million",
        "GitHub",
        "a year",
        "Patreons",
        "Learn Python",
        "195",
        "one-hour",
        "billions",
        "Government",
        "Windows Pinball",
        "50"
    ],
    "transcript_entity_types": [
        "ORG",
        "QUANTITY",
        "GPE",
        "ORG",
        "PERSON",
        "DATE",
        "DATE",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "DATE",
        "GPE",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "CARDINAL",
        "PERSON",
        "DATE",
        "DATE",
        "NORP",
        "PERSON",
        "PERCENT",
        "GPE",
        "DATE",
        "CARDINAL",
        "PERSON",
        "PERSON",
        "DATE",
        "CARDINAL",
        "PRODUCT",
        "TIME",
        "ORG",
        "CARDINAL",
        "PERCENT",
        "DATE",
        "CARDINAL",
        "ORDINAL",
        "ORG",
        "ORG",
        "ORG",
        "DATE",
        "ORG",
        "LANGUAGE",
        "PERSON",
        "GPE",
        "ORG",
        "GPE",
        "DATE",
        "ORG",
        "DATE",
        "DATE",
        "ORG",
        "GPE",
        "ORG",
        "ORG",
        "PRODUCT",
        "PERSON",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "DATE",
        "DATE",
        "CARDINAL",
        "DATE",
        "DATE",
        "GPE",
        "DATE",
        "ORG",
        "ORG",
        "QUANTITY",
        "PERSON",
        "PRODUCT",
        "DATE",
        "ORG",
        "PERSON",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "PRODUCT",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "TIME",
        "ORG",
        "CARDINAL",
        "QUANTITY",
        "PERSON",
        "TIME",
        "ORG",
        "DATE",
        "DATE",
        "CARDINAL",
        "ORG",
        "WORK_OF_ART",
        "GPE",
        "PERSON",
        "PERCENT",
        "DATE",
        "DATE",
        "CARDINAL",
        "DATE",
        "DATE",
        "NORP",
        "GPE",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "PRODUCT",
        "DATE",
        "ORG",
        "PRODUCT",
        "CARDINAL",
        "DATE",
        "LOC",
        "CARDINAL",
        "ORG",
        "NORP",
        "PRODUCT",
        "PERSON",
        "ORDINAL",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "ORG",
        "DATE",
        "CARDINAL",
        "ORG",
        "ORDINAL",
        "ORG",
        "CARDINAL",
        "LOC",
        "ORG",
        "PERSON",
        "WORK_OF_ART",
        "CARDINAL",
        "ORG",
        "ORG",
        "DATE",
        "FAC",
        "DATE",
        "LOC",
        "PRODUCT",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "GPE",
        "PRODUCT",
        "PRODUCT",
        "PERSON",
        "TIME",
        "CARDINAL",
        "ORG",
        "PERSON",
        "PERCENT",
        "DATE",
        "ORG",
        "DATE",
        "PERSON",
        "WORK_OF_ART",
        "LANGUAGE",
        "CARDINAL",
        "PERSON",
        "ORG",
        "FAC",
        "PERSON",
        "PERSON",
        "PERSON",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "TIME",
        "DATE",
        "ORG",
        "PERSON",
        "DATE",
        "WORK_OF_ART",
        "ORG",
        "PRODUCT",
        "PERSON",
        "CARDINAL",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "TIME",
        "CARDINAL",
        "DATE",
        "PRODUCT",
        "PERSON",
        "ORG",
        "ORG",
        "DATE",
        "LOC",
        "DATE",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "PERSON",
        "ORDINAL",
        "TIME",
        "ORG",
        "ORG",
        "NORP",
        "CARDINAL",
        "DATE",
        "DATE",
        "CARDINAL",
        "PERSON",
        "WORK_OF_ART",
        "ORG",
        "ORG",
        "PERSON",
        "CARDINAL",
        "DATE",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "PRODUCT",
        "ORG",
        "DATE",
        "ORG",
        "PERSON",
        "PERSON",
        "QUANTITY",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "ORG",
        "EVENT",
        "QUANTITY",
        "DATE",
        "PERCENT",
        "ORG",
        "EVENT",
        "CARDINAL",
        "CARDINAL",
        "PRODUCT",
        "DATE",
        "CARDINAL",
        "ORG",
        "DATE",
        "ORG",
        "ORG",
        "CARDINAL",
        "TIME",
        "CARDINAL",
        "ORG",
        "ORG",
        "CARDINAL"
    ],
    "vector": [
        -0.07873638719320297,
        -0.013475659303367138,
        -0.059543922543525696,
        -0.013969911262392998,
        0.07942076027393341,
        0.03994407132267952,
        0.03890132158994675,
        -0.018868546932935715,
        -0.019868314266204834,
        0.013414290733635426,
        -0.02290992997586727,
        0.05359754338860512,
        0.010141844861209393,
        0.013465143740177155,
        0.00906860176473856,
        0.020484160631895065,
        -0.02237178198993206,
        -0.09325836598873138,
        -0.08754311501979828,
        -0.08616328984498978,
        -0.11051881313323975,
        -0.03278448060154915,
        0.04249840974807739,
        -0.0022983073722571135,
        0.02891845628619194,
        0.04420067369937897,
        -0.023536376655101776,
        0.0023747237864881754,
        -0.029776068404316902,
        0.028574513271450996,
        -0.021574821323156357,
        -0.00036858898238278925,
        0.0342760868370533,
        0.014814057387411594,
        0.05634697526693344,
        0.053864456713199615,
        0.04808821529150009,
        0.02842383272945881,
        -0.1096503809094429,
        -0.07003489881753922,
        0.0036482203286141157,
        -0.008984078653156757,
        -0.05040905624628067,
        0.06315825134515762,
        -0.057120561599731445,
        -0.0011336042080074549,
        0.06608088314533234,
        -0.043268077075481415,
        -0.09684012830257416,
        0.005920522380620241,
        -0.09786222130060196,
        0.03212113678455353,
        0.06184033676981926,
        0.025551483035087585,
        -0.016201134771108627,
        -0.03838452324271202,
        0.03014705888926983,
        0.04655754566192627,
        0.009719638153910637,
        -0.039025548845529556,
        0.04323640093207359,
        -0.0930975005030632,
        -0.0994390919804573,
        0.040820732712745667,
        0.028285671025514603,
        0.053913265466690063,
        -0.09510979056358337,
        -0.008444826118648052,
        0.07162313163280487,
        -0.15162897109985352,
        0.0014802123187109828,
        -0.06212564557790756,
        -0.03337060660123825,
        0.06066892296075821,
        -0.028163433074951172,
        0.005227584391832352,
        0.033680595457553864,
        0.014684048481285572,
        -0.109474778175354,
        -0.06448563933372498,
        0.10727744549512863,
        0.025914086028933525,
        0.009182393550872803,
        0.01566060073673725,
        0.022935211658477783,
        0.060376156121492386,
        -0.060705725103616714,
        -0.014300580136477947,
        0.0035100129898637533,
        0.09147240966558456,
        0.0010789490770548582,
        0.007867682725191116,
        0.08298814296722412,
        0.0020679759327322245,
        0.10628335177898407,
        -0.036669518798589706,
        0.07474062591791153,
        -0.03271213546395302,
        -0.006337163969874382,
        0.03924276679754257,
        -0.05281107500195503,
        -0.0574655756354332,
        0.010837182402610779,
        -0.060827869921922684,
        0.06076536327600479,
        -0.0017828060081228614,
        -0.03479154407978058,
        0.0776931568980217,
        0.06428413093090057,
        0.015215730294585228,
        -0.05314997211098671,
        0.0032022842206060886,
        0.017057469114661217,
        -0.05697545409202576,
        0.03524922579526901,
        -0.07380576431751251,
        -0.04703627526760101,
        0.08702359348535538,
        0.028183462098240852,
        0.042249035090208054,
        0.003504619002342224,
        0.04345371574163437,
        -0.03638042137026787,
        -0.027106599882245064,
        -0.01807303912937641,
        -0.036390386521816254,
        -0.008654276840388775,
        3.1869995492654166e-33,
        0.03188873454928398,
        0.031516142189502716,
        -0.06491295248270035,
        0.0057852789759635925,
        0.09632271528244019,
        -0.008029598742723465,
        0.06655289232730865,
        0.06621222198009491,
        -0.008408918045461178,
        0.021967420354485512,
        0.02371402643620968,
        -0.011663219891488552,
        0.014426141045987606,
        -0.03246580809354782,
        0.0390467494726181,
        0.01099152397364378,
        -0.008961054496467113,
        0.010111373849213123,
        0.03901622071862221,
        -0.05624741315841675,
        0.05183781310915947,
        0.043922606855630875,
        -0.048357393592596054,
        -0.04198545962572098,
        0.0015549510717391968,
        0.024034714326262474,
        0.04801548644900322,
        -0.06742477416992188,
        0.12637145817279816,
        0.002143863821402192,
        -0.05450904369354248,
        0.0066940030083060265,
        -0.04259596765041351,
        -0.041676394641399384,
        0.0335020013153553,
        0.0319831520318985,
        -0.0938517227768898,
        -0.10236937552690506,
        0.01343566458672285,
        -0.017176425084471703,
        0.009533499367535114,
        -0.007739510387182236,
        -0.03174927085638046,
        -0.03933804854750633,
        0.05776372179389,
        -0.05558111518621445,
        0.009271811693906784,
        -0.031807880848646164,
        -0.010567578487098217,
        0.04583624750375748,
        -0.008652818389236927,
        0.06479077786207199,
        0.007045092061161995,
        0.025844352319836617,
        -0.09523482620716095,
        -0.006399007048457861,
        0.07581863552331924,
        -0.013800887390971184,
        0.05163535103201866,
        0.07920447736978531,
        0.07529543340206146,
        0.04492095485329628,
        -0.019705144688487053,
        -0.0012168057728558779,
        -0.026122959330677986,
        -0.09150277078151703,
        0.0608624666929245,
        -0.015501094982028008,
        -0.02268446981906891,
        0.08091152459383011,
        -0.04906213656067848,
        -0.01247488148510456,
        0.029478780925273895,
        0.016780797392129898,
        -0.09539344161748886,
        -0.01328873448073864,
        -0.04628751426935196,
        0.00391153572127223,
        0.035229749977588654,
        -0.04934494197368622,
        -0.009660651907324791,
        -0.033474478870630264,
        0.08776014298200607,
        -0.022982532158493996,
        -0.04889858886599541,
        -0.019625017419457436,
        -0.04240982234477997,
        -0.059079594910144806,
        0.043439511209726334,
        0.07073992490768433,
        -0.0320734903216362,
        -0.030476288869976997,
        -0.048264265060424805,
        0.0746489018201828,
        -0.04087408259510994,
        -4.875637959181927e-33,
        -0.022335955873131752,
        -0.06746598333120346,
        -0.01850181631743908,
        -0.07714346796274185,
        -0.009312877431511879,
        0.037810131907463074,
        -0.07851509004831314,
        -0.0061578755266964436,
        0.022259140387177467,
        0.040136754512786865,
        0.06747129559516907,
        0.03748956322669983,
        0.052207399159669876,
        -0.008124870248138905,
        0.023864684626460075,
        0.013601145707070827,
        0.09590507298707962,
        -0.02874368615448475,
        -0.046378958970308304,
        -0.035650189965963364,
        -0.01102613378316164,
        0.02249458245933056,
        -0.07309561967849731,
        -0.011143741197884083,
        0.01938832923769951,
        -0.04177002236247063,
        0.10624508559703827,
        0.054410893470048904,
        0.05800728499889374,
        0.049950581043958664,
        0.02871742472052574,
        -0.046088580042123795,
        -0.09949644654989243,
        -0.025005850940942764,
        0.03628082945942879,
        0.032109346240758896,
        0.008792229928076267,
        -0.02187555842101574,
        -0.06222956255078316,
        -0.06733913719654083,
        0.07685268670320511,
        0.02692890167236328,
        -0.07439784705638885,
        0.04687923565506935,
        -0.019611550495028496,
        0.09152045845985413,
        -0.16736380755901337,
        0.02187396213412285,
        -0.04986148700118065,
        -0.025149216875433922,
        0.06396345049142838,
        0.04409606009721756,
        0.01661106012761593,
        -0.0770130380988121,
        -0.0487980991601944,
        0.0003804063017014414,
        0.06751769781112671,
        -0.045566510409116745,
        0.04471755027770996,
        -0.01202885340899229,
        0.02642739564180374,
        0.01947774551808834,
        -0.01113953348249197,
        -0.06283369660377502,
        -0.019629640504717827,
        0.00554908299818635,
        0.039144307374954224,
        0.018749460577964783,
        -0.06348580121994019,
        -0.09434884786605835,
        0.03684296831488609,
        -0.039217449724674225,
        -0.0023606359027326107,
        -0.037941936403512955,
        -0.0646538957953453,
        0.036904606968164444,
        0.07501187920570374,
        -0.045165564864873886,
        -0.09456633031368256,
        -0.04568358510732651,
        0.0695824921131134,
        0.020341714844107628,
        0.057451654225587845,
        0.03296060115098953,
        0.07028871774673462,
        0.004499776288866997,
        0.06295259296894073,
        0.08315727114677429,
        -0.03778936341404915,
        0.019726473838090897,
        -0.0031603979878127575,
        0.004249535035341978,
        0.014103028923273087,
        0.11668369919061661,
        0.11231961846351624,
        -5.5557688227736435e-08,
        -0.06558644026517868,
        -0.04183124378323555,
        -0.06616400927305222,
        0.055106762796640396,
        0.018103618174791336,
        0.06694383919239044,
        -0.02894912287592888,
        0.04396520555019379,
        -0.0012778097297996283,
        -0.05995748192071915,
        0.037717681378126144,
        -0.11860227584838867,
        -0.13433903455734253,
        0.012466215528547764,
        0.03395470604300499,
        0.0012064429465681314,
        -0.0561906173825264,
        -0.025036383420228958,
        0.021591603755950928,
        -0.04330490529537201,
        0.0032935955096036196,
        0.03176146000623703,
        0.04251692816615105,
        -0.002467041602358222,
        -0.009862065315246582,
        0.05868743360042572,
        0.0045964703895151615,
        0.033062003552913666,
        0.03020402230322361,
        0.029626846313476562,
        -0.03340059518814087,
        -0.00944642536342144,
        0.006581264082342386,
        0.05026964843273163,
        -0.02427189238369465,
        0.024975456297397614,
        -0.05343145132064819,
        0.019245028495788574,
        -0.03865639120340347,
        -0.025673799216747284,
        0.0016401411266997457,
        -0.01644260250031948,
        0.032381393015384674,
        0.02163219265639782,
        -0.08146124333143234,
        0.0025270937476307154,
        -0.07752770930528641,
        -0.08815113455057144,
        0.08268667012453079,
        -0.0738675519824028,
        -0.024064041674137115,
        -0.043442968279123306,
        0.053573478013277054,
        0.06830012798309326,
        0.06347551196813583,
        0.061387207359075546,
        0.012081621214747429,
        -0.10250819474458694,
        -0.015993976965546608,
        0.048405081033706665,
        -0.017169738188385963,
        -0.001861607190221548,
        -0.04553595557808876,
        0.05593746528029442
    ]
}