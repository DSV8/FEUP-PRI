{
    "id": "Ea6tw-gulnQ",
    "title": "These Are Not Pixels: Revisited",
    "channel": "Technology Connections",
    "channel_id": "UCy0tKL1T7wFoYcxCe0xjN6Q",
    "subscriber_count": 2460000,
    "upload_date": "2018-04-22T16:49:46Z",
    "video_url": "https://www.youtube.com/watch?v=Ea6tw-gulnQ",
    "category": "Science & Technology",
    "tags": [
        "pixel",
        "analog",
        "television",
        "phosphor dots",
        "trinitron",
        "picture tube",
        "CRT",
        "color tv",
        "subpixel",
        "color control",
        "RGB"
    ],
    "views": 578005,
    "likes": 23768,
    "comments_count": 1455,
    "description": "You can support this channel on Patreon!  Link below  When I first made a video on analog color television, the thumbnail I created (and its explanation) caused nearly endless debate.  I thought I'd try and clear this up a bit.  Here's the video on how analog television works (you may notice I recycled some footage from it)   And the larger Television playlist:   You can support this channel on Patreon!  The support of viewers like you has kept this channel possible, and it's making it bigger and better.  If you're interested in making a contribution as well, please check out my Patreon page.  Thanks for your consideration!   And thank you to the following Patrons! Charlie Quigley, Tommi Hares, Tomas, Dakota Williams, Chuck Floyd, Eitan Tal, Callum Brieske, Paul Fisher, Stephen Vrazel, Applied Science, peter ford, Sophie Haskins, James Id, Brendan Sheehy, Jay Foreman, Rich Theobald, Kyle Olson, Bryan Reid, Quinton Wilson, Jeremy DeGuzman, Sean Spark, Lucas Hartbarger, Taylor Cuzela, David Lastres, Granger Meador, Jeremy Kitchen, Jason Wellband, Shane Belaire, Paul Emmerich, Sam Hodge, Matthew Rossi, Paul Craigie, Paul Williams, Tyler, Gerald Monaco, Kelly Rose, Tab Patterson, Jason Weathered, Sergey Kiselev, h.drew foy, Roger Beal, Gantradies, Chris Hartl, Steve Stone, Brian G. Shacklett, Colton Aubrey Hooke, Paul Mills, Christopher Luna, Kotanu, Brendan Terrett, Techmoan, Mike Mason, Clara Latter, Elijah Reeds, Christopher Jett, Justin Talbot, Francisco Vogliotti, Steven Metcalf, Verysofisticated, Lolucoca, Matt Standish, John McLusky, Ashleigh R, Stephen Bell, Logan Beenken, rn Arnarson, Eric Wood, Stephen Pick, BlancoGrande, Matthew Giraitis, James Ryan, Robert Joscelyne, Ellis M. Eisen, Francis Fisher, Kedar Deshpande, Boris, Bill Basch, Lukas Komischke, Dave Anderson, Felix Freiberger, Dane Peterson, Brent LaRowe, Aerospyke, Kiera Cox, Hunter Schwisow, Logan Kriete, Rafa Wiosna, Adam D. Ruppe, Audin Malmin, Eric Hansen, Noah McCann, Jason R Scheuren, Rufo Sanchez, Bjrn Vegar Torseth, Yaniv, Andr, Andres Plaza, Charlie Hankin, Craig Leverenz, Casey Kikendall, Sebi Jecklin, Tianyu Ge, Daniel J Schless, Justin Smith, The8TrackKid, Scott Emmett ODonnell, Jon-Andr Haraldstad, Ashley Grant, Boh00711, Drew McClain, Michael Snoden, Jesse Cardone, Hason Portwood, Kevin Terrell, Clara Latter, Nick, Ed Hall, Julian Rapoport, Christopher Bassett, Ryan Cozzubbo, Marcus Schwartz, Steven Hidy, Patrick Meister, Josef Citrine, The Automatic Filmmaker, Thomas Jew, Johan Schoeman, Joseph Spiros, Matt Taylor, Patrick Musson, Lars JJ, Carles Codony, Richard Lindsey, PK, Christopher Carpenter, blouerat, Frank Harris, Magnus Tranam, Robert Toth, Jason McMillon, George Dale, Mrpirate707, John Semander, Joseph Hill, Samuel Blakey, Marc Ethier, Luke Biddle, Winfield Trail, Giacomo Scaparrotti, Brady Brown, Hank Eskin, Stein Strindhaug, foophoof, Ernie Smith, Wayne Marsh, Tim Juchinski, Matt Sackett, Andrew J Thom, OnlyOneSolutionTBHFam, Christopher Dickey, FinaleGrande, Connor Hennessy Sykes, Marc Schroth, Mike Gerow, Denver Alexander, Steven First, Ian Munro, Matt Falcon, Paul Walton, Jan Stavl, Jakob Strande Langgaard, Mitchel J. Mullin II, Matthew Razza, Trix Farrar, Zane Revai, Jason Ganiatsas, Peter Byrd, Michael Pacheco, Alex C, Marco Anastasi, Tobias Faller, Adam Erickson, Mark Dear, Samuel Plainfield, Carles Codony, Mark Nicholas Wales, Tomasz Kolinko, Chris Giddings, etho624, TM, Howard Kraut",
    "description_links": [
        "https://youtu.be/l4UgZBs7ZGo",
        "https://www.youtube.com/playlist?list=PLv0jwu7G_DFUGEfwEl0uWduXGcRbT7Ran",
        "https://www.patreon.com/technologyconnections"
    ],
    "transcript": "In this video, Id like to revisit a concept from my television series. I created this thumbnail for my video explaining analog color TV, and its been causing debate ever since. Though I had hoped my video on Trinitron would help illustrate my point and put the debate to rest, there was and is still much debate in the comments. It seems this debate comes mostly from semantics, and Ill admit I see a gap in my explanation. So lets try again. This is the TV in my kitchen. Like any TV on sale today, it produces an image by manipulating the brightness of many thousands (and these days millions) of individual picture elements called pixels, which is actually just short for picture element. There are a few different technologies in use these days, but at their core their job is to produce a set brightness value for the red, green, and blue components of each pixel. These are called subpixels, and in many LCD panels each subpixel is actually further divided into sub-sub pixels. This probably increases the total number of discrete brightnesses each color can make, and thus allows for more precise control over the panel and a larger number of possible colors. Someone please correct me if thats not what the subdivisions do. The combination of red, green, and blue can create what appears to our eyes to be any color, because the way we perceive color (for those of us with normal trichromatic color vision, anyway) is through the ratio of stimulation between the three different cone cells in our eyes. Their primary sensitivities are red, green, and blue, so by using just these three colors, we can activate the cone cells in any given ratio and thus produce any apparent color. This biology hack is the result of the overlapping sensitivities of each cone cell. For example, yellow light stimulates both the red and green cone cells in your eyes roughly equally, as both of these cells can detect this wavelength of light. This means that to recreate what we see as yellow light, we dont need to actually reproduce the same wavelength of light. Instead, we can artificially stimulate the red and green cone cells with just red and green light, and so long as the red and green cells receive the same relative stimulation as they did with honest-to-goodness yellow light, the brain cant tell the difference and thinks its yellow. Simply outputting red, green, and blue light can produce any color to our eyes because when combined, it can produce the same ratios of stimulation between the three cone cells that any real color would. Anyway, the microprocessors inside this television are working together to make it all...happen, and the main image processor can tell the panel exactly what to do. The image on screen is coming from a Chromecast, and through the HDMI port on the television, the Chromecast can tell it exactly what each pixel needs to do to make this image, and the drivers inside the TV will make that happen. We can define the resolution of this display by counting how many pixels there are along each edge. Id rather not actually do that, so Ill just recite the specs here and tell you that there are 1,366 pixels along the bottom and 768 pixels along the sides, yes I know thats not 720P but thats the panel thats in here, and that means that there are 1,049,088 pixels on this screen. Generally, resolution is defined as X by Y, so wed say this panel has a resolution of 1366 by 768. Now take a look at an old school CRT television. Get nice and close to it and youll find what appear to be pixels. Theres a neat division between red, green, and blue. The borders are defined, and its forming a grid, almost. But, you would be running a fools errand if you attempted to count the number of these pixels along the edges to determine this TVs resolution. Thats because these arent pixels, and they dont define its absolute resolution. To understand why, you need to look at a black and white television. Oh how convenient, a black a white television. Now with the set turned off, you cant see any structure to this screen. Going back to the LCD TV, even when its off, that grid of pixels is still there. You need to shine a bright light onto it to see them, but the pixels are there as physical parts of the screen. But on this little CRT, theres no grid to be seen. Lets switch it on. With an image now on screen, you should be able to see a series of lines. In analog video, this is how the image is drawn. See, the CRT only has one pixel to deal with. At the rear of the picture tube is an electron gun which is projecting a single point of light at the screen. Then, electromagnets in the deflection yoke move this point around the screen very rapidly in a pattern called a raster. By varying the brightness of the point of light as it moves around the screen, an image can be made. The image is drawn as a series of stacked horizontal lines. In the US, roughly 480 lines are visible on the screen at once, drawn as two fields of 240 lines 60 times per second as interlaced video. This is why standard definition is defined as 480i here in the States. Ive made a video explaining how analog television works in greater detail, which can you find up above now or down below later. Now, this TV has no idea what its doing. It doesnt have a microprocessor. It doesnt have an HDMI port. It doesnt have any digital circuitry of any kind. All its doing is looking for two pulses in the video signal, the horizontal blanking interval and the vertical blanking interval, in order to draw the image in the same place on the screen and not have it roll around like this. The nature of this signal is analog, and really all the signal does is tell the TV how bright to make the image. Its just timed really really well so that each individual part of the screen is drawn with the correct brightness, as the position of the point of light is determined by the length of time that has elapsed from the start of the frame. And to be clear, were dealing with tiny fractions of a second since the beam moves incredibly quickly. So then, heres the challenge. Where are the pixels? Well, there arent any! If I change the channel and we take a look at snow, youll see that there is no regularity whatsoever in this noise. If this image was defined by a grid of discrete picture elements, the borders between white and black sections should form columns of some sort, or at the very least there should be some clear vertical structure visible. But there isnt. They appear completely randomly within the line. I can tell you exactly where the line is, but I cant define any separation within the line itself. Thats completely arbitrary. Now heres where the color CRT comes into play. Specifically one like this. This is a GE television, using a slot-mask CRT. Up close, it appears to have a similar grid structure to the LCD TV in my kitchen. So then, why arent these pixels? Theyre what make up the image, right? Well, no, they arent. These are actually called phosphor dots. What they do is create specific targets for the red, green, and blue electron beams to hit. See to make a color image, we need to make a red, green, and blue image, and they need to be merged together somehow to appear as one. In the early days of color TV, there were all sorts of ideas being explored on how to produce an RGB image. Ill throw another card up on my playlist on Television, because if this is the sort of thing that interests you you can take quite the nerdy deep dive. A color CRT is functionally identical to a black and white CRT, but it draws three separate images at once. Think of it like three picture tubes, one red, one green, and one blue, combined into a single picture tube. This combined tube has an electron gun for each color, but of course we also need a way to separate the colors in order to drive each one on its own. Thats what the phosphor dots do. They separate the face of the tube into a mosaic of red, green, and blue dots. The earliest color TVs used a pattern of phosphor dots that looked like this. These dots line up with a simple metal sheet just behind them. Let me show you what it does. Here I have a green flashlight. If I shine it at this poster board, it creates a flood of green light. But if I place a mask in front of it with a single hole, now the light can only make it through in a straight line between the flashlight and the hole, which produces just a dot on the poster board. Now, heres a red flashlight. Watch what happens when I put it next to the green flashlight. Because the red flashlight is in a slightly different position from the green one, the light it makes cant take the same path as the green light. It will go through the hole at a different angle, so the dot it produces appears next to the green one. Now if I add a third, blue flashlight and put it in between the red and the green just above them, a blue dot appears below the red and green dots. If I take the mask away, it creates just a wash of white light. But with the mask in place, it produces three small dots of light in the same arrangement as the flashlights themselves, though its mirrored and upside down. If I add a second hole the to mask, the same pattern appears right next to the first set of dots. If I keep going and make a bunch of small holes in this offset pattern, what we get is a mosaic pattern of red, green, and blue dots. This is happening because the flashlights are arranged in a triangle, and at every hole in the mask the beams converge and cross over to project the opposite image on the screen. Notice how similar this pattern is to this color CRT. See, if I aim these three flashlights together at the poster board, their beams just blend together and make what appears to be white. This is what would happen if we used a color CRT without a mask. But if I place the mask in front of it, which is just a piece of aluminum foil with some holes punched in it, suddenly a pattern just like the phosphor dots appears. Now, the red beam can only hit specific parts of the screen, and the blue and green beams cant hit those points. Because the light sources are physically separated, they can only make their way through the holes at specific angles. The mask puts the red targets in the shadow of the blue and green beams. The mask casts a shadow on the targets. Wait a minute, shadow mask! Whats important to realize here is that the mask is whats creating the pattern of dots. The flashlights are firing indiscriminately at the mask, but the mask will always force each beam into the correct location on the other side. This means that no matter what sort of pattern of light the beams or flashlights are creating, it will always appear as a series of dots on the other side. So if we go back to our picture tube, what you see as a viewer are the phosphor dots which are the targets for each individual color electron beam. Inside the tube, directly behind them, is the metal sheet with holes in it, which always ensures the color components stay separated and project onto the phosphor dots in the correct orientation. But the key here is that they do not change how the image is drawn. Just like the black and white television, this TV is stacking horizontal lines. In fact, these two televisions are receiving the same exact signal. The difference is that the color TV can recover the color information thats superimposed in the signal through quadrature amplitude modulation-- Dont worry too much about the specifics of that-- and it can then adjust the relative intensities of the three color components. But since that means its effectively drawing drawing three different sets of lines at once, it needs a way to keep the colors from crossing over. Thats what the shadow mask does. Remember, even though the flashlights were just blasting away at the mask, the mask made sure each part was separated into little dots on the other side. From this side of the picture tube, its just like taking a black and white CRT, then drawing a grid on top of it, and then coloring each little cell in with red green or blue. The only functional difference between a true color CRT and a black and white CRT with lines and colors drawn on top is that the mask behind the phosphor dots of the color picture tube ensures the colors stay separated, and thus allows for individual control of each color. Now, this style of shadow mask makes it hard to even define what could be a pixel. Assuming each pixel contains one red, one blue, and one green dot, well first of all theyre triangular, but then each one changes orientation as you move on and really its just a mess but this style of CRT, which uses a slot-mask display, does make a pattern that really looks like there are pixels. These CRTs arrange the electron guns in a line, and rather than use a mask with round holes they use a mask with small slots. This allows more of the beam energy to pass through the mask and makes a brighter image. And heres where the semantics comes in. Ill grant you that the picture is made up of these groupings of phosphors. You could say that they are elements of the picture, and thus are pixels. But this ignores the fact that they are only there as a side-effect of the need for color separation. They are in front of what makes the image, and are not the actual building blocks of the image. To put it another way, heres a window screen. If I put it in front of this album cover, does that become a pixel? Have I pixellated the image by placing a grid in front of it? Or have I simply compartmentalized parts of the image into little square cells? And heres the part that I think is hardest to understand. The phosphor dots do not in any way define the maximum amount of detail that can be displayed on the screen. That may sound silly, but hear me out. All they really do is define the maximum color resolution of the display. Lets go back to this CRT. Ive only shown it in close-up because this is a laughable little 5 inch color TV boombox from some point in the 1980s. The dot pitch, thats the fineness of the dots, is very poor on this TV. I mean, you cant really blame it, as its only got 5 inches to work with. This means it cant display much color detail, but it can display as much brightness detail as any television. Let me boot up Kingdom Hearts. [PS2 Game Start noise] OK, so take a look at the menu in the bottom left corner. If we look at the black and white TV, we can see that there are about 10 or 12 lines defining the height of the letter M in Magic. If we count the number of dots along the height of the M, we also get about 10, maybe 11. But, each cluster of three color dots spans the height of two lines. We appear to have only half the color resolution as we do brightness resolution in this CRT. Look at how infrequently a red dot appears among blue and green. Thats they key here, were not getting a lot of complete RGB clusters among the word Magic, but we can still clearly see the shape of the word Magic. You can even see the how the center of the A is darker than the rest, but only this one red dot is actually darker. But the thing is, from a normal viewing distance, you cant really tell how poor the color resolution is. Once youre far enough away that you cant discern the individual phosphor dots, the image appears more or less normally. This is in contrast to a digital LCD panel, where the pixels themselves define the shape of an image. If I want to draw a letter M using a grid of 10 X 10 pixels, well I can say how bright I want each pixel to be. Then I can tell the display what to do with each of these 100 pixels to make an M. But in the case of a CRT, its drawing the M like this, in Lines. That shape is then forced into the grid of phosphor dots, and wherever it lands will tell you which dots get lit up. And thats the key difference. In digital video, the pixels define the shape of the image, logically. In analog video, the shape of the image defines which phosphor dots are lit. You can see this effect with the small TV. This screen really suffers where very small, colored elements appear. If I open the pause menu and look at these stats, some of it is very hard to read. Thats because this text is colored green, so the blue and red guns pretty much dont fire when drawing it. Since the green dots are so far apart and this text is so small, if the text to be drawn lies between the green dots, it just wont get drawn. Its not like the gun isnt firing, its just that for the entire section here, the text is in the shadow of the green gun, so none of its energy is able to light up the screen. And thats the point Im trying to make when I say these are not pixels. These two TVs are displaying the same image and they both have 480 lines of resolution. But this little CRT has fewer phosphor dots, so it cant recreate color as precisely as the larger TV. But that doesnt mean its not conveying the same 480 lines of resolution. It is, just in brightness only. It loses detail in the color department, and as a side-effect it cant reproduce some fine color details. A CRT television has no control over how the three electron beams interact with the mask. The combined beam can land and will land wherever it wants, and its then up to the mask to separate the color components. The clusters of phosphor dots are there just because they need to be. They can be a different size, a different shape, and some TVs dont even split them up beyond vertical stripes. Trinitron. As a final point, which I think is at the crux of the issue, in an LCD, OLED, Plasma, or any sort of digital display, the grid of pixels is an active matrix. The display has an electrical connection to each one of them, and can talk to it. The shadow mask and phopshor dots are a passive component of the CRT. They dont get addressed. They dont have an electrical connection. Theyre just there. Sure, the TV does control which ones get lit up, but its not done with logical control or any precision whatsoever. Just like the black and white CRT, wherever the beam lands is what part gets lit up. Now this isnt to say that an analog TV cant produce an image made of pixels. Surely it can, it's just making small squares. And in fact thats what it's been doing throughout all of this video. A PlayStation 2, DVD player, Roku box, or any digital source with a composite output will take its logical 640X480 digital grid and convert that to the 480 horizontal lines to drive the TV. But I guarantee you those ethereal pixels in the logic circuits of the digital source wont be lining up nicely with these phosphor dots. They simply dont need to. Thanks for watching, I hope you enjoyed the video! If this is your first time coming across the channel and you liked what you saw, please consider subscribing. As always, thank you to everyone who supports this channel on Patreon! If youre interested in making a voluntary contribution to the channel as well, please check out my Patreon page. Theres a link on your screen or you can find one down below in the description. Thanks for your consideration, and Ill see you next time!",
    "transcript_keywords": [
        "color",
        "CRT",
        "dots",
        "green",
        "phosphor dots",
        "color CRT",
        "image",
        "pixels",
        "red",
        "mask",
        "light",
        "screen",
        "blue",
        "white CRT",
        "make",
        "green dots",
        "lines",
        "phosphor",
        "television",
        "dot"
    ],
    "transcript_entity_values": [
        "LCD TV",
        "1366",
        "about 10 or",
        "third",
        "5 inches",
        "Kingdom Hearts",
        "Chromecast",
        "only half",
        "GE",
        "the early days",
        "a minute",
        "1,366",
        "two",
        "RGB",
        "640X480",
        "Magic",
        "Lines",
        "Patreon",
        "today",
        "LCD",
        "12",
        "11",
        "768",
        "US",
        "first",
        "one",
        "10 X 10",
        "these days",
        "Y",
        "States",
        "mosaic",
        "480",
        "1,049,088",
        "CRT",
        "PS2 Game Start",
        "100",
        "Roku",
        "5 inch",
        "Trinitron",
        "the 1980s",
        "these days millions",
        "240",
        "second",
        "roughly 480",
        "60",
        "PlayStation 2",
        "three",
        "about 10",
        "HDMI"
    ],
    "transcript_entity_types": [
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORDINAL",
        "QUANTITY",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "DATE",
        "TIME",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "PRODUCT",
        "GPE",
        "ORG",
        "DATE",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "GPE",
        "ORDINAL",
        "CARDINAL",
        "QUANTITY",
        "DATE",
        "ORG",
        "GPE",
        "PRODUCT",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "QUANTITY",
        "ORG",
        "DATE",
        "DATE",
        "CARDINAL",
        "ORDINAL",
        "CARDINAL",
        "CARDINAL",
        "PRODUCT",
        "CARDINAL",
        "CARDINAL",
        "ORG"
    ],
    "vector": [
        -0.0844448059797287,
        -0.07187256962060928,
        0.03821945562958717,
        -0.14312662184238434,
        0.004759479314088821,
        -0.03494732454419136,
        0.02941170334815979,
        0.024792762473225594,
        -0.051909275352954865,
        -0.0020061845425516367,
        -0.07078403979539871,
        -0.02534707449376583,
        -0.01845836266875267,
        0.0007880800403654575,
        -0.07767801731824875,
        -0.03423953428864479,
        0.02697884663939476,
        -0.08322037756443024,
        -0.019034551456570625,
        0.023895373567938805,
        -0.026624983176589012,
        -0.06670192629098892,
        -0.035160355269908905,
        -0.023455871269106865,
        0.05175241082906723,
        0.028286542743444443,
        0.016836920753121376,
        -0.018465276807546616,
        0.013766616582870483,
        -0.10538574308156967,
        -0.0013056669849902391,
        0.12355240434408188,
        0.0706426277756691,
        -0.043882474303245544,
        -0.043778374791145325,
        0.005245377775281668,
        0.033693935722112656,
        -0.0064933570101857185,
        -0.03593003749847412,
        0.06553374975919724,
        0.02024717442691326,
        -0.07924710959196091,
        0.04942118376493454,
        -0.0119535643607378,
        0.057317908853292465,
        -0.018734345212578773,
        0.1078534722328186,
        -0.0954117402434349,
        -0.03227173164486885,
        -0.043433092534542084,
        -0.05550060793757439,
        -0.050891902297735214,
        0.04869077727198601,
        0.04657910019159317,
        0.0005925586447119713,
        -0.01958518475294113,
        0.09024251997470856,
        -0.01465453952550888,
        0.021637098863720894,
        0.05109633132815361,
        0.012580200098454952,
        0.001974014099687338,
        -0.09944209456443787,
        0.06443268060684204,
        0.055265992879867554,
        0.03545253723859787,
        -0.04711074382066727,
        -0.04869740456342697,
        0.02031506411731243,
        -0.09268198907375336,
        -0.04236882925033569,
        0.07646152377128601,
        0.03780144453048706,
        -0.015608560293912888,
        0.04879162460565567,
        0.017101075500249863,
        0.042985182255506516,
        -0.002268808661028743,
        0.09586253762245178,
        -0.07033462077379227,
        0.06010755896568298,
        -0.08600363880395889,
        -0.07965415716171265,
        -0.006831279955804348,
        0.028509942814707756,
        0.05726529285311699,
        -0.04310925304889679,
        0.012906595133244991,
        -0.03770804405212402,
        -0.015177794732153416,
        -0.06850964576005936,
        0.07799138128757477,
        0.03585703298449516,
        0.02571292594075203,
        -0.006514130625873804,
        -0.011657070368528366,
        -0.04571770504117012,
        -0.13450756669044495,
        -0.011697079986333847,
        0.06940526515245438,
        0.022255834192037582,
        -0.002437268616631627,
        -0.025362202897667885,
        -0.03849366307258606,
        -0.04682128131389618,
        -0.07305675745010376,
        0.039337579160928726,
        0.09691466391086578,
        0.08962080627679825,
        0.06943503767251968,
        -0.01631568931043148,
        0.058537546545267105,
        -0.07671681046485901,
        0.026847336441278458,
        0.0022442294284701347,
        -0.04130817577242851,
        -0.0024794875644147396,
        0.05298781022429466,
        0.08612723648548126,
        -0.10124783962965012,
        0.02539505623281002,
        0.01403169147670269,
        -0.08258776366710663,
        -0.049492985010147095,
        0.09434070438146591,
        -0.07991977035999298,
        -0.06416643410921097,
        4.6948274589002735e-33,
        0.023255975916981697,
        0.08206761628389359,
        -0.005087659228593111,
        0.017290031537413597,
        0.02280699834227562,
        0.07501796633005142,
        -0.04789460822939873,
        -0.02786269597709179,
        -0.014343698509037495,
        -0.07385420054197311,
        0.03717668354511261,
        0.035994499921798706,
        -0.07510145753622055,
        0.07077167183160782,
        -0.011197250336408615,
        -0.0019397189607843757,
        -0.07069103419780731,
        -0.03496977314352989,
        -0.06726958602666855,
        0.0004988446598872542,
        -0.004511244595050812,
        0.05268535763025284,
        -0.04137310013175011,
        0.017300216481089592,
        -0.02138524316251278,
        -0.03372578322887421,
        -0.05096328258514404,
        0.022031746804714203,
        0.04704654589295387,
        0.022605890408158302,
        -0.008101347833871841,
        0.06987302750349045,
        0.023013701662421227,
        0.03660322725772858,
        -0.007836032658815384,
        -0.026186130940914154,
        -0.041245393455028534,
        -0.09988652914762497,
        0.013643215410411358,
        0.09564311057329178,
        0.04423525929450989,
        0.059162307530641556,
        0.029332833364605904,
        -0.0285717211663723,
        -0.0013208898017182946,
        0.008265800774097443,
        0.13176780939102173,
        -0.007670338731259108,
        -0.034354597330093384,
        0.022675026208162308,
        -0.019271811470389366,
        0.027435876429080963,
        -0.050178781151771545,
        -0.09836982190608978,
        0.08337196707725525,
        -0.04674890637397766,
        0.006640952080488205,
        -0.007663242053240538,
        0.03499989956617355,
        -0.015692738816142082,
        -0.007589805871248245,
        0.09417349845170975,
        0.024630017578601837,
        0.016732139512896538,
        -0.09067089110612869,
        0.02961963601410389,
        0.04090566188097,
        0.019077323377132416,
        -0.03518345579504967,
        0.03356686234474182,
        -0.05493748560547829,
        0.020258087664842606,
        0.0007626754231750965,
        -0.13140471279621124,
        -0.025952886790037155,
        -0.02412058785557747,
        -0.046102941036224365,
        0.031403541564941406,
        0.01597290113568306,
        0.04222071170806885,
        -0.029315153136849403,
        -0.04925050586462021,
        -0.02964942343533039,
        -0.06956733763217926,
        -0.0376296266913414,
        -0.046461302787065506,
        0.02791246958076954,
        -0.029863864183425903,
        -0.0014946075389161706,
        -0.05728746950626373,
        -0.014438114129006863,
        -0.0594111792743206,
        0.017532480880618095,
        -0.01855904795229435,
        -0.04554584249854088,
        -4.74032019230305e-33,
        -0.06671752780675888,
        0.015562143176794052,
        -0.01888045109808445,
        0.02748129516839981,
        0.011405604891479015,
        -0.07258842140436172,
        0.09115084260702133,
        0.021674461662769318,
        0.09831435978412628,
        -0.08488458395004272,
        0.034917041659355164,
        0.05457724630832672,
        -0.048953909426927567,
        -0.08277302980422974,
        -0.06049108877778053,
        -0.1034669280052185,
        -0.009342610836029053,
        -0.0305801872164011,
        -0.0347757525742054,
        -0.052323803305625916,
        0.11164861917495728,
        0.0805242657661438,
        -0.10462374985218048,
        0.058139558881521225,
        0.02969679981470108,
        0.06554069370031357,
        0.0313531793653965,
        0.011281762272119522,
        0.0050086709670722485,
        0.04737880453467369,
        -0.040075089782476425,
        -0.042714569717645645,
        0.004876906052231789,
        -0.004430181812494993,
        0.04391554370522499,
        0.05974680185317993,
        0.1314321607351303,
        0.01710471697151661,
        -0.037852589040994644,
        -0.10319754481315613,
        0.013211715035140514,
        0.012805033475160599,
        -0.038624268025159836,
        0.0012754229828715324,
        -0.02175355702638626,
        0.004164949990808964,
        -0.010029160417616367,
        0.02066471055150032,
        -0.0860789343714714,
        0.11991901695728302,
        0.04048201069235802,
        0.07224728167057037,
        -0.005821413826197386,
        -0.059218693524599075,
        0.014664685353636742,
        0.0037310312036424875,
        0.02365492656826973,
        0.05295135825872421,
        0.10366528481245041,
        0.03356156870722771,
        -0.04337984323501587,
        -0.04537281021475792,
        -0.06274904310703278,
        -0.026155482977628708,
        -0.017724810168147087,
        0.030101140961050987,
        0.03697073832154274,
        0.08026724308729172,
        0.01887379214167595,
        0.03990834206342697,
        0.0029615273233503103,
        0.04359540343284607,
        0.004161498975008726,
        -0.04703253135085106,
        -0.00388341280631721,
        0.005293767433613539,
        -0.004266692325472832,
        -0.014441506005823612,
        -0.03320595622062683,
        0.08887622505426407,
        -0.037018436938524246,
        0.005414189305156469,
        0.05822184681892395,
        0.07173790037631989,
        0.11209461092948914,
        0.09641116857528687,
        -0.0326756089925766,
        0.009379813447594643,
        -0.02873087488114834,
        0.005459018051624298,
        -0.029030364006757736,
        0.08023186028003693,
        0.040272489190101624,
        0.025717291980981827,
        0.07612740248441696,
        -6.545460706774975e-08,
        0.01301360223442316,
        -0.014121553860604763,
        -0.013736768625676632,
        -0.05115829408168793,
        0.01130911149084568,
        -0.08672086894512177,
        0.025573261082172394,
        -0.02908649854362011,
        -6.309380114544183e-05,
        -0.010592366568744183,
        0.034646667540073395,
        0.04845113679766655,
        -0.027443312108516693,
        0.0359274223446846,
        0.11852674931287766,
        -0.0014283243799582124,
        -0.06403597444295883,
        -0.028411298990249634,
        -0.06016667187213898,
        0.023559799417853355,
        0.032108914107084274,
        0.032127369195222855,
        0.050754427909851074,
        0.0009776790393516421,
        -0.004415926523506641,
        0.052411679178476334,
        -0.002530512399971485,
        -0.00973998662084341,
        -0.055122822523117065,
        0.024450011551380157,
        -0.016986077651381493,
        0.0356510765850544,
        -0.02887992188334465,
        -0.02662491798400879,
        0.05130632594227791,
        -0.06174326688051224,
        -0.04613151773810387,
        0.018641047179698944,
        0.04297879338264465,
        0.04923935607075691,
        -0.050553929060697556,
        -0.07959572970867157,
        0.02910887449979782,
        0.06468679010868073,
        0.06595762073993683,
        -0.0038971956819295883,
        -0.0248542670160532,
        -0.001734014949761331,
        -0.0035919640213251114,
        -0.0377880297601223,
        -0.011682279407978058,
        0.05521330237388611,
        -0.010766283608973026,
        -0.037620142102241516,
        0.06899990886449814,
        0.01140526868402958,
        0.02922605723142624,
        0.02205423265695572,
        -0.036532044410705566,
        0.07194192707538605,
        0.06870510429143906,
        -0.014361916109919548,
        0.0074071395210921764,
        0.03362710773944855
    ]
}