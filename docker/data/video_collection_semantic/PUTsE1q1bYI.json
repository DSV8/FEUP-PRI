{
    "id": "PUTsE1q1bYI",
    "title": "Double your FPS for FREE!*** - Nvidia DLSS 3.0",
    "channel": "Linus Tech Tips",
    "channel_id": "UCXuqSBlHAE6Xw-yeJA0Tunw",
    "subscriber_count": 15900000,
    "upload_date": "2022-11-08T09:32:15Z",
    "video_url": "https://www.youtube.com/watch?v=PUTsE1q1bYI",
    "category": "Science & Technology",
    "tags": [],
    "views": 1183083,
    "likes": 42981,
    "comments_count": 3517,
    "description": "Thanks to Mine for sponsoring this video! Discover where your data is, and take it back at   Get Unlimited Data for $25/month at   Nvidias new DLSS 3.0 promises smoother gameplay by doubling your FPS  But how can it do that, and can its fake frame generation possibly look any good? And is it worth buying an RTX 4090 for?  Discuss on the forum:   Check out Comrade Stinger's Async Timewarp demo:  Check out Comrade Stinger's YouTube channel:  2kliksphilip's YouTube channel:  Growling Sidewinder's YouTube channel:   Boost Mobile's T&Cs: For new customers only: port-in or non-port. For 1 line, $25 per month with AutoPay. Customers who do not enroll in AutoPay pay $35/month. Plan available only on certain networks. Unlimited Data, Talk & Text + 30GB of 5G/4G Data. Customers who use more than 30GB of data during a billing cycle on a line will have speeds reduced. 5G service requires a 5G capable device. 5G not available in all areas. Avail for select devices for activation on the Boost Mobile Network. Requires Boost Mobile service plan. Account holder responsible for monthly payment for all lines & its add-ons.   GET MERCH:   SUPPORT US ON FLOATPLANE:   AFFILIATES, SPONSORS & REFERRALS:   PODCAST GEAR:    FOLLOW US  ---------------------------------------------------   Twitter:  Facebook:  Instagram:  TikTok:  Twitch:   MUSIC CREDIT --------------------------------------------------- Intro: Laszlo - Supernova Video Link:  iTunes Download Link:  Artist Link:   Outro: Approaching Nirvana - Sugar High Video Link:  Listen on Spotify:  Artist Link:   Intro animation by MBarek Abdelwassaa  Monitor And Keyboard by vadimmihalkevich / CC BY 4.0   Mechanical RGB Keyboard by BigBrotherECE / CC BY 4.0  Mouse Gamer free Model By Oscar Creativo / CC BY 4.0   CHAPTERS --------------------------------------------------- 0:00 Intro 1:05 DLSS 3.0? It's not really DLSS. 2:31 Visual quality: Spider-Man Remastered 4:35 Input frame rate matters 5:38 Visual quality: F1 22 7:12 Input latency 8:30 4K120 A/B/C testing 10:52 4K60 A/B/C testing 12:38 4K30 Native vs 4K60 DLSS 3.0 13:10 Don't write off DLSS 3.0 14:12 Why I'm optimistic about the future 15:20 Conclusion",
    "description_links": [
        "https://bit.ly/Say-Mine-LTT",
        "https://l.boostmobile.com/1hovqg",
        "https://linustechtips.com/topic/1466274-double-your-fps-for-free-nvidia-dlss-30/",
        "https://drive.google.com/file/d/1YgYrJK7LhUr9ulQTO_qJxziZVhuo3QGU/view",
        "https://www.youtube.com/user/paimail21/",
        "https://www.youtube.com/c/2kliksphilip",
        "https://www.youtube.com/c/GrowlingSidewinder",
        "https://lttstore.com",
        "https://www.floatplane.com/ltt",
        "https://lmg.gg/sponsors",
        "https://lmg.gg/podcastgear",
        "https://twitter.com/linustech",
        "http://www.facebook.com/LinusTech",
        "https://www.instagram.com/linustech",
        "https://www.tiktok.com/@linustech",
        "https://www.twitch.tv/linustech",
        "https://www.youtube.com/watch?v=PKfxmFU3lWY",
        "https://itunes.apple.com/us/album/supernova/id936805712",
        "https://soundcloud.com/laszlomusic",
        "https://www.youtube.com/watch?v=ngsGBSCDwcI",
        "http://spoti.fi/UxWkUw",
        "http://www.youtube.com/approachingnirvana",
        "https://www.instagram.com/mbarek_abdel/",
        "https://geni.us/PgGWp",
        "https://geni.us/mj6pHk4",
        "https://geni.us/Ps3XfE"
    ],
    "transcript": "Frames win games. We proved it, Nvidia advertises it, and now we get to double how many we get for free? Nvidia says yes, thanks to a brand new feature exclusive to 40 series GPUs called DLSS 3.0. Like previous generations of DLSS, it improves your frame rate by trading off some image quality. Unlike old school DLSS, however, DLSS 3.0 works not by lowering the resolution, but instead by pretending it's running faster than it really is. Sounds like BS, but I promise you it's not. What does it actually do? Should you turn it on? And can we even tell the difference? I'll tell you right after I tell you about our sponsor. Boost Mobile. Boost Mobile provides you with unlimited data talk and text for just $25 a month, all on one of America's largest 5G networks. Click the link below for a limited time offer. DLSS 3.0, or more accurately, deep learning frame generation, which I'll call it from now on, is Nvidia's answer to low frame rates. Only officially available for Nvidia's RTX 40 series GPUs for now, it mandates the use of Nvidia's reflex low latency tech and using an optical flow model on the GPU's tensor cores inserts fake frames in between the real ones that your GPU is actually rendering, literally doubling your frame rate even without upscaling. That's right, it can be enabled without DLSS, which is why I won't be calling it that. This obviously makes gameplay look a lot smoother, but you might be thinking back to the bad old days of the 2010s when TVs would advertise 120 Hertz and 240 Hertz when all they really did was hold back multiple frames to blend them more or less by brute force. That resulted in an often broken looking effects that added substantial input lag and was only really good for keeping track of where the puck is so you don't miss a sports ball hole in one. What makes DLFG different is that it's making an educated guess at what the next frame should look like in near real time based on the previous frame and some motion vectors provided by the game engine, which should look a lot better and be more responsive. Unfortunately, DLFG isn't available in very many games right now, so I'm going to pick two to closely examine, starting with Marvel's Spider-Man Remastered. This game looks shockingly good with DLFG enabled to give us double the frame rate, though there are some things to take note of. First off, there's a sort of forward ghosting that happens from time to time as DLFG does its thing, sort of the same way DLSS 2.0's ghosting happened. You don't see it often, but you can see it clearly here when Spider-Man jumps out of his apartment window as a kind of halo, thanks to the game engine's insistence that he's moving, but the way the camera moves counteracts the motion vector data from the game engine. In gameplay, this manifests as a kind of shimmer on the walk and wall crawling animations, looking almost like a lighting error. And when scenes change dramatically from shot to shot, you'll find yourself staring at a frame made entirely of visual artifacts, something common to all games compatible with frame generation right now, and Nvidia says it's a bug somewhere in the chain and a flag should be getting set that disables frame generation during such transitions. It'll be fixed soon. The more severe, but paradoxically even less noticeable artifact is the breakup of sharp shapes when in front of or behind character models. As Digital Foundry pointed out, the rooftop running part of the intro shows this off pretty well and same deal with the running animation when running up certain buildings. My feelings are more or less the same as theirs. Unless you really know what you're looking for, you might not even notice these artifacts, especially since they look a bit like the kind of artifacts you'd get from motion blur or streaming video that you've subconsciously learned to ignore by now anyway. We'll see if our own gamers can notice them later on in the video. And honestly, I would be surprised if they could. This game has far more distracting visual anomalies that are unrelated to DLFG, like the way its ambient occlusion crawls along certain scenes and how it renders even nearby background objects at a lower blurred resolution, regardless of your depth of field settings. All of which is to say that despite the pixel peeping we're doing here, DLFG doesn't seriously harm image quality. And those artifacts are gone in the next frame anyway. They're only on screen for anywhere from 16.7 milliseconds to 8.3 and even smaller as the frame rate climbs. Of course, in order for frame generation to do its thing, it really needs a certain frame rate to be usable. Nvidia recommended 40 to 60 as the baseline when I asked them about it. In terms of graphical artifacts, while they're still minor, they definitely got a lot more pronounced when I locked the frame rate to 60 instead of 120. When I dropped it down even further to 30, you can start to see how much guesswork DLFG has to do as there's more changes between the frames. Like check out Spider-Man's mask in this scene. I had to see how deep that rabbit hole goes. So I dropped it down once again to 15 frames per second, and that exposed even more weirdness. Check out how it handles the intro video here. It looks like the GPU is failing. Like it's really weird. The game clearly was never meant to run at this frame rate, though there are some fascinating things that happen to the laptop display here and to Peter himself when he's flailing around. And when he finally jumps out of the window, it looks almost like 2000s era YouTube, but higher resolution. He even mostly disappears behind the railing and the railing doesn't fare much better. The other game I tested for image quality is F1 22. And when it looks good, it looks really good. But when it looks bad, it looks really bad. Right off the bat, the thing you'll notice most is the thing that's front and center, the driver name tags. It's not such a huge deal at 120 Hertz, but they shimmer and shake at 60 FPS and things get worse from there. I'm not sure why such small motions, relatively speaking, are causing the UI to corrupt like this when it wasn't nearly as noticeable in Spider-Man, even with fast motion, but there it is. Another curious thing you'll notice is at the bottom of the screen, even at 120 Hertz, you'll see phantom pieces of the mini map flash on screen from time to time. And if you look really closely, you can make out what looks like an F1 car's tires with optical camouflage applied to them. When we crank the frame rate down, you can see this way more readily. It looks like Nvidia trained the data set exclusively using the hood camera and possibly even on a single track. While we're down in low FPS territory, you can also see some more examples of ghosting and overshoot on the car's tires and sometimes even the front wings start to overshoot ahead of the car. It's really too bad because at high frame rates, most of these issues are easily ignored and F1 22 itself would be an ideal candidate for gamers looking to crank the visuals on weaker hardware. Because it relies more on anticipation than twitch aiming, I mean, it is often played with a controller after all, it's far more tolerant of input lag than say a competitive shooter. The same could be said of most simulators, even PC building simulator. Check out our float plane exclusive by the way, for the uncut Jake versus Linus shenanigans. And what about input lag? While we were never going to get 120 Hertz level input latency with 60 real frames and 60 fake frames, at least in theory, we should see roughly the same input latency as the original frame rate, right? Due to the shortage of games available to test with and with labs tied up with pre-testing for the upcoming RDNA 3 release, we've only got input latency results for Cyberpunk, but we can already see an interesting pattern here. The complete DLSS 3.0 package provided input latency somewhere between DLSS 2.0 and native 4K on both our high-end and low-end CPU benches, which is expected due to the extra processing frame generation requires. Nvidia cited about an extra three milliseconds, though in our case, we measured more like four and a half or even as high as 13 on the Core i3. That's almost a frame at 60 FPS for that one. Perhaps this is a driver optimization thing, but it seems like even though it can boost frame rates in CPU-bound scenarios, it can only help responsiveness so much. Still, it is lower than running at 4K native, and if you're not quite as CPU-bound, you aren't likely to perceive the difference at all. That brings up a good question. We've looked at all of this under a microscope so far, but how does it actually feel to play with? Does it make things significantly worse? Do people even notice when it's on? And which do they prefer? To find out, we set up three identical test benches connected to three identical monitors, each displaying a different configuration, one rendering natively, one using DLSS set to quality, and one using DLSS 3.0 with frame generation. All other settings were identical. For guinea pigs, we selected five subjects of varying familiarity with graphics technology and asked them to play the games and rank each setup in order of visual fidelity and responsiveness. First up, Marvel's Spider-Man capped at 120 frames per second. Note that this means that DLSS 3.0 is running at 60 FPS and doubling the frames using AI. Let's see what the normies think. See, I notice in this one here, in the reflections, there's a bit more flickering. OK, this one seems a little slower. I think I do like this one. This is fast. It's like someone hit the turbo button on the computer. I'm going to say that this middle one looks the best. So the normies seem to not be able to tell the difference. But what about cultured and discerning gamers? I don't know. They seem so similar. Now I'm not sure what I think. It's funny how they have the same guy, like, in every single scene. It's like the same face I'm looking at. I feel like that's the smoothest. You can kind of see a little bit of shimmer, but I think that's just a setting. Things aren't necessarily its fault. I would choose to play on this one, and I don't know why. And naturally, we have to bring in someone who is relatively knowledgeable about displays and graphics. Yeah, I'm kind of the display guy, I guess. I do all the reviews for displays. I own a display. I got a... Crazy, right? I don't know. They're all really similar. The UI elements, they get garbled with DLSS3. I don't know, man. Kind of the same thing, one, two, three. And here are our results. For visual fidelity, native rendering appears nearly indistinguishable from DLSS's AI upscaling. And only when frame generation gets involved does quality seem to suffer, though most subjects found it difficult to detect any difference. As for responsiveness, while we know that frame generation measurably hurts latency, many of our subjects actually felt it was more responsive than DLSS 2.0, which it literally is not. So what, you might be asking. I'm playing a game at 120 FPS natively. Why would I bother using DLSS? That's a fair question. How does the technology fare at 60 FPS? We took our same subjects and ran the test again, swapping the configurations for each monitor to try to account for any unknown bias preferring a specific monitor. I don't know. I don't know, dude. I feel like the middle one is the worst. Whatever I said yesterday, I don't know if I was just kind of making it up in my head. At this point, I cannot tell the difference. I noticed a weird artifact, and it looks like it's hesitating right now. When I move, the graphics go potato. The text isn't so bad, but the marker itself gets garbled when I flick it around a little bit. I'm still liking this left one a lot. At 60 hertz, we see DLSS 3.0 really start to suffer in both visual quality and latency. Most subjects quickly selected the frame-generated rig as the worst at everything. We did the same 60 FPS test in a Plague Tale: Requiem and found similar results with nobody preferring the generated frames. But what if we just uncapped the frame rate and really let those systems fly into the triple digits? Well, we did just that, and interestingly, we see frame generation take the lead in latency. Our guess is that many subjects interpreted the added smoothness of the generated frames as feeling more responsive. At high frame rates, DLSS 3.0 does a great job of adding frames without introducing unplayable latency or immersion-breaking artifacts. At the lower frame rates, well, things are more of a compromise. But here's something to note. The only card available with DLSS 3.0 is a 4090. And if there's any card that really doesn't need frame gen, it's that thing. The real benefit of frame generation will be providing budget gamers the ability to crank the settings and get frame rates that they typically would not be able to achieve. So as one last test, we played a game of would you rather? Would you rather play your game without frame generation at 30 frames per second or at 60 frames per second with frame generation? Probably want whatever DLSS thing you just put on. Okay, this one automatically. Oh, definitely the first option. Easily. Previous setting. I think this is better. Yeah. I really can't tell a huge difference. I think I prefer this one. I want smoother. I prefer the first one. Oh, this one, hands down. I'll take smoothness and artifacts every day. If you went into this thinking DLFG was a dud, or if you still do think that, I wouldn't write it off so quickly. Think about what DLFG is doing. Say you're limited to 30 FPS for whatever reason. You can either have an experience that's full of what looks like stuttering, or you can reduce visual fidelity in a far more noticeable way by reducing settings or resolution, or you can turn on DLFG and look at a smooth 60 FPS with some very minor visual artifacts that might be masked by motion blur anyway. Your input latency is going to be similar to 30 FPS, but because you have smoother looking gameplay, you'll be able to adjust your aim and track objects far more easily. It won't save you in a competitive shooter, of course, but it'll turn single-player games into a more enjoyable experience. As 2kliksphilip put it in a recent video, we didn't really embrace resolution scaling with DLSS early on either, but it's now ubiquitous and well-accepted among gamers. I mean, it's either that or you run at a lower resolution and let your monitor scale it the stupid way, right? DLFG is still at its infancy with bugs that are actively being hunted down and squashed. And before you conclude that you'd never use it because you don't want any input lag at all, 2kliksphilip's video had another interesting angle that has me very excited for the future. Using tech developed for VR to decouple your input from the real frame rate, making games playable even sub 60. It's a separate concept from DLFG, but the demo built by Comrade Stinger showcases the intended effect very well. Here we have 30 FPS rendering, but by enabling reprojection or async time warp, our movements, especially mouse movements, are smooth and responsive. You can see in this mode that it works by basically projecting the scene in a kind of a virtual display that moves back to the center of the screen as each frame is updated. We'll have this link below so you can try it for yourself since the video really won't do it justice on its own. 2kliksphilip's idea of combining this with foveated rendering to render a low resolution extension of the screen means that you'd practically never notice it. And combined with frame generation to smooth everything out, you've got a recipe for comparatively very low hardware requirements, along with very high responsiveness and frame rates. This would be a holy grail of sorts. There are many games that could benefit from this setup, but none that I can think of would be a better fit than Digital Combat Simulator. DCS requires a beefy system to run. And while you can get away with a not so beefy control setup, one thing that you really need while flying is to keep an eye on your target, whatever that may be. So you've got to be able to whip your view around a lot. And low frame rates make that job so much more difficult to do while just tracking small, fast moving objects. And if you lose track of your target in DCS, you can go from hunter to hunted in an instant, no matter what you're flying. In a hypothetical future where Eagle Dynamics and developers like them embrace technologies like DLFG and Async Time Warp, the price of admission becomes substantially lower and they'll require less power to run too. It may be a situational feature for today, but if it means that more gamers can have better experiences and even experiences that they wouldn't be able to have at all otherwise, I'm keeping my hopes up for tomorrow where our AI overlords regularly serve us those delicious imitation frames. And where I talk about our delicious sponsor. MINE. MINE is the smart data assistant that helps you discover where your data is and then helps you keep it where you want it to be. With MINE, you can exercise your data rights and reclaim your right to be forgotten by asking services that you no longer use to delete your information. With how many data breaches there are these days, I don't know about you, but I wouldn't want any companies that I don't use holding my data. So sign up and MINE will let you know how many companies are holding your information. We ran our email address and over 360 companies are holding our data, including many services holding financial data that our team hasn't used in years. MINE will even automate the process of sending an official data deletion request through your inbox so the company can then delete the personal data they have stored. MINE also helps companies with the ultimate goal of simplifying and improving consumers' online privacy experience. So sign up at saymine.com using the link below and own your data. Thanks for watching guys. Maybe go check out the video where we tested to see if we could tell when DLSS 2.0 is on or not. These kinds of analysis videos, they tend to miss out on the experience of actually using the feature. And a lot of new ones can be lost just looking at the flaws instead of looking at the whole, you know?",
    "transcript_keywords": [
        "frame",
        "frame rate",
        "frame generation",
        "DLSS",
        "Frames",
        "DLFG",
        "FPS",
        "Nvidia",
        "rate",
        "Frames win games",
        "low frame rates",
        "generation",
        "frame rates things",
        "data",
        "game",
        "high frame rates",
        "thing",
        "rates",
        "games",
        "input"
    ],
    "transcript_entity_values": [
        "40",
        "DLFG",
        "Spider-Man's",
        "one",
        "Async Time Warp",
        "second",
        "UI",
        "240",
        "first",
        "every day",
        "60 FPS",
        "Hertz",
        "America",
        "about an extra",
        "Boost Mobile",
        "First",
        "tomorrow",
        "DLSS 2.0",
        "DLSS 2.0's",
        "Digital Foundry",
        "DLSS",
        "GPU",
        "just $25",
        "today",
        "120",
        "8.3",
        "more like four and a half",
        "five",
        "4090",
        "40 to 60",
        "DLSS",
        "AI",
        "5",
        "30",
        "FPS",
        "Jake versus",
        "3",
        "30 FPS",
        "4",
        "15",
        "yesterday",
        "DLFG",
        "DCS",
        "Eagle Dynamics",
        "as high as 13",
        "3.0",
        "three",
        "Spider-Man",
        "CPU",
        "DLSS's AI",
        "Nvidia",
        "YouTube",
        "Requiem",
        "60 FPS",
        "Spider-Man",
        "Marvel",
        "Peter",
        "Linus",
        "2kliksphilip",
        "60",
        "VR",
        "F1 22",
        "two",
        "16.7 milliseconds",
        "DLFG",
        "F1",
        "Digital Combat Simulator",
        "over 360",
        "these days",
        "years",
        "DLSS 3.0"
    ],
    "transcript_entity_types": [
        "CARDINAL",
        "ORG",
        "PERSON",
        "CARDINAL",
        "ORG",
        "ORDINAL",
        "ORG",
        "CARDINAL",
        "ORDINAL",
        "DATE",
        "MONEY",
        "ORG",
        "GPE",
        "CARDINAL",
        "ORG",
        "ORDINAL",
        "DATE",
        "LAW",
        "LAW",
        "ORG",
        "WORK_OF_ART",
        "ORG",
        "MONEY",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "PERSON",
        "CARDINAL",
        "QUANTITY",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "EVENT",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "WORK_OF_ART",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "PERSON",
        "QUANTITY",
        "PERSON",
        "ORG",
        "PERSON",
        "PERSON",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "LAW",
        "CARDINAL",
        "QUANTITY",
        "PERSON",
        "ORG",
        "ORG",
        "CARDINAL",
        "DATE",
        "DATE",
        "LAW"
    ],
    "vector": [
        -0.11772675067186356,
        -0.006648475304245949,
        -0.006621486973017454,
        -0.009936683811247349,
        0.013686674647033215,
        0.004363145679235458,
        -0.005283867474645376,
        0.024809513241052628,
        -0.051338210701942444,
        0.05903540179133415,
        -0.019311465322971344,
        0.0008274560095742345,
        -0.02154555357992649,
        -0.025557994842529297,
        0.04718271642923355,
        0.0031638110522180796,
        0.10171166807413101,
        -0.10611292719841003,
        -0.016320383176207542,
        -0.06998465210199356,
        0.008665105327963829,
        -0.11696415394544601,
        -0.00261434493586421,
        -0.010235466994345188,
        0.08871836960315704,
        0.008420191705226898,
        -0.04022634029388428,
        0.019272126257419586,
        0.01902671344578266,
        -0.036598026752471924,
        -0.018728062510490417,
        0.018058091402053833,
        -0.03320756554603577,
        -0.036142393946647644,
        -0.06538297235965729,
        -0.0781557485461235,
        0.004000429064035416,
        -6.303054396994412e-05,
        -0.07793125510215759,
        -0.006126441061496735,
        -0.008897519670426846,
        -0.015073979273438454,
        -0.1002880334854126,
        0.07074668258428574,
        -0.024059748277068138,
        -0.05291782692074776,
        0.048049766570329666,
        0.05726073309779167,
        0.01128049660474062,
        0.02501077577471733,
        -0.020152200013399124,
        0.02482689544558525,
        -0.002770676277577877,
        -0.023910600692033768,
        -0.066658154129982,
        0.013730271719396114,
        0.02822745405137539,
        0.028793511912226677,
        -0.0006368770264089108,
        0.015758145600557327,
        0.019219420850276947,
        -0.08802644908428192,
        -0.03914536163210869,
        0.0381963737308979,
        0.008305113762617111,
        0.015150279738008976,
        -0.002846274059265852,
        0.03100377693772316,
        0.0015285105910152197,
        0.017302045598626137,
        -0.05905508995056152,
        0.025012314319610596,
        0.028754793107509613,
        0.010003495961427689,
        0.02647922933101654,
        -0.0021247752010822296,
        0.06876121461391449,
        -0.022411508485674858,
        0.016791444271802902,
        0.01199761126190424,
        0.06477637588977814,
        -0.007586868945509195,
        -0.029539067298173904,
        -0.021011603996157646,
        0.0026347474195063114,
        -0.07130024582147598,
        0.004816823173314333,
        0.02571878768503666,
        0.005768980830907822,
        -0.1279888153076172,
        -0.0012266634730622172,
        0.11667143553495407,
        -0.005354937165975571,
        0.0358683317899704,
        -0.017459724098443985,
        0.0427468903362751,
        -0.04897076264023781,
        -0.044798415154218674,
        -0.04988400265574455,
        0.008615574799478054,
        -0.01540650799870491,
        -0.05813513696193695,
        0.057265058159828186,
        0.07781615108251572,
        -0.05420992895960808,
        -0.01927972212433815,
        0.01715273968875408,
        0.10048482567071915,
        -0.030366387218236923,
        0.004235555417835712,
        -0.07801160961389542,
        0.09394622594118118,
        -0.0031197716016322374,
        7.364225893979892e-05,
        0.02124534733593464,
        0.059627436101436615,
        -0.08417685329914093,
        -0.05748600512742996,
        0.048928238451480865,
        -0.002970846137031913,
        -0.022280918434262276,
        -0.06394433230161667,
        0.01473479624837637,
        0.021693158894777298,
        0.059930525720119476,
        0.03394977003335953,
        -0.005876832641661167,
        8.498061554485043e-33,
        -0.0347004234790802,
        0.11447575688362122,
        -0.036086518317461014,
        -0.06033552810549736,
        0.0011274584103375673,
        0.030222393572330475,
        0.044837404042482376,
        0.034491367638111115,
        -0.0331251323223114,
        0.07036840915679932,
        -0.05953536555171013,
        -0.03370095416903496,
        -0.013082880526781082,
        0.03405728191137314,
        0.03491925820708275,
        -0.1300959289073944,
        -0.06538103520870209,
        0.044094204902648926,
        0.06905314326286316,
        0.09254070371389389,
        0.09518226236104965,
        -0.02216414362192154,
        -0.010513672605156898,
        -0.06781259924173355,
        0.04609763249754906,
        0.006661581341177225,
        0.03251877799630165,
        0.03243100643157959,
        0.125536248087883,
        0.005433893296867609,
        -0.06704689562320709,
        -0.023702338337898254,
        -0.04302194342017174,
        -0.05090383440256119,
        0.08816325664520264,
        0.023141911253333092,
        -0.021937906742095947,
        -0.057927779853343964,
        -0.07270494848489761,
        0.004571589175611734,
        0.02242036536335945,
        0.05083508417010307,
        -0.07334265857934952,
        -0.09357623010873795,
        -0.0816483199596405,
        -0.0044227526523172855,
        0.020112838596105576,
        -0.024544263258576393,
        -0.08914296329021454,
        0.05355856567621231,
        0.0568392314016819,
        0.11654116213321686,
        -0.12680338323116302,
        0.014617162756621838,
        0.014102857559919357,
        0.027355454862117767,
        0.023925920948386192,
        -0.011844005435705185,
        0.0659690871834755,
        0.1005307137966156,
        0.020149430260062218,
        -0.14319811761379242,
        -0.04693685099482536,
        -0.07091617584228516,
        -0.05381755530834198,
        -0.0010183145059272647,
        0.03521108254790306,
        0.006800036411732435,
        0.004923395812511444,
        0.06460832059383392,
        0.019357094541192055,
        0.02007392793893814,
        0.03781086951494217,
        -0.018649399280548096,
        0.08486885577440262,
        0.019732477143406868,
        -0.005623327102512121,
        0.03606248274445534,
        -0.05175644904375076,
        -0.030542613938450813,
        -0.08360745757818222,
        -0.038185615092515945,
        0.04620897397398949,
        0.0011390579165890813,
        0.05479961261153221,
        -0.05526259168982506,
        0.010399701073765755,
        -0.013992714695632458,
        -0.007558131590485573,
        -0.011874645948410034,
        -0.078876793384552,
        0.014170180074870586,
        0.01916532590985298,
        0.025484727695584297,
        -0.0455535426735878,
        -7.129498868695918e-33,
        -0.025747880339622498,
        -0.041411422193050385,
        -0.03544563800096512,
        0.08943307399749756,
        0.02447330951690674,
        -0.0021166882943361998,
        -0.00034613447496667504,
        0.06995314359664917,
        0.07672122120857239,
        -0.005298996809870005,
        0.039700135588645935,
        0.03925437852740288,
        0.027176570147275925,
        0.026972314342856407,
        0.03259386867284775,
        -0.1461113542318344,
        0.05005224421620369,
        -0.04032503440976143,
        0.012626673094928265,
        -0.044691022485494614,
        0.028223592787981033,
        0.03815653920173645,
        0.004773431457579136,
        -0.021679557859897614,
        0.02603127993643284,
        0.03897462040185928,
        -0.03973447531461716,
        0.06290179491043091,
        0.03238067775964737,
        0.004819029476493597,
        0.02458297461271286,
        -0.006614531856030226,
        -0.017416860908269882,
        -0.03243008628487587,
        0.06219327449798584,
        0.016187213361263275,
        0.0770438015460968,
        0.054953448474407196,
        0.011082328855991364,
        0.023168927058577538,
        0.12200257182121277,
        0.06554212421178818,
        -0.04562681168317795,
        -0.059510063380002975,
        -0.005108034238219261,
        0.055316608399152756,
        -0.048294465988874435,
        -0.07445821911096573,
        -0.03676704317331314,
        0.03570742532610893,
        0.04810205474495888,
        -0.015897290781140327,
        -0.02413790486752987,
        0.036817170679569244,
        -0.033623870462179184,
        -0.029598256573081017,
        0.03891807794570923,
        0.015145123936235905,
        0.027508076280355453,
        0.021985657513141632,
        0.05590912327170372,
        0.03835951164364815,
        -0.0702197328209877,
        -0.036501698195934296,
        0.08766430616378784,
        -0.019904937595129013,
        0.01597805880010128,
        -0.018922893330454826,
        0.07304169982671738,
        0.06910990923643112,
        -0.09633246809244156,
        -0.009388376958668232,
        -0.0723799392580986,
        0.04901369661092758,
        -0.0076860892586410046,
        0.011104353703558445,
        0.017019283026456833,
        -0.0015655691968277097,
        0.047282420098781586,
        -0.022733619436621666,
        -0.02934047020971775,
        -0.029318641871213913,
        0.07287047803401947,
        0.025052255019545555,
        -0.006287988740950823,
        -0.05408747121691704,
        -0.017703553661704063,
        -0.03439529612660408,
        0.080097995698452,
        -0.03576790913939476,
        -0.025691669434309006,
        0.00763594638556242,
        -0.10690097510814667,
        0.12326765805482864,
        0.06687262654304504,
        -5.688996651542766e-08,
        -0.023457413539290428,
        0.05940602347254753,
        -0.022083157673478127,
        0.08861488848924637,
        -0.058225616812705994,
        -0.096947580575943,
        -0.04014826565980911,
        -0.06237630173563957,
        0.09843725711107254,
        -0.0194232314825058,
        0.07880596816539764,
        -0.07505638152360916,
        -0.05943342298269272,
        -0.008998953737318516,
        -0.016867537051439285,
        -0.004392110742628574,
        -0.007856106385588646,
        -0.03577379137277603,
        -0.012132215313613415,
        0.006677418481558561,
        -0.0574384443461895,
        0.07697613537311554,
        0.0189240500330925,
        -0.008549373596906662,
        0.029791871085762978,
        0.05146922171115875,
        0.06364849954843521,
        0.024615224450826645,
        0.13706696033477783,
        -0.0400896817445755,
        -0.08098581433296204,
        0.047046367079019547,
        0.010207844898104668,
        -0.0360567606985569,
        0.0038719400763511658,
        -0.053290046751499176,
        -0.06167298182845116,
        0.09903185814619064,
        0.0836583599448204,
        0.07369063049554825,
        0.016821864992380142,
        0.024607593193650246,
        -0.04200251027941704,
        -0.06935109198093414,
        0.00033994120894931257,
        -0.03024718165397644,
        -0.09532623738050461,
        -0.12102226167917252,
        -0.010114778764545918,
        -0.03396819531917572,
        -0.003732837038114667,
        0.08594349026679993,
        -0.05128291994333267,
        -0.006188933737576008,
        0.07777774333953857,
        -0.04652318358421326,
        -0.016108890995383263,
        -0.010798154398798943,
        -0.011976733803749084,
        0.04438542574644089,
        -0.035586774349212646,
        -0.059099435806274414,
        -0.00010731920338002965,
        -0.0016034640138968825
    ]
}