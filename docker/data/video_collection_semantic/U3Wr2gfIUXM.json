{
    "id": "U3Wr2gfIUXM",
    "title": "Kali Linux: Hacking Networks Part 2",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2019-11-04T17:37:37Z",
    "video_url": "https://www.youtube.com/watch?v=U3Wr2gfIUXM",
    "category": "Science & Technology",
    "tags": [
        "kali linux",
        "kali linux tutorial",
        "kali linux install",
        "kali linux hacking tutorials playlist",
        "kali linux basics",
        "kali linux tutorial for beginners",
        "kali linux 2019",
        "kali linux 2020",
        "kali linux hacking tutorials",
        "ethical hacking",
        "ethical hacking tutorial",
        "ethical hacking free course",
        "ethical hacking course",
        "how to become a hacker",
        "ccna",
        "ccna 200-301",
        "linux tutorial",
        "ceh",
        "oscp",
        "hacker",
        "hacking",
        "cisco training",
        "ine",
        "cbt nuggets",
        "ccna study",
        "kali",
        "yersinia",
        "whitehat",
        "whitehat hacking",
        "linux"
    ],
    "views": 156006,
    "likes": 3318,
    "comments_count": 228,
    "description": "It's so easy to hack badly configured networks using Kali Linux! See how easy it is to take out networks using Kali Linux and protocols like Dynamic Trunking Protocol (DTP) and VLAN Trunking Protocol (VTP); and also capture network traffic using Wireshark. Make sure you have configured your networks securely! Otherwise, look at how simple it is to hack networks using Kali Linux running on a Windows 10 computer. Applications like Yersinia make hacking with Kali Linux super easy! It's important that you as a network professional know how to protect networks from hackers. Even the new Cisco CCNA 200-301 exam covers some of these hacking topics. Don't just learn the theory of hacking, learn how to hack practically.   In this Ethical Hacking with Kali Linux playlist, I'm going to show you step by step how to hack and protect networks. This is white-hat hacking, not black-hat -  in other words this is about teaching you Ethical hacking to help you better secure your networks!  In a previous video I showed you how to get started with Yersinia and hack CDP and Spanning Tree Protocol (STP). In this video I show you how to leverage DTP and VTP to hack networks with kali linux. Make sure you learn how network protocols work and understand their weaknesses. Just because a Cisco switch or router supports a protocol, doesn't mean you should enable it and use it. In many cases you need to either optimize the network protocol or disable it. Otherwise, hackers using Kali Linux will be able to hack your network and break things.  Menu: Introduction 0:00 DTP hacks: 2:15 Wireshark: 5:18 VTP attacks: 8:00 Remotely Delete a VLAN: 10:54 Delete all VLANS! 13:33   ====================== Previous Videos: ====================== Kali Linux installation video:  Kali Linux: Hacking Networks Part 1:   ====================== CCNA content: ====================== Free CCNA content:   CCNA course:   kali linux Hacking Ethical hacking  EVE-NG GNS3 VIRL Packet Tracer 10x Engineer CCNA Cisco Devnet Associate  CCNP Enterprise CCNP Security CCNP Data Center CCNP Service Provider CCNP Collaboration Cisco Certified Devnet Professional Cisco Certified Network Professional  LPIC 1  LPIC 2 Linux Professional Institute LX0-103 LX0-104  XK0-004   Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   ======================== Switch configuration: ========================  c2960-CG# sh run ! version 15.0 no service pad service timestamps debug datetime msec service timestamps log datetime msec no service password-encryption ! hostname c2960-CG ! boot-start-marker boot-end-marker ! enable password cisco ! no aaa new-model ! ip dhcp pool vlan1  network 10.1.1.0 255.255.255.0  default-router 10.1.1.254  dns-server 10.1.1.254 ! ip dhcp pool vlan2  network 10.1.2.0 255.255.255.0  default-router 10.1.2.254  dns-server 10.1.2.254 ! ! ! ! ! ! spanning-tree mode pvst spanning-tree extend system-id ! ! ! ! ! ! ! ! ! vlan internal allocation policy ascending ! ! ! ! ! ! ! ! ! ! ! interface GigabitEthernet0/1 ! interface GigabitEthernet0/2  switchport access vlan 2  switchport mode access ! interface GigabitEthernet0/3  switchport access vlan 2  switchport mode access ! interface GigabitEthernet0/4 ! interface GigabitEthernet0/5 ! interface GigabitEthernet0/6 ! interface GigabitEthernet0/7 ! interface GigabitEthernet0/8 ! interface GigabitEthernet0/9 ! interface GigabitEthernet0/10 ! interface Vlan1  ip address 10.1.1.254 255.255.255.0  no ip route-cache ! interface Vlan2  ip address 10.1.2.254 255.255.255.0  no ip route-cache ! ip http server ip http authentication local ip http secure-server ! ! ! ! line con 0 line vty 0 4  password cisco  login  transport input all line vty 5 15  login ! end   ========================  #kalilinux #ethicalhacking #hacker",
    "description_links": [
        "https://youtu.be/AnwgxRtWXLI",
        "https://youtu.be/K1bMSPje6pw",
        "https://www.youtube.com/playlist?list=PLhfrWIlLOoKM3niunUBTLjOR4gMt_uR_a",
        "http://bit.ly/2PmTVPD"
    ],
    "transcript": "- This is one of multiple videos where I'm showing you how to hack networks using Kali Linux. In previous videos, I showed you how to download and install Kali Linux on a Windows 10 computer using a prebuilt image that you can download from kali.org. I also showed you how you can hack Cisco networks when a switch is badly or poorly configured. It's important that you configure networks properly, otherwise it's very easy to hack networks, such as Cisco networks, using Kali Linux. In this video I'm gonna show you how easy it is to break networks that are badly configured. We're gonna use two protocols. The first one: Dynamic Trunking Protocol or DTP; and the second one: VTP or VLAN Trunking Protocol. We're basically going to do things to the network by leveraging those two protocols. I'm gonna show you, as an example, how you can take devices off the network by sending VTP packets to a Cisco switch using Kali Linux. So we're basically going to delete VLANs from a switch by simply injecting VTP packets into the network. Kali Linux, in our example, will be configured on one VLAN, we'll have hosts on a separate VLAN, but that's not gonna stop us, we're going to use DTP to form a trunk with a Cisco switch, have visibility of a separate VLAN, so Kali Linux will be in one VLAN, let's say VLAN 1, our hosts will be in a separate VLAN, let's say VLAN 2, we'll send DTP packets to the switch so that we have visibility of those hosts from our Kali Linux host, and then what we'll do is use VTP to delete VLANs automatically on a Cisco switch, basically removing devices in one VLAN from the network. I've been in your waters I thought you were my love I know one thing for sure - Now before we get started, please consider subscribing to my YouTube channel, please like this video if you enjoy it, and please click on the bell to get notifications when I post a new video. All right, without further ado, let me show you how to hack Cisco networks. At the moment, on the switch, show interface trunk shows us that there are no trunk ports on the switch. Show interface gigabit zero one, switchport shows us that this port, there's the command again, this port is configured to use DTP but at the moment, it's a static access port, administrative mode is dynamic auto. Bad idea to use DTP. Show run interface gigabit zero one shows us that this port is configured with a default configuration. That's a bad idea, because what we can do is launch a DTP attack. And enable trunking by simply selecting that option and clicking okay. Yesinia sees that there's a switch using access auto, which is what we saw over here. Dynamic auto. But in the output of the switch, we can see that the interface went down and came up again. Gigabit zero one went down, now gigabit zero one has come up. And if we use the same command again, show interface trunk, notice trunking is now enabled on gigabit zero one. So gigabit zero one is using 802.1q. The VLAN 1 interface on the switch, or the SVI or switched virtual interface came up, because we have an interface in that VLAN, but again, show interface trunk native VLAN is VLAN 1 on this port, but trunking is now used using 802.1q, mode is auto, VLANS 1 and 2 are allowed across that trunk. That means that Kali Linux will have visibility of the PC in VLAN 2. Show run, interface gigabit zero one. No configuration on that port, but the MacBook is in VLAN 2, notice it's been configured in VLAN 2, and if we type show interface gigabit zero two switchport, we can see through this command that that port gigabit zero two is configured in VLAN 2. It's currently acting as an access port. Again, Kali Linux, which is supposedly in VLAN 1, will be able to see traffic sent by devices in VLAN 2. Before we look at that, let's have a look at Spanning Tree again. So show Spanning Tree. For VLAN 1, the switch is no longer the root. It has a cost of four to get to the root switch. Gigabit zero one is its root port to get to the root switch. For VLAN 2, it's the root. Notice gigabit zero one and zero two are now designated ports. Previously we only saw gigabit zero two in the output there. So back in Kali Linux, let's start WireShark. Select Capture, Start. You can see that we're capturing a bunch of traffic on the network, including Spanning Tree. Bunch of other traffic seen here. But let's filter for DHCP. On the MacBook, currently has this IP address. I'm going to disable the ethernet interface on the MacBook. I'll enable it again. So that it sends a DHCP request. Notice Kali Linux is seeing the DHCP information. So it's seeing the DHCP discover message, seeing the DHCP offer from the switch to that host, it sees the DHCP request and sees the DHCP acknowledgment. This is on VLAN 2. Notice the IP address, 10.1.2.254. Giving this IP address to the MacBook. So the MacBook has been given IP address 10.1.2.2, and Kali Linux, which is supposedly in a different VLAN, was able to see that. On the MacBook, if I ping a nonexistent IP address, so ping 10.1.2.123, I'll press enter on the MacBook, and filter for arp. Notice we can see arp resolution protocol. Sender IP address is this, looking for the MAC address of 10.1.2.123. Basically, the Kali Linux host, which is supposedly in VLAN 1, can now see the traffic in VLAN 2. Now that's a broadcast. If the host sent multicast traffic to, let's say, 239.1.2.3, the Kali Linux host would see that ICMP traffic. So here we go. We can see IP address 10.1.2.2 pinging 239.1.2.3. This is multicast traffic. I'll stop that ping. Now this is not doing much; I'll show you in a subsequent video how I can, for instance, sniff OSPF passwords. OSPF, which is a routing protocol, sends updates into the network using multicast, and Kali Linux will be able to sniff those routing updates and capture passwords, as an example, on the OSPF updates. So what we've seen thus far is a CDP attack; I've shown you a DTP attack; and I've shown you Spanning Tree. Let's have a look at VTP. VTP is a really bad protocol. Generally you want to turn it off. It's actually been removed from the Cisco CCNA exam. So in the next release of CCNA, it won't be there. If I type show VTP status, the switch is in this domain, called home. It's currently acting as a server, configuration revision number is one. It has six VLANs configured. Show VLAN brief as an example. Shows me that VLAN 1 and VLAN 2 exist on the switch. If I create another VLAN, let's say VLAN 3, show VLAN brief, VLAN 3 has been created, show VTP status. Configuration revision number is now 2. So in Kali Linux, let's send a VTP packet. You can see it's learnt about the home VTP domain. So I'm gonna launch an attack and let's delete a VLAN. Now before I do that, I'm gonna plug in my MacBook, so this MacBook is now plugged into the network on port three. So on the switch, we can see that gigabit zero three came up, so show IP interface brief. Gigabit zero one, two, and three are now up. I'll configure gigabit zero three as an access port and put it into VLAN 2. So show run. These two ports are now in the same VLAN. On this MacBook, I'm going to enable DHCP. It should get an IP address in VLAN 2. And there you go, 10.1.2.3. So onto that MacBook over there, the small one, ping 10.1.2.3, ping succeeds. So again, that MacBook can ping this MacBook. They're both in VLAN 2. But what I'll do now in Kali Linux is delete a VLAN. And the VLAN I'm going to delete is VLAN 2. So on the switch, show VTP status. At the moment, configuration revision number is still two. Show VLAN brief; we still have those VLANs. I've seen sometimes that this doesn't work that well, but notice here, VLAN 2 has now been removed. I've noticed sometimes you have to create a VLAN to speed this up, but if I type show VLAN brief, VLAN 2 is missing, and that MacBook can no longer ping this MacBook. I've basically removed these two devices from the network. Again, show interface gigabit zero two switchport. Gigabit zero two, the interface that that MacBook is connected to, is configured in VLAN 2 but the VLAN is inactive, so basically I've removed these devices from the network. If I have a look at gigabit zero three, that's the port that this MacBook is connected to. It's also in VLAN 2, so this command shows us that gigabit zero three is configured in VLAN 2, but it's inactive. I've removed the device from the network, essentially. So if I create VLAN 2 again, so show VLAN brief, I've now got VLAN 2 back on the switch. The pings should start succeeding once things converge and there you go, the pings are now succeeding. Interface VLAN 2 has also come up on the switch. So that MacBook can now ping this MacBook. But again, I can simply delete that VLAN, using Kali Linux. Show VLAN brief shows us that the VLAN exists. To speed things up, I could simply create another VLAN, so let's create VLAN 5, type exit, and as soon as I did that, the pings started failing on the MacBook because things converge quicker when you actually do something on the switch like create a VLAN. Otherwise you just need to wait a while for that VLAN to be removed. So show VLAN brief, VLAN 5 is there, but VLAN 2 is gone. And if you wanna really be nasty, you could simply say delete all VTP VLANS. So at the moment, we've got VLAN 1, 3, and 5. 1 will not be deleted 'cause it's a default VLAN. These other VLANs will also not be deleted but 3 and 5 should disappear when this converges. To speed it up, I'll create VLAN 10 and type end. So show VLAN brief, notice all the VLANs have gone. VLAN 3, 5, 2, 10 are all gone. That can basically break an entire network, if you're using VTP, so don't use VTP or set your devices to transparent. So either disable VTP or use transparent. Don't use server or client mode. VTP is a bad idea. Now there's some basic examples of how you can hack networks using Kali Linux. Make sure that you understand how your protocols work in your network and how you can secure your network. In other videos, I'll show you how you can protect your network from these kind of hacks, but in this video I wanted to show you what's possible using Kali Linux. I've been in your waters I thought you were my love I know one thing for sure",
    "transcript_keywords": [
        "Kali Linux",
        "VLAN",
        "Show VLAN",
        "Kali",
        "Linux",
        "Kali Linux host",
        "show",
        "VTP",
        "VLANs",
        "switch",
        "gigabit",
        "MacBook",
        "interface",
        "Cisco",
        "network",
        "Notice Kali Linux",
        "VTP VLANS",
        "DTP",
        "create VLAN",
        "DHCP"
    ],
    "transcript_entity_values": [
        "first",
        "six",
        "Spanning Tree",
        "three",
        "MacBook",
        "VLAN 2",
        "WireShark",
        "Cisco",
        "two",
        "four",
        "239.1.2.3",
        "10.1.2.254",
        "VLAN 2",
        "2",
        "zero",
        "Select Capture",
        "second",
        "5",
        "YouTube",
        "3",
        "SVI",
        "Gigabit zero",
        "VLAN",
        "Dynamic Trunking Protocol",
        "IP",
        "MacBook",
        "Spanning Tree",
        "10.1.2.2",
        "VLAN Trunking Protocol",
        "one",
        "VLAN 1",
        "OSPF",
        "3",
        "MAC",
        "239.1.2.3",
        "Cisco",
        "Windows 10",
        "10.1.2.123",
        "CCNA",
        "Spanning Tree",
        "gigabit zero",
        "Kali Linux",
        "VTP",
        "1",
        "DHCP",
        "5",
        "2",
        "Interface VLAN 2",
        "10",
        "CDP",
        "DTP"
    ],
    "transcript_entity_types": [
        "ORDINAL",
        "CARDINAL",
        "FAC",
        "CARDINAL",
        "ORG",
        "LAW",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "PRODUCT",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "ORDINAL",
        "DATE",
        "ORG",
        "CARDINAL",
        "ORG",
        "PRODUCT",
        "ORG",
        "PRODUCT",
        "ORG",
        "FAC",
        "ORG",
        "CARDINAL",
        "LAW",
        "CARDINAL",
        "LAW",
        "ORG",
        "DATE",
        "ORG",
        "CARDINAL",
        "GPE",
        "PRODUCT",
        "CARDINAL",
        "ORG",
        "WORK_OF_ART",
        "CARDINAL",
        "PERSON",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "DATE",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG"
    ],
    "vector": [
        -0.03239792585372925,
        0.04897679015994072,
        -0.04281572625041008,
        -0.006187973544001579,
        -0.03532753512263298,
        0.013895416632294655,
        -0.004427875392138958,
        -0.003265555715188384,
        -0.06682028621435165,
        0.019932599738240242,
        0.016825350001454353,
        -0.004133976064622402,
        -0.04322662949562073,
        -0.032005034387111664,
        -0.021761389449238777,
        -0.044476479291915894,
        -0.013750317506492138,
        0.06859038770198822,
        0.0036131495144218206,
        -0.06373710930347443,
        -0.01275275181978941,
        -0.10517708212137222,
        0.010928286239504814,
        -0.026542644947767258,
        -0.02771735191345215,
        0.012860368005931377,
        0.052382033318281174,
        -0.004887104500085115,
        -0.030002973973751068,
        -0.05715816840529442,
        -0.06400034576654434,
        0.006928332149982452,
        -0.03297589346766472,
        0.0170914214104414,
        -0.09542901068925858,
        -0.05819425359368324,
        -0.007138860411942005,
        0.02137977071106434,
        -0.010935051366686821,
        -0.04874014854431152,
        -0.015595439821481705,
        -0.05893069505691528,
        -0.05648602917790413,
        0.018688607960939407,
        -0.013604930602014065,
        -0.0957624763250351,
        -0.05686710774898529,
        0.0907798632979393,
        0.031418558210134506,
        -0.0806753858923912,
        -0.0033604002092033625,
        -0.006462442688643932,
        -0.02081487700343132,
        0.02835228107869625,
        0.01893753372132778,
        -0.09069860726594925,
        0.021796394139528275,
        0.05795136094093323,
        0.10499907284975052,
        0.0048333522863686085,
        0.05070286989212036,
        0.0025030041579157114,
        -0.06996235251426697,
        0.05923270061612129,
        -0.039929796010255814,
        -2.511813181627076e-05,
        0.02143719047307968,
        0.12108254432678223,
        0.019463535398244858,
        0.029454432427883148,
        -0.05423586815595627,
        -0.026028156280517578,
        0.01800704561173916,
        0.03653586283326149,
        0.07704514265060425,
        0.10031475871801376,
        -0.0171029232442379,
        0.01015932485461235,
        0.02878553979098797,
        0.03858822584152222,
        0.1292547881603241,
        0.11182472854852676,
        -0.05405397340655327,
        0.0329667367041111,
        -0.006181731354445219,
        0.07635599374771118,
        -0.08880893886089325,
        0.03350561857223511,
        0.05409678816795349,
        -0.06440917402505875,
        0.006067272741347551,
        0.03965231031179428,
        -0.039550695568323135,
        0.019729556515812874,
        0.04616459831595421,
        0.00847409013658762,
        0.0009136995649896562,
        -0.030708083882927895,
        -0.036371003836393356,
        0.040411096066236496,
        -0.02606998197734356,
        -0.04611428827047348,
        0.008662233129143715,
        -0.06956902146339417,
        0.0031394618563354015,
        0.07975957542657852,
        0.048100415617227554,
        -0.04850916564464569,
        0.036632269620895386,
        0.018105577677488327,
        -0.07995855808258057,
        0.09139938652515411,
        -0.0894576832652092,
        -0.09536390006542206,
        0.047993648797273636,
        0.028567105531692505,
        -0.004926573485136032,
        0.11820710450410843,
        0.03492695093154907,
        0.01854313351213932,
        -0.03555227071046829,
        -0.022143172100186348,
        -0.021435130387544632,
        -0.041474808007478714,
        0.06932774186134338,
        -0.03604121133685112,
        -0.03282046318054199,
        4.016295385407186e-33,
        0.07524476200342178,
        0.06532197445631027,
        -0.06542761623859406,
        0.012574629858136177,
        0.10322580486536026,
        -0.06713356077671051,
        0.04283968731760979,
        -0.04282735288143158,
        -0.08248027414083481,
        0.07604075968265533,
        0.004988351371139288,
        -0.01483443658798933,
        -0.05736248940229416,
        -0.03390875458717346,
        0.11784110218286514,
        0.0032437387853860855,
        0.0018379088724032044,
        -0.09648504108190536,
        0.011571084149181843,
        0.006848393939435482,
        0.05634172260761261,
        -0.08240772783756256,
        0.017360562458634377,
        0.02158821001648903,
        0.09565198421478271,
        0.04207254946231842,
        -0.10702113062143326,
        -0.08632352203130722,
        0.0737258791923523,
        0.03481162339448929,
        -0.03430865332484245,
        0.02328001894056797,
        -0.022734645754098892,
        0.032181281596422195,
        -0.04778172820806503,
        0.010934175923466682,
        -0.03417537733912468,
        -0.06940644234418869,
        -1.7248259609914385e-05,
        -0.051941078156232834,
        -0.03291269764304161,
        -0.029232362285256386,
        0.0012695530895143747,
        -0.03211048245429993,
        0.0637662410736084,
        -0.0014069571625441313,
        0.012596111744642258,
        0.02059004455804825,
        0.03696667030453682,
        0.04333627596497536,
        -0.060795899480581284,
        -0.03610072657465935,
        -0.005435490515083075,
        0.023585718125104904,
        0.008390058763325214,
        0.010283115319907665,
        0.07083185017108917,
        -0.020660530775785446,
        0.04551183804869652,
        0.12254501134157181,
        -0.017775269225239754,
        0.0012369075557217002,
        -0.04605480656027794,
        0.005524698179215193,
        -0.05687880516052246,
        -0.058356184512376785,
        -0.06352817267179489,
        0.018839584663510323,
        0.0629725456237793,
        -0.017801007255911827,
        -0.09009160101413727,
        -0.004660645499825478,
        -0.0995892584323883,
        -0.010738364420831203,
        -0.057049497961997986,
        0.04475719481706619,
        0.04729487746953964,
        0.06371528655290604,
        0.012351548299193382,
        0.03414374589920044,
        -0.02216855064034462,
        0.010091529227793217,
        0.013665420934557915,
        -0.01232123002409935,
        0.031093427911400795,
        -0.00849359855055809,
        0.00043067257502116263,
        -0.08165614306926727,
        0.030433980748057365,
        0.1015147715806961,
        -0.016699528321623802,
        0.05469276010990143,
        0.018391402438282967,
        0.018245648592710495,
        0.022716378793120384,
        -5.897298670389963e-33,
        0.01572481170296669,
        0.07325080782175064,
        -0.0036663911305367947,
        -0.004040827509015799,
        -0.016790924593806267,
        -0.06100306287407875,
        -0.03153758496046066,
        0.020615579560399055,
        -0.0036803632974624634,
        -0.057005610316991806,
        -0.04694848135113716,
        -0.003713417798280716,
        0.03585454449057579,
        -0.029468057677149773,
        0.04646250233054161,
        -0.08167801797389984,
        0.009237231686711311,
        0.04700624942779541,
        -0.07875856757164001,
        -0.014265598729252815,
        -0.022000577300786972,
        0.18072006106376648,
        -0.053913816809654236,
        -0.06006135791540146,
        0.010842571035027504,
        -0.03551867604255676,
        0.05735122784972191,
        0.08794891834259033,
        0.018309777602553368,
        0.09449467062950134,
        0.04374750331044197,
        -0.005665727891027927,
        0.020810667425394058,
        0.05079644173383713,
        0.060423899441957474,
        0.03281434625387192,
        0.1398807168006897,
        0.056859586387872696,
        -0.014419907703995705,
        -0.034636158496141434,
        0.12415122240781784,
        0.02671453170478344,
        -0.13667288422584534,
        -0.04575534537434578,
        -0.009729663841426373,
        0.0074687921442091465,
        0.00831197202205658,
        0.08282056450843811,
        -0.0974864661693573,
        -0.06429558247327805,
        0.09969844669103622,
        -0.0390901118516922,
        0.02512696571648121,
        0.01579119823873043,
        0.010172232985496521,
        0.021580806002020836,
        0.04251467064023018,
        -0.011769209988415241,
        0.08925710618495941,
        0.04650992527604103,
        -0.016634151339530945,
        -0.05994994193315506,
        -0.08101999014616013,
        0.05761779844760895,
        -0.006546732969582081,
        -0.07118557393550873,
        -0.029676152393221855,
        -0.030614271759986877,
        -0.009611612185835838,
        -0.028563613072037697,
        -0.08798225969076157,
        0.026561105623841286,
        -0.02262326516211033,
        0.027290834113955498,
        0.013813688419759274,
        -0.03975251689553261,
        -0.05864328518509865,
        0.01634937897324562,
        -0.007118736859411001,
        0.022423529997467995,
        0.039103053510189056,
        0.01495872437953949,
        -0.04624705761671066,
        -0.038032013922929764,
        0.03075101599097252,
        0.10690773278474808,
        0.053134944289922714,
        0.00209682434797287,
        0.018373843282461166,
        -0.019752539694309235,
        -0.10247305035591125,
        0.009253788739442825,
        -0.008202996104955673,
        0.07937520742416382,
        0.08788741379976273,
        -4.825664134955332e-08,
        0.01810375601053238,
        0.06411286443471909,
        -0.002260657260194421,
        0.03791498392820358,
        0.03289468586444855,
        0.05137110501527786,
        0.0013189110904932022,
        -0.0696151927113533,
        0.024764016270637512,
        0.061965543776750565,
        -0.06063676252961159,
        0.03880523145198822,
        -0.030614405870437622,
        0.02411630004644394,
        -0.025273427367210388,
        0.012054556049406528,
        -0.026188842952251434,
        -0.013446811586618423,
        -0.027949348092079163,
        0.009371994994580746,
        -0.0011249841190874577,
        -0.027327869087457657,
        0.026685187593102455,
        0.04943278804421425,
        0.0018591504776850343,
        -0.015123005956411362,
        0.07092460989952087,
        -0.021707240492105484,
        -0.0013123333919793367,
        0.04691576212644577,
        -0.06912046670913696,
        -0.035382483154535294,
        0.0036076365504413843,
        0.033059440553188324,
        -0.06007244065403938,
        0.05340668559074402,
        -0.08365466445684433,
        -0.009639407508075237,
        0.03486139699816704,
        0.025934139266610146,
        -0.12716546654701233,
        -0.09553463757038116,
        0.037314388900995255,
        -0.03188500553369522,
        -0.14651547372341156,
        -0.007885636761784554,
        -0.029019130393862724,
        0.03659680113196373,
        0.024923954159021378,
        -0.05585417151451111,
        0.014694660902023315,
        -0.006784472148865461,
        -0.023284904658794403,
        -0.07229378074407578,
        -0.0064657218754291534,
        0.012738501653075218,
        0.03724471479654312,
        -0.011846056208014488,
        0.0010641540866345167,
        0.0001921226503327489,
        0.015147543512284756,
        -0.023464281111955643,
        -0.011517442762851715,
        -0.03421010449528694
    ]
}