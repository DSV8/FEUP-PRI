{
    "id": "LBM3EzBXhdY",
    "title": "Warning! Python Remote Keylogger (this is really too easy!)",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2022-08-12T14:00:24Z",
    "video_url": "https://www.youtube.com/watch?v=LBM3EzBXhdY",
    "category": "Science & Technology",
    "tags": [
        "python",
        "keylogger",
        "keylogger python",
        "keylogger for windows",
        "keylogger app",
        "keylogger kali linux",
        "keylogger attack",
        "keylogger for pc",
        "keylogger tutorial",
        "keylogger download",
        "kali linux",
        "python keylogger",
        "python tutorial",
        "cyber security",
        "python executable",
        "pyinstaller",
        "windows 11",
        "windows defender",
        "windows 11 defender",
        "windows defender not working",
        "windows defender vs virus",
        "nuitka python",
        "python exe",
        "python compiler",
        "pyinstaller tutorial",
        "pyinstaller exe",
        "pyinstaller windows"
    ],
    "views": 348451,
    "likes": 10440,
    "comments_count": 420,
    "description": "Create your own virtual machine on Linode with a 60-day $100 credit:   If that link doesn't work for you, try this link:   Please note: Credits expire in 60 days. Big thanks to Linode for sponsoring this video!  I wrote a Python program that saves keystrokes to a cloud server. I compiled the script to run on a Windows 11 computer with anti-virus enabled. May this be a warning to both you and your family. Don't download software that you don't trust. Only download software from reputable software developers and those you trust.  Disclaimer: This video is for educational purposes only. I own all equipment used for this demonstration. No actual attack took place.  // MENU // 00:00 - Be careful what you download 00:07 - Intro 00:16 - How to capture keystrokes with Python 00:41 - Keylogger demo 03:30 - How to setup the keylogger 10:34 - Conclusion  // Code // Keylogger:  Server:   // Video mentioned //  Python keylogger bypasses Windows 11 Defender:   // SOCIAL // Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:  YouTube:    // SPONSORS // Interested in sponsoring my videos? Reach out to my team here: sponsors@davidbombal.com  python keylogger python keylogger windows 11 windows 11 keylogger pyinstaller py to exe py exe python py to exe python exe compile python python compile python exe python convert to exe python convert py to exe python py exe python code windows windows 10 anti virus real time protection windows anti virus windows real time protection windows 11 protection windows 11 python python compile compile python code compile python python windows windows python  Disclaimer: This video is for educational purposes only. I own all equipment used for this demonstration. No actual attack took place on any websites.  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #python #keylogger #wifi",
    "description_links": [
        "https://davidbombal.wiki/linode",
        "https://www.linode.com/lp/youtube-viewers/?ifso=davidbombal",
        "https://github.com/davidbombal/python-keylogger",
        "https://github.com/davidbombal/express-server-basic",
        "https://youtu.be/qaZ-IbssPDI",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal"
    ],
    "transcript": "- May this video be a warning to both you, and your family, why you shouldn't just download random software from the internet, and run it on your laptop. (intense music) In this video, I'm gonna show you how I created a Python script that logs keystrokes on a Windows 11 computer, and then sends those keystrokes to a server on the internet. In this example, I'm using a Linode server. I really wanna thank ode for Linode for sponsoring this video. You can use the link below, to get a hundred dollar, 60 day-credit, so that you can try this out for yourself. So use the link below, if you wanna follow along what I've done is spin up a small Linode server. I'll show you later in the video, how to set this up. I've SSHed to the server. And what I'm gonna do is start and express service on the server. So I've got an app that's now listening on port 8080. I can connect to the server's IP address which is 109.74.195.198, port 8080, using my browser. At the moment, no data has been logged on the server. but it is listening. On this Windows 11 computer, if I search for virus and threat protection what you'll notice is real time protection is enabled. Cloud-delivered protection is enabled. I haven't disabled any antivirus on this laptop. Everything is enabled. I'll check for Windows updates. (fast forwarding) As you can see, the laptop is up to date. Antivirus is enabled on the laptop, but what I've done is compile a Python script, which I've now called Win64file, so just some random name. If I double click on that, what you'll notice is it looks like nothing's happened. But if I go and look at task manager, you'll see that that process is running in the background. A user could go to a website, and log in. For this example, just to make sure I stay on the right side of YouTube, I'm just gonna open up Notepad, and I'll type some text like, \"Password is my secret password.\" What you'll notice is that information is being logged to my server on the internet. This refreshes every 10 seconds. That's on the console. But on the web interface, you can see there's the output. So NO was because of notepad. I started Notepad. If I type something like, \"Hello, this is important,\" assuming that I can spell, typing like this. I'll refresh that information on the webpage, and notice it says, \"Hello, this is important.\" And going to the console, that information is displayed. This was developed in Python. It's being compiled as an executable, as you can see there. It's running in the background. Task manager displays that. All of this is enabled. I'm running an up-to-date version of Windows 11. I'm still able to log keystrokes from this laptop. Hopefully Microsoft will improve their software so that this gets blocked. But for the moment, I'm able to log keystrokes from this laptop on a remote server. Please note that this is for educational purposes only. This is my own laptop. I'm not using someone else's laptop. This is my equipment. I'm using a virtual machine on Linode. I have permission to create a virtual machine on Linode. Okay, let me show you how I set this up. I've put the code on GitHub. So if you wanna have a look at the keylogger software, you can use the link below. I'm not gonna go through all the output of the keylogger software. We've put comments in the code, so that you can see what the code is doing. As an example, this is the IP address of the server that you would log information to. In my demonstration, that's the IP address of the server. This is the port number that the server is listening on. I've also created code shown you how to set up the server. The server JS file shows you how we set up the express server. Once again, it's listening on port 8080. We are capturing information into this file, the keyboard capture text file. So I'll break the script. LS shows me the capture file. So if I cat that, that's the information that was captured. So in this directory, we've got the capture file. We've got some other packages. But I'll show you in a moment how to set this up, because to make it easier, what we've done is we've created a setup.py file, So a Python file, that allows you to download all the software, and set this up very, very easily. So on GitHub, we basically tell you how to set up a new server, and use the Python script to build the server, to capture the keystrokes. In the Python file that's actually capturing the keystrokes, we've put a lot of comments, showing you the different keystrokes that are captured, and then showing you how that information is written to the server. Now, this is a proof of concept, and a warning. This code does not promote or encourage illegal activities. It's just to show you that it's a proof of concept, and can be improved in many ways. That's not the idea. I simply wanted to show you what's possible with a bit of Python. Okay, so let's set up a new server. I'll create a new Linode. I'm gonna specify an Ubuntu 2204 LTS server. In my example, I'll specify London as the place for the server. I'm gonna set up a shared CPU. I'll call this keylogdemo. I'll specify a password, and I'll create the Linode. Linode is a fantastic cloud provider. They make it really, really easy to set this up. As you can see, very easy to provision, and set up a server. We just need to wait now for that server to start, and then I'll be able to SSH to the server. So what I'll do is open up a new terminal on my Mac, and I'll paste that command in. As you can see, the server is now running. So I should be able to SSH to it, and log in. I'll accept the fingerprint. I'll put my password in, and there you go. I've now logged into the server. You can see it's in a Ubuntu server. And what I'll do is clear the screen, because to set up the server, all I need to do is copy some commands from my GitHub. So I'll paste in the git clone command. So as you can see, this directory has been created. I'll CD into that directory per this command. And then I need to run Python3setup.py. And what that'll do is download all the required software. So it's gonna run all these commands, including installing NPM, and then rebooting the server. So all you need to do now basically is wait for the software to be installed. You need to say yes to any prompts, to install the software. But to try and make this really, really easy. What we've done is build that Python script that downloads all the software that's required, installs the software, reboots the server, so that all you need to do to start the server is run this command: nodeserver.JS. On the previous server, that's all I did. Nodeserver.JS to start the app listing on port 8080. That's basically all we need to do now, is wait for the software to download, install, server to be rebooted, and then I can run this command to start the server. Now, while we waiting for that, on GitHub, I've once again got the keylogger Python script that imports requests, JSON, threading, specifies the IP address of the server. So you'd need to change the IP address here, and the port number, to the IP address and port number that you're using on your new server. You can specify an interval to specify how often that information is written to the server. And that's basically all you need to do, for the Python script to work. Now to compile the script, to get it, to run on Windows, like we did in this demo, where we are running this Win64 file, you would need to compile it with a compiler, such as PyInstaller. That's what we used. Now to make sure that we stay on the right side of the law, I've not given you all the steps. But basically what we did is, we used Microsoft's C/C++ compiler. We compiled the PyInstaller software, and then we compiled that script, using a new version of PyInstaller. That's how we got past the Windows Defender. If you just use PyInstaller by itself, Windows Defender will probably pick this up as malicious software, and then remove it. So what we had to do was recompile PyInstaller, using the Microsoft C/C++ compiler, and then compile the Python script that way. Now you could also use another compiler. I've put a video below, which shows you how to use a different compiler, to compile the Python code, so that it can run on Windows. Okay. So continuing with the installation, all I would do when prompted, is just go for the default options. So you need to press okay a few times to install and update various software. Basically just go through the prompts. Say yes to install various software, except the defaults such as this newer kernel available. So I'm going to say okay, say okay again. And you should be good to go on the server side. (fast forwarding) Okay. And there you can see the connection was closed by the remote host, and that's because the last command in our list of commands, is to reboot the server. Server's rebooted. All I need to do now is SSH back to the server, once it boots up again. And what you'll notice is the software directory is there. I can go into the directory, and then specify nodeserver.JS to start the server. And as you can see there, the app is now listening on port 8080. So it was as simple as that, to get the server up and running. Okay. So that's an example of a Python script, compiled to run on Windows 11 that's then sending keystrokes to a server in the cloud. In this case, hosted by Linode. You can, once again use the link below, to get a hundred dollar, 60-day credit, if you wanna try this for yourself. So spin up a Linode server. Use the commands as I demonstrated in this video. And then you can run the Python code, on your Windows, computer, if you've got Python installed, or compile it as an exe to send the keystrokes to the server on Linode, or whichever server you want to use. I hope you enjoyed this video. If you did, please like it. Please consider subscribing to my YouTube channel, and clicking on the bell to get notifications. I'm David Bombal and I wanna wish you all the very best. (intense music)",
    "transcript_keywords": [
        "server",
        "Python",
        "Python script",
        "Linode",
        "Linode server",
        "software",
        "Windows",
        "set",
        "script",
        "keystrokes",
        "file",
        "run",
        "video",
        "Python file",
        "laptop",
        "port",
        "information",
        "Python code",
        "Windows Defender",
        "code"
    ],
    "transcript_entity_values": [
        "Microsoft",
        "YouTube",
        "JSON",
        "SSH",
        "London",
        "NPM",
        "Linode",
        "Windows Defender",
        "SSHed",
        "the Microsoft C",
        "60-day",
        "Windows",
        "CPU",
        "YouTube",
        "109.74.195.198",
        "60 day",
        "IP",
        "a hundred dollar",
        "Python",
        "every 10 seconds",
        "Mac",
        "PyInstaller",
        "Windows 11",
        "Linode",
        "GitHub",
        "8080",
        "Win64",
        "the Windows Defender",
        "Windows",
        "David Bombal"
    ],
    "transcript_entity_types": [
        "ORG",
        "GPE",
        "ORG",
        "ORG",
        "GPE",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORG",
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "DATE",
        "ORG",
        "MONEY",
        "ORG",
        "TIME",
        "PERSON",
        "PERSON",
        "PRODUCT",
        "PRODUCT",
        "ORG",
        "CARDINAL",
        "ORG",
        "PERSON",
        "PRODUCT",
        "PERSON"
    ],
    "vector": [
        -0.01939334161579609,
        -0.009714864194393158,
        -0.02525048330426216,
        -0.11840914189815521,
        0.056892797350883484,
        0.057708580046892166,
        0.028960812836885452,
        -0.049330972135066986,
        -0.013253120705485344,
        0.05758872255682945,
        0.07745909690856934,
        0.04165026545524597,
        0.0715111643075943,
        -0.0682913064956665,
        0.02308868058025837,
        -0.03650812432169914,
        -0.02395649440586567,
        0.0318901389837265,
        -0.04606744647026062,
        0.006783472839742899,
        -0.007377545349299908,
        -0.048547398298978806,
        0.043313052505254745,
        0.02351241372525692,
        -0.03596075624227524,
        -0.014528023079037666,
        0.03355453908443451,
        -0.009003094397485256,
        -0.06669025123119354,
        0.037436068058013916,
        -0.054058391600847244,
        -0.08720894157886505,
        -0.029430868104100227,
        0.03459221124649048,
        0.05752003565430641,
        -0.04168332368135452,
        0.08965641260147095,
        0.03170357644557953,
        -0.014975858852267265,
        -0.02990606427192688,
        -0.03723390772938728,
        -0.046454910188913345,
        0.001633475418202579,
        0.03003714233636856,
        -0.04346238076686859,
        0.06636062264442444,
        -0.05050521343946457,
        -0.016055598855018616,
        0.0069822026416659355,
        -0.024334389716386795,
        -0.0704781711101532,
        0.052414581179618835,
        0.055484235286712646,
        -0.05346681550145149,
        -0.09566252678632736,
        -0.04180144518613815,
        3.0925453756935894e-05,
        -0.005356168374419212,
        0.06797726452350616,
        -0.010394769720733166,
        -0.03856493905186653,
        0.04080301895737648,
        0.005944785196334124,
        -0.016625186428427696,
        -0.07909201830625534,
        0.11256618797779083,
        0.027139535173773766,
        0.026329006999731064,
        0.08978016674518585,
        0.009974180720746517,
        -0.09439077228307724,
        -0.05387624725699425,
        -0.010465966537594795,
        -0.01180641632527113,
        -0.04447149857878685,
        -0.047573864459991455,
        -0.052668869495391846,
        -0.05837803706526756,
        0.0039921835996210575,
        -0.002639153739437461,
        -0.008028094656765461,
        -0.037879906594753265,
        -0.008284840732812881,
        0.07805900275707245,
        -0.014150862582027912,
        0.003927487414330244,
        0.011494213715195656,
        0.05076783522963524,
        0.08179009705781937,
        0.07243570685386658,
        -0.07087656110525131,
        -0.04540740326046944,
        0.13980665802955627,
        -0.014969655312597752,
        0.0796985849738121,
        0.01730162650346756,
        0.04669094458222389,
        -0.06023921072483063,
        -0.04958925396203995,
        -0.011952069588005543,
        0.00018625591474119574,
        -0.08540569245815277,
        -0.021050455048680305,
        -0.11693080514669418,
        0.12376860529184341,
        0.06093063950538635,
        0.06824274361133575,
        -0.06447182595729828,
        0.044545650482177734,
        -0.03356892615556717,
        -0.07266594469547272,
        0.01807074062526226,
        -0.04253469035029411,
        -0.02946462854743004,
        0.08498505502939224,
        0.05627270042896271,
        0.00915087852627039,
        0.058720242232084274,
        -0.019697727635502815,
        0.02296764962375164,
        0.10302148759365082,
        -0.06676708161830902,
        -0.010672742500901222,
        0.02897690050303936,
        0.006420440971851349,
        -0.000818697561044246,
        0.038435112684965134,
        3.524077329809508e-33,
        0.04096541926264763,
        0.07003145664930344,
        -0.06583728641271591,
        -0.004845382645726204,
        0.10129678249359131,
        0.0405564121901989,
        0.03951102867722511,
        0.05480991676449776,
        -0.09048540145158768,
        0.004079978913068771,
        -0.07403364032506943,
        -0.030368834733963013,
        0.031013889238238335,
        -0.01880684308707714,
        0.05863403156399727,
        0.029963361099362373,
        -0.01489008404314518,
        0.10646317899227142,
        0.036841847002506256,
        -0.04538749158382416,
        -0.0053924438543617725,
        -0.06457246840000153,
        0.09937431663274765,
        0.013112524524331093,
        0.08795000612735748,
        -0.09717684239149094,
        -0.05651644989848137,
        0.015526712872087955,
        0.14829912781715393,
        -0.007286301348358393,
        -0.045395415276288986,
        7.262473809532821e-05,
        -0.04830951243638992,
        -0.06068916246294975,
        -0.002212220337241888,
        -0.006711414083838463,
        -0.0033168033696711063,
        -0.05985941365361214,
        -0.013351956382393837,
        -0.04261202737689018,
        -0.025822844356298447,
        -0.04824765771627426,
        -0.019925560802221298,
        -0.09203235805034637,
        0.0017137841787189245,
        -0.0550692081451416,
        -0.04442170262336731,
        0.006833979394286871,
        0.019995883107185364,
        0.029309464618563652,
        -0.05147651210427284,
        0.025166630744934082,
        -0.03885408490896225,
        -0.020160557702183723,
        -0.12360620498657227,
        0.020521553233265877,
        0.06612468510866165,
        -0.00898558646440506,
        0.05227263271808624,
        0.03407478332519531,
        0.042193543165922165,
        -0.0036633177660405636,
        0.10783489793539047,
        -0.03232695162296295,
        -0.0005339215858839452,
        -0.14917060732841492,
        0.05221113562583923,
        0.05656152591109276,
        -0.05254541337490082,
        0.015708131715655327,
        -0.01891857571899891,
        -0.06968028098344803,
        -0.017857111990451813,
        -0.06176609545946121,
        -0.014538242481648922,
        0.0008106222376227379,
        -0.01219947636127472,
        0.011019180528819561,
        -0.00030013854848220944,
        0.046564772725105286,
        0.030504966154694557,
        0.00510778184980154,
        0.020466910675168037,
        -0.010142839513719082,
        0.0011500362306833267,
        -0.031706780195236206,
        -0.10364577919244766,
        -0.005308879539370537,
        -0.013835971243679523,
        0.06083846464753151,
        -0.041671060025691986,
        -0.06345149874687195,
        0.006772714201360941,
        0.03593623265624046,
        -0.07711643725633621,
        -5.5896031058286444e-33,
        -0.02128460258245468,
        -0.0009708435973152518,
        -0.005363846197724342,
        0.035974789410829544,
        -0.03110799565911293,
        0.046919096261262894,
        -0.03630232810974121,
        0.009519730694591999,
        -0.0529206246137619,
        -0.010524328798055649,
        -0.027792850509285927,
        0.026223139837384224,
        0.08690711110830307,
        -0.04687583073973656,
        0.049668338149785995,
        0.04030361399054527,
        0.024534419178962708,
        0.0380646176636219,
        -0.040657930076122284,
        -0.049537841230630875,
        -0.043310750275850296,
        -0.014890540391206741,
        -0.06619315594434738,
        -0.016617732122540474,
        0.0034268556628376245,
        0.013284754008054733,
        0.009957707487046719,
        0.0643119066953659,
        0.008894483558833599,
        -0.005489704664796591,
        0.06659957766532898,
        0.08166009187698364,
        -0.07729189842939377,
        -0.029897458851337433,
        0.0554903969168663,
        -0.007752373348921537,
        0.07642609626054764,
        -0.004829020239412785,
        -0.05293939262628555,
        -0.040101200342178345,
        0.11242001503705978,
        -0.012408976443111897,
        -0.037131890654563904,
        -0.04921223223209381,
        -0.014245624653995037,
        -0.0026417470071464777,
        -0.019546817988157272,
        0.036874134093523026,
        -0.020336242392659187,
        0.0843898206949234,
        0.060873743146657944,
        -0.06392178684473038,
        0.0644889697432518,
        -0.03746870532631874,
        -0.108218252658844,
        0.03451281413435936,
        0.019767340272665024,
        0.03939850628376007,
        -0.005751556251198053,
        -0.04881574213504791,
        -0.023939114063978195,
        -0.08251757174730301,
        -0.013644996099174023,
        0.018168572336435318,
        -0.05561428889632225,
        -0.009636114351451397,
        0.021026059985160828,
        0.08422756940126419,
        -0.022745884954929352,
        -0.06634633988142014,
        0.04401792585849762,
        0.03263593092560768,
        -0.00814746506512165,
        0.02410062961280346,
        -0.017692308872938156,
        0.026888806372880936,
        0.0021905924659222364,
        -0.049639515578746796,
        -0.07506289333105087,
        -0.000739687355235219,
        0.08846393972635269,
        -0.0473843589425087,
        -0.03231215849518776,
        -0.015144106931984425,
        -0.014344261959195137,
        0.024829627946019173,
        0.04112076386809349,
        0.05823776498436928,
        0.006762621458619833,
        -0.01545759942382574,
        -0.07687120139598846,
        -0.0070012640208005905,
        -0.006310578435659409,
        0.0631604790687561,
        0.12614981830120087,
        -5.7695149990877326e-08,
        0.04395214840769768,
        0.06463112682104111,
        0.03915143013000488,
        0.01806001551449299,
        -0.03229299560189247,
        0.04906025528907776,
        -0.03818558156490326,
        -0.060862429440021515,
        -0.057170525193214417,
        -0.0331408865749836,
        0.035364679992198944,
        -0.10235101729631424,
        -0.016388457268476486,
        -0.017020829021930695,
        -0.040824390947818756,
        0.05703957751393318,
        -0.024587931111454964,
        0.022950587794184685,
        0.00982962641865015,
        -0.006200747098773718,
        0.0847247913479805,
        -0.0212380513548851,
        0.05996822193264961,
        0.07127215713262558,
        -0.06698672473430634,
        0.010458366945385933,
        0.06711973249912262,
        0.08411655575037003,
        -0.03907042741775513,
        -0.0019158537033945322,
        -0.011631183326244354,
        -0.041638996452093124,
        -0.04678424447774887,
        -0.02064633183181286,
        -0.049394723027944565,
        0.027837766334414482,
        -0.06327232718467712,
        -0.07458692044019699,
        0.014057387597858906,
        0.03572637587785721,
        -0.00866586621850729,
        -0.0034455563873052597,
        -0.0695711076259613,
        -0.03029104508459568,
        -0.04261544346809387,
        0.0020962744019925594,
        -0.05581797659397125,
        -0.0591992624104023,
        -0.005032962188124657,
        0.08284558355808258,
        0.0005763602093793452,
        0.03225898742675781,
        0.01621023565530777,
        0.1598668396472931,
        0.04787863790988922,
        0.06944736838340759,
        0.017652828246355057,
        -0.05915858596563339,
        0.05308932065963745,
        0.12708134949207306,
        0.03906716778874397,
        0.030529065057635307,
        -0.027795683592557907,
        -0.004772101994603872
    ]
}