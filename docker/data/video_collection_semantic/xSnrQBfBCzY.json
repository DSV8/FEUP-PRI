{
    "id": "xSnrQBfBCzY",
    "title": "Digital audio needed videotape to be possible - and the early days were wild!",
    "channel": "Technology Connections",
    "channel_id": "UCy0tKL1T7wFoYcxCe0xjN6Q",
    "subscriber_count": 2460000,
    "upload_date": "2023-06-09T16:25:11Z",
    "video_url": "https://www.youtube.com/watch?v=xSnrQBfBCzY",
    "category": "Science & Technology",
    "tags": [],
    "views": 925329,
    "likes": 33427,
    "comments_count": 3167,
    "description": "The history here is wild!  Links 'n' stuff: Oh, here's the mentioned link before I forget:   Techmoan's video:   LGR's video:   Technology Connextras (my second channel where stuff goes sometimes)   Technology Connections on Mastodon:   The TC Subreddit   This channel is supported through viewer contributions on Patreon. Thanks to the generous support of people like you, Technology Connections has remained independent and possible. If you'd like to join the amazing people who've pledged their support, check out the link below. Thank you for your consideration!",
    "description_links": [
        "https://www.kenrockwell.com/audio/sony/pcm-f1.htm",
        "https://www.youtube.com/watch?v=WVDCxTtn4OQ",
        "https://www.youtube.com/watch?v=TUS0Zv2APjU",
        "https://www.youtube.com/@TechnologyConnextras",
        "https://mas.to/@TechConnectify",
        "https://www.reddit.com/r/technologyconnections",
        "https://www.patreon.com/technologyconnections"
    ],
    "transcript": "Today, I want to show you a pretty weird device. This hi-fi component lookin thing from Sony is a DIGITAL AUDIO PROCESSOR and its got a rather strange assortment of connections on the back. We have audio in and out, pretty normal, but also video in and out? Annnnd monitor out? Copy out? Well, I suppose to figure out what this does we should hook it up to an audio source and a TV. Why, thats as easy as a jumpcut! With my microphone wired to its audio input and a TV hooked up to its video output, we find that this supposed digital audio processor is doing something quite odd. Before we get a closer look, be aware that things are going to get somewhat flickery and that will continue throughout much of this video. Its more like rapidly changing patterns than it is a flickering image, but if that sounds bothersome to you you may want to skip this one. At first glance it appears as though were looking at the snow of a TV tuned to a dead channel, but theres definitely some structure to whats on the screen, and its responding to my voice. Lets take a look at a raw video feed. Good luck, YouTube compression. As perhaps you can see, similar patterns appear depending on what exactly my voice is doing. If I exteeeend vooowelll sounds weee seeee distreeeeet blocky shapes come and go. And if the spicy snap of sibilance saturates the soundscape, we see some spans of snowier snow. How bout, instead of my voice, we use a signal generator for a sine-wave sweep? [an ascending sine wave sweep] Interesting. Lets do that again but with sawtooth waves. [an ascending sawtooth-wave seep] Similar, but spiky! Now, if a device which turns sound into this weird imagery seems pretty pointless, thats because these visuals are not the point of it at all. Well, ok technically yes they are but you wouldnt ordinarily be looking at them. Devices like this are more generically known as PCM adapters, and the mess youre looking at is actually digital audio data. This is what it would look like if you took the analog sound signal from my microphone, digitized it using 16 bit pulse-code modulation, then encoded the resulting datasteam as high-low pulses tucked neatly into the scanlines of an NTSC television signal. And the reason I can say that with confidence is because thats precisely whats goin on here. Once again I have friend of the channel James Colvard to thank for lending this fascinating thing to me. This device represents what was for many years the easiest solution to the biggest problem facing digital sound reproduction. On the surface, digital sound should be easy as the concepts behind it are actually pretty straightforward. At the risk of oversimplifying, you can make digital sound happen with only two chips: the first one, the analog-to-digital converter, takes a single input from a microphone or whatever other analog source you like and, through a bunch of comparators and logic gates and junk it will spit out a binary integer across several outputs. To give an example, if we give this theoretical 8-bit ADC an input signal of 700 millivolts, that results in these output pins going high - a result of 01101011. And something that I want to stress here is that while we could convert this result into base-10 numbers, theres no need to do that - were just going to send this sequence of bits to a second chip. That chip, the digital-to-analog converter (or DAC), has a digital input side and an analog output side. To reproduce the original signal intensity, all we need to do is put the right bits into the right slots. So, with our theoretical 8-bit system, applying voltage to the pins in the same pattern the ADC just gave us (low high high low high low high high) will result in thIS chip producing an output signal of 700 millivolts. All we need to do is ensure that these two chips speak the same language - as in, the same sequences of bits produced by the ADC are mapped to the same signal outputs in a matching DAC. And thats done at the hardware design level. This particular flavor of digital sound is called pulse-code modulation or PCM. The analog-to-digital converter takes an instantaneous snapshot of the analog inputs signal strength and spits out a code. Then the digital-to-analog converter takes that code and spits out an analog output (which you might call a pulse) that matches the original snapshot. Its actually pretty easy, but the problem is that to reproduce sound, you need to take a lot of snapshots of the signal. We usually call those snapshots samples, and to faithfully reproduce sound you need to take a few dozen thousand samples every second. No big deal. Technically, that truly is not that big of a deal. We can take samples from the ADC very frequently and its not a big challenge to make a DAC which can ingest those samples just as fast. We had the tech to do that readily available in the 1960s. Trouble is, while it might be easy to make data from sound and sound from data, doing that in real-time is just building an overly-complicated radio. Digital sound wouldn't have much of a point unless we can store the pulse-code data somewhere to be read back later. And that step aint easy. An analog-to-digital converter spitting out pulse code data may not be doing anything all that complex, but it produces an utterly unmanageable quantity of data. These days, of course, its a breeze, but when digital sound was getting off the ground this was a heckuva problem. The very first PCM audio recorder was built by NHK in Japan back in 1967. This single-channel recorder had a sampling rate of 30 kilohertz and took 12 bit samples. Thats a bit shy of modern standards, but thanks to the Nyquist-Shannon Sampling Theorem, we know that it could reproduce sounds up to 15 kHz, which is about where FM radio tops out. While there most definitely were computers that handled and stored digital data back in 1967, nothing remotely suitable for digital audio was available on the market. I mean, punch cards? Forget that. 9-track tape? That might work, but NHKs device would completely fill up a 2400 foot tape in less than 17 minutes. And while hard drives did exist, even if you wanted to shell out the however many tens of thousands of dollars it took to buy one of IBMs room-sized monsters, NHKs singl-channel PCM recorder would fill up the entire nine-disk array in less than two hours. That just aint gonna work! However, NHK didnt need the complexity of a file system or the random-access capabilities of true data storage - they just needed something that could write down a whole bunch of binary really really fast, and then read it back just as quickly. As it turned out, although it would need a little modification, an existing technology would fit the bill just fine. And it was one that NHK, being Japans national broadcaster, had really easy access to: a simple videotape recorder. See, you need tons of signal bandwidth for storing video signals. Analog video is made up of very rapidly-drawn lines. With 525 lines per video frame and 30 frames being displayed every second, an ordinary TV draws 15,750 lines every second. Videotape recorders, through the use of spinning heads that fly across long slices of magnetic tape (as well as a whole bunch of clever circuitry) were able to record those signals and reproduce television images with decent fidelity. But theres no rule saying what those images have to be! If you slap some high-low pulses across the video scanlines, that might look like a bunch of white and black spots to your eyes, but to the right circuit that looks like bits. So, NHK rigged up their PCM encoder to spit out the sample data produced by its ADC as a sequence of high-low pulses, then carefully timed them to match the video characteristics of a black and white television signal. They hooked that contraption up to an ordinary videotape recorder, and suddenly they had a practical way to store digital audio data. To retrieve it, the videotape was rewound to the start of the program and the recorder was set to play mode. Now, the PCM recorder became a PCM decoder, recovering the bitstream coming from the videotape, sending it to a DAC, and then finally the digital sound was heard again. And thats precisely what this thing from Sony... is. This is the exact same idea as NHKs original PCM recorder concept, though updated with better capabilities on account of being from 1983. This takes a stereo analog audio input, digitizes it using 14 or 16 bit pulse-code modulation at a sampling rate of 44.056 kilohertz (which might sound kinda weird but hold your horses well get to that bit), and then spits out the resulting data across the scan lines of a video signal. Every one of those lines you see contains the data for six audio samples, three for each channel, as well as a bit of formatting. Hook this things video output up to a VCR and, as far as the VCR knows, youre just trying to record a weird TV program. Though it may question your taste, itll record it just fine. And you now have a videocassette which contains digital audio data. That on its own isnt super useful, of course, but this thing works in reverse, too! Rewind the tape you just created, hit play on the VCR, and now its looking at its video input hoping to see some high-low pulses it can understand. If it finds them it starts decoding them and sends the raw data through a buffer, and then to its digital-to-analog converter which reproduces the stored sound through the stereo audio output. [a brief bit of garbled sound, then music of startingly good fidelity] And you have just experienced an effective method of creating and reproducing digital audio recordings using an ordinary videocassette recorder! This may seem convoluted, in no small part because it absolutely is, but this is how digital audio worked for a very long time. Remember, we had the capability to record digital sound back in 1967, but the compact disc - the first truly digital audio format (well, other than piano music) - wouldnt hit the market until 1982. And CDs had to resort to friggin lasers and precision optics reading microscopic bumps on a shiny silver disc! Until that tech was mature, with very few exceptions high-fidelity digital sound reproduction relied on videotape recorders to be possible. It was the only reasonable way to handle so much data so quickly. But this wasnt as easy as it might seem. Digital audio and videotape are not a perfect match because the video signal isnt actually continuous. Every field of video starts with a blanking interval which we cant store any data in. And in fact, every video line also starts with a short blanking interval. But we cant have gaps in the data - audio sample data needs to be perfectly continuous. So, to deal with this, the adapter uses a buffer. When recording onto a tape, the continuous samples coming from the ADC are briefly held in memory. The samples will pile up during the blanking intervals, but once were past them and able to write data again, theyre quickly spat out in the six-sample chunks on each line. By the end of the video field, were caught up. During playback, of course, the opposite happens - - as the samples come in, the samples get stored in a buffer so that the DAC can decode them sequentially without any gaps. Then theres the issue of errors. No videotape recording is flawless - bad spots on the tape will cause signal dropouts, and while theyre usually not much of a big deal when watching a movie, the bits were dealing with here are teeny tiny. Even just the littlest blip could flip a bit, so well need some way to deal with that. And it turns out we have one! Look closely at the structure on-screen: we know there are six samples across every line, and we can see six clear sections spanning about the first 3/4s of the screen. But whats all this then? Could it be some sort of checksum for error correction? Well, basically yes. I was finding frustratingly little information on the technical specs of the data recording scheme here, but I did find this 1977 patent which talks about cyclic redundancy check words getting added to the data. So thats probably what that is. Some sorta math. And it works quite well! This modern VCR has various on-screen display elements, and despite plopping a big ol PLAY symbol in the top-right corner and obscuring quite a bit of the bits, nothing sounds amiss when its up there. [music where nothing sounds amiss] Stray video dropouts can eat up entire lines but I dont even notice a blip in the sound when that happens. Actually, several lines can get corrupted before you hear an issue. [music which is mostly fine but stutters or drops out briefly with big blips on the screen] Hi, I have an editors note! Though I dont have concrete specifics, I did find some promotional copy for an earlier PCM adapter of Sonys and was able to confirm that the data is interleaved between television scan lines. I dont know exactly how, but shuffling the data around and not recording it sequentially, along with the help of those cyclic redundancy check codes getting tossed in with the data, allows it to recover from pretty gnarly video issues. And, like the compact disc, it has a system to interpolate missing data to mask when large sections of it are not recoverable. Its honestly quite impressive. As it happens, PCM adapters like this, along with the professional-grade U-matic videotape format, had a big part in the development of the compact disc. The objectively pretty weird 44.1 kilohertz sampling rate of compact disc digital audio happened because different parts of the world used different video standards. When developing their professional PCM adapters, Sony wanted to use a sample rate that would work regardless of where you were, and 44.1 kHz (that was three samples per video line across 14,700 visible lines per second) represented the best possible fit between NTSC and PAL equipment. Trying to squeeze any more samples in would risk part of the data ending up in the vertical blanking interval. So, 44.1 kilohertz became the de-facto standard for PCM adapters, and was then incorporated as an official standard with the compact disc. But wait a second. Earlier me said that this thing runs at 44.056 kilohertz. Thats 0.1% less than 44.1. Explain the discrepancy! Well, see, Sonys professional PCM equipment of the NTSC flavor used videotape recorders that operated in black and white mode. But this is a consumer PCM adapter meant to work with consumer VCRs, and those VCRs record color TV. And, for reasons we dont need to get into here, color TV runs at 29.97 frames per second rather than 30. This thing still records six samples on every line of video, but those lines come in ever so slightly less often and thus the sampling rate is a teeny bit slower. And now, heres where I go huh? See, I have a pretty fundamental question regarding this unit. Why does it exist I knew encoding digital sound onto videotape was a thing we did, and I knew the story of U-matic tapes being important to CDs. But I always imagined PCM adapters as a decidedly professional piece of equipment. Which this is clearly not. I mean, its not beige, it has normal RCA jacks, and its designed to work with consumer VCRs. Of course Sony would prefer that you hook this up to a Betamax deck, but it works just fine with VHS machines, too, as youve seen. And its not like this was a one-off product Sony had an entire line of consumer PCM adapters, and this was by no means their first model. In fact, I think it might be the last. But you know whats perhaps the strangest part of all this? The very first PCM adapter Sony ever made was a consumer product! Sonys famous PCM-1600, the one that worked with U-matic VCRs, introduced 16 bit recording, and cemented the standards for the upcoming compact disc, was released in 1978. But Sonys PCM-1 was sold in 1977 as an accessory to Betamax home VCRs. It cost a cool $2000, and it did pretty much exactly what this thing does - just six years earlier. And when I learned this, a memory was unlocked. Youve seen this ancient Betamax machine in several prior videos. Its from 1979, so the PCM-1 had been available for purchase for a while. And under this little cover in the back is a switch marked PCM Thats there to disable some of this machines image-enhancing features like dropout compensation. Those are great for video but can apparently mess up the data encoded in video lines, so if you happen to have bought one of Sonys PCM adapters, youll want to flip this switch when using it. Of course, I had to try this out. I hooked the adapter up to this old tank of a thing, made a test recording, played it back and was frankly blown away at what I was witnessing. [click of buttons, head drum spins up] [sudden guitar music] This is a very early home videocassette recorder. When this thing was new, almost nobody had heard a real digital sound recording, and the compact disc was still three years away. Yet this machine was designed from the beginning to support digital sound recording! Its wild, and honestly this is officially what impresses me most about Betamax. [a nice jazz piano composition] Oh, by the way, wanna see what happens when you hit pause? Fair warning, its unpleasant. [Music] [brrrp - brbrbrbrbrbrbbrbrbrbrbbrbrbrbrbr] This shows that although the data does have a lot of formatting and error-correction, its not as if every video frame needs to be perfect. The adapter will try its best to decode whatever it sees, and in this case its decoding the same frame of video over and over again. So you hear the same snippet of audio over and over again. [rapid clicking and popping] And when you try and fast-forward through the tape, it decodes snippets here and there which sort-of help you figure out where you are in the recording. But, how well that works will undoubtedly depend on the VCR. [a lot of clicking with the occasional bout of intelligible music] Another fun thing is what happened here: I didnt realize that I was recording in Beta-III speed when I first started this test recording, and although I quickly switched back to Beta-II, because of where the tracking pulses are on the tape compared to the video signal, for a brief while the machines running too slowly. But the adapter still valiantly tries to do its job - you can clearly hear an old Warner Brothers home video intro happening here, only its very not-right. That is, until the VCR finally switches to the correct playback speed. [clicks, then very stuttery and slow music] But as much as Im genuinely impressed at the feat of home PCM recording in 1977, I cant stop myself from asking - why on Earth would anyone buy one of these? I mean, in my heart of hearts I know why: to impress your audiophile friends, of course. But without your own full-on recording studio for capturing real live music, there are exactly two things you might do with this: record programs from the radio or make copies of a record album of some kind. For making radio recordings, this thing is overkill to the extreme. Even if you had the best FM tuner in the business with an antenna that can pick up tunes from the moon, FM radio just aint that high-fidelity and a decent cassette deck would capture it just fine. And if all you want is a copy of somebody elses record, there are much easier ways to go about that. Like, for instance, the aforementioned cassette deck. Or if thats not enough fidelity for you, get an open-reel machine. Yes, a PCM adapter would let you make an essentially identical copy of whatever it is you record with it - and that is mighty impressive. But using one is extremely clunky and tedious. It requires having a very-expensive VCR, hooking that into your HiFi (so I hope you put your TV over there, too), and wrangling two machines at the same time. Thats a lot of effort to go through for a simple sound recording, though in fairness you dont really interact with the adapter all that much. Now, if you could perhaps bring your exotic PCM videocassette recordings to a friend who had also spent as much as a small car on a videocassette recorder and PCM adapter, then maybe theres some more value here. But that leads us to a minor mystery: was this ever, like, a real format? Could I expect a tape holding data the way this fella writes it to be readable by a different PCM adapter? Signs point to maybe. I found a forum post where jamesp, a serious tapehead, claims that 16 bit tapes are compatible between a bunch of different adapter models, so at least Sony had some sort of standard format. But what about 14 bit tapes? If you know a thing or none about digital sound, it might seem a little strange that this device allows you to choose whether you want to record with 14 or 16 bit sample depth. An option for slightly worse recordings seems pretty silly in isolation. But its less silly when you consider that Sonys first PCM-1 was a 14-bit model. And, supposedly, that model followed an encoding standard that the Electronic Industries Association of Japan had come up with. Theres definitely evidence that that was a thing, and heres a JVC product that utilized that standard. For some more evidence, not that long ago Techmoan covered the Technics SV-P100, a digital recording device from 1981. That thing was essentially just a 14-bit PCM adapter with a nicely-integrated VHS VCR, and the video it pumps out through its \"digital\" output sure looks an awful lot like the video this thing is generating. I think theres a pretty good chance that a 14-bit recording made with this Sony PCM adapter and a VHS VCR would work in that machine, and vice-versa. Im hoping to arrange a test so stay tuned. Merely offering the option to make 14 bit recordings implies to me anyway that they must be backward-compatible with some array of older equipment. Theres no way to get the raw data out of this model - the copy output just produces another video signal to feed a second VCR. So I cant think of any other reason it would offer a slightly worse recording mode. But curiously, the pattern on the screen doesnt really change much when you move between 14 and 16 bit encoding. I figured it would - less bits per sample would mean less bits per line so they should appear to get bigger. But they dont, its just the portion at the end of each line gets rearranged a bit. My guess is that Sony altered the error correction portion to fit in the extra bits, but thats just a guess. If they did, perhaps the 14-bit mode is less prone to errors but I gotta say from the tests Ive done the 16-bit mode is mighty resilient. Anyway, even assuming there was a standard recording method and you could expect PCM recordings made on one rich audiophiles VCR to work at another rich audiophiles house, there still seems to be very little reason to own one of these beyond bragging rights. At its core, this is just a really expensive, really tedious, and really exotic... tape deck designed to work with your average hi-fi system. If you actually had your own recording studio and could truly take advantage of this things capabilities, youd probably be quite annoyed that it doesnt have XLR inputs. This is just far too basic to work as a professional piece of recording equipment, and without music getting released on PCM videotape, youre only ever gonna be listening to your own recordings. So why go to this extreme? There is, however, one concrete advantage to this thing: recording time. So long as your VCR is halfway decent, you could use its slower recording speeds with the PCM adapter. That meant you could get a 4 and a half hour recording out of *this thing* and an L-750 Beta cassette, and potentially an 8 hour recording with a VHS machine. That bests pretty much every sound recording format that used physical media, especially when you consider that the audio quality would be essentially perfect. So you could fit a whole lot of borrowed music on there and make quite the mixtape. But unless you had that specific use in mind, this still reads to me as an item of very questionable usefulness. Despite the peculiarity of a home PCM-adapters, professional PCM-adapters would stick around for a while. There still wasnt a great way to store several hundred megabytes of data in 1982. While we had the compact disc, recordable compact discs wouldnt appear until the end of the 1980s. Commercially-produced CDs were pressed, and after all something had to store data to bring to the CD-making machines. That something was largely U-matic tapes and the PCM adapters until Sony finally released an actually-digital tape format in 1987 called, fittingly, digital audio tape. As a curious side-note, Sony intended for that format to supplant the venerable compact cassette in the consumer space, but it was too expensive to really get off the ground. Plus, it freaked out the recording industry because suddenly people could have perfect copies of their buddys CDs and there was a whole kerfuffle about that. Its not surprising that they never bothered getting hot and bothered by PCM adapters because these were just too clunky to use and would never see mass-market appeal. Finally, since you could get 8 hours of CD-quality audio running on a VHS tape with this thing, you might be wondering how much actual data that is. Well, the simple way to calculate that is to take the 480 minutes in 8 hours, divide that by the 80 minutes a standard CD-R can hold, and multiply that by the 700 megabytes each of those CD-Rs can hold. That would be 4.2 gigabytes. However, CD-digital audio actually conveys more data than a CD-ROM does. To be absolutely precise, this thing records two 16 bit samples 44,056 times per second. Thats 1,409,792 bits per second. Multiply by seconds per minute, minutes per hour, hours per tape, then divide by 8 to find the total number of bytes. After the amusement of realizing you just multiplied by 8 and then divided by 8, youll discover that a T-160 VHS tape holds a bit over 5 gigabytes of data when storing PCM audio at the SLP speed. And to finish up the video, one thing thats always been pretty amusing to me is that, in hindsight, it seems it took a long time for people to realize that digital audio data was, in fact, data. Like, it took us years to turn the compact disc into the CD-ROM - some of that was down to 8-bit home computers having absolutely no idea what to do with 650 megabytes, but when you consider that Sony sold a device back in 1977 that could reliably store literal gigabytes of data on Beta tapes of all things well youd think people would have made use of that for more than just audio. Of course, eventually we did. LGR covered a device from 1996 that was designed to make actual data backups onto VHS tapes. That thing was effectively a PCM adapter, but one that interfaced with data backup software running on your PC. To attain the reliability needed for data backups, it recorded less densely than this PCM adapter did, and could only backup about 3 gigabytes of data in the best of conditions. But honestly, its pretty wild to me that it took until the mid-nineties for anyone to commercialize that concept. I mean, did everyone just forget about PCM adapters? Or did people never realize that the digital audio data they barf out is still data? Yeah, using a VHS-based computer backup system was incredibly clunky - even worse than a PCM adapter as now you have to deal with a computer and software interface. But we had been recording gigabytes of data onto videotape from the 70s. How did that not bleed into home computing sooner? I think the likely answer is, of course, that it took many years for us to need such vast quantities of data for anything other than audio reproduction. Until the multimedia PC was a thing, you were mainly dealing with floppy disks, and one hundred-megabyte hard drives still felt pretty cutting-edge in 1990. Needing to burn through 1.4 megabits of data every second remained an audio-only task pretty much right up until home computers started incorporating CD-ROM drives. And at that point we were still struggling to figure out how on Earth to make use of their vast 650 million bytes! But now, I think Ive finally run out of things to talk about. Though I still think having a PCM adapter in your home was a pretty silly proposition for the vast majority of people, they were without question very cool - and Im happy they did make it to the consumer market because without audiophiles with too much money to throw around, I doubt Id have been able to show you one. Although, as it turns out, apparently digital sound was quite the contentious topic among audiophiles back in the early eighties. Because of course it was. Oh, audiophiles, never stop being you 16-bit smooth jazz Keep recording, okay? I want you to keep recording. DONT STOP RECORDING. Discreeeeeet bloooooocky shaaaapes come and goooo. And if the spicy snap of s yeah, heh, I forgot how slowly Im gonna read that! It will spit out a binary [burps] [laughs] So, 44.1 kilohertz became the defacto standard for PCM adapters and wwww that ah, fark! And it did pretty much exactly what this thing does, just five years earlier. ... sanity check processing ... Six - its six years earlier! I did Of course, I had [bonk] to well, that didnt work. OK, two things: First. I forgot to fade the music back up here. A tragic oversight. Everybody loves this song and to dooty doots here. Second, actually I don't have a second thing. Just wanted to say something about that editing mistake. 'kay bye",
    "transcript_keywords": [
        "PCM adapter",
        "PCM",
        "digital audio data",
        "data",
        "DIGITAL AUDIO",
        "digital sound",
        "DIGITAL",
        "PCM adapter Sony",
        "Sonys PCM adapters",
        "Sony PCM adapter",
        "recording",
        "AUDIO",
        "video",
        "thing",
        "sound",
        "digital sound recording",
        "audio data",
        "adapter",
        "Sony",
        "PCM audio"
    ],
    "transcript_entity_values": [
        "tens of thousands of dollars",
        "1.4 megabits",
        "1990",
        "two",
        "a second",
        "1983",
        "U-matic",
        "six",
        "one hundred-megabyte",
        "1996",
        "14",
        "PCM-1600",
        "the 480 minutes in 8 hours",
        "2400 foot",
        "1979",
        "one",
        "the 700 megabytes",
        "many years",
        "Earth",
        "4 and a",
        "Japans",
        "a few dozen thousand",
        "4.2 gigabytes",
        "XLR",
        "29.97",
        "nine",
        "650 million",
        "three years",
        "the mid-nineties",
        "several hundred megabytes",
        "seconds per minute, minutes per hour",
        "Sonys",
        "less than 17 minutes",
        "44.1 kilohertz",
        "0.1%",
        "650 megabytes",
        "Second",
        "Sony",
        "years",
        "base-10",
        "8",
        "1967",
        "30 kilohertz",
        "ADC",
        "RCA",
        "Japan",
        "Digital",
        "VHS",
        "first",
        "16",
        "44.1 kHz",
        "three",
        "5 gigabytes",
        "six years earlier",
        "T-160",
        "Warner Brothers",
        "NHK",
        "JVC",
        "James Colvard",
        "9",
        "about 14",
        "the Electronic Industries Association of Japan",
        "44,056",
        "U-matic VCRs",
        "525",
        "Discreeeeeet",
        "1987",
        "3/4s",
        "PCM",
        "DIGITAL AUDIO PROCESSOR",
        "only two",
        "15 kHz",
        "about 3 gigabytes",
        "DAC",
        "Today",
        "the early eighties",
        "NTSC",
        "Nyquist",
        "1982",
        "the 80 minutes",
        "01101011",
        "1978",
        "14,700",
        "30",
        "8 hour",
        "1,409,792",
        "1977",
        "8 hours",
        "less than two hours",
        "Betamax",
        "These days",
        "1981",
        "2000",
        "the 70s",
        "the end of the 1980s",
        "the 1960s",
        "12",
        "700 millivolts",
        "just five years earlier",
        "Techmoan",
        "44.056 kilohertz",
        "LGR",
        "First",
        "second",
        "15,750",
        "SLP"
    ],
    "transcript_entity_types": [
        "CARDINAL",
        "QUANTITY",
        "DATE",
        "CARDINAL",
        "TIME",
        "DATE",
        "ORG",
        "CARDINAL",
        "QUANTITY",
        "DATE",
        "CARDINAL",
        "ORG",
        "TIME",
        "QUANTITY",
        "DATE",
        "CARDINAL",
        "QUANTITY",
        "DATE",
        "LOC",
        "DATE",
        "NORP",
        "CARDINAL",
        "QUANTITY",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "DATE",
        "QUANTITY",
        "TIME",
        "ORG",
        "TIME",
        "QUANTITY",
        "PERCENT",
        "QUANTITY",
        "ORDINAL",
        "ORG",
        "DATE",
        "DATE",
        "CARDINAL",
        "DATE",
        "QUANTITY",
        "ORG",
        "ORG",
        "GPE",
        "ORG",
        "ORG",
        "ORDINAL",
        "CARDINAL",
        "QUANTITY",
        "CARDINAL",
        "QUANTITY",
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "PERSON",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "PERSON",
        "DATE",
        "CARDINAL",
        "ORG",
        "ORG",
        "CARDINAL",
        "QUANTITY",
        "QUANTITY",
        "ORG",
        "DATE",
        "DATE",
        "ORG",
        "ORG",
        "DATE",
        "TIME",
        "CARDINAL",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "TIME",
        "CARDINAL",
        "DATE",
        "TIME",
        "TIME",
        "ORG",
        "DATE",
        "DATE",
        "MONEY",
        "DATE",
        "DATE",
        "DATE",
        "CARDINAL",
        "QUANTITY",
        "DATE",
        "PERSON",
        "QUANTITY",
        "ORG",
        "ORDINAL",
        "ORDINAL",
        "CARDINAL",
        "ORG"
    ],
    "vector": [
        -0.06017474830150604,
        -0.10587342083454132,
        -0.011957643553614616,
        -0.11888394504785538,
        0.005584595259279013,
        -0.0010123481042683125,
        0.03373398259282112,
        -0.0009984222706407309,
        0.013240710832178593,
        -0.012268234975636005,
        -0.006435941439121962,
        -0.033691104501485825,
        -0.08335015177726746,
        0.03490278869867325,
        -0.05711627006530762,
        -0.01667914353311062,
        0.029173634946346283,
        -0.02403230592608452,
        -0.025793712586164474,
        0.05872156471014023,
        0.07583155483007431,
        -0.080194391310215,
        0.004536948632448912,
        -0.01738656871020794,
        0.04978788271546364,
        0.007198046427220106,
        -0.018811708316206932,
        -0.013914571143686771,
        -0.012696284800767899,
        -0.03819691762328148,
        -0.023910829797387123,
        0.03694935888051987,
        0.011557270772755146,
        -0.018888255581259727,
        -0.07200120389461517,
        -0.1090068370103836,
        0.08666151762008667,
        -0.030961263924837112,
        -0.10516797751188278,
        -0.04725005850195885,
        0.03161567449569702,
        -0.06841089576482773,
        0.07112868875265121,
        -0.05540724843740463,
        -0.1006653681397438,
        -0.020814022049307823,
        -0.0577860027551651,
        -0.08699394017457962,
        -0.06028929352760315,
        0.003197353333234787,
        -0.12126343697309494,
        -0.0351567305624485,
        0.07111848890781403,
        0.060073330998420715,
        -0.09411434084177017,
        0.05881105363368988,
        0.03928561508655548,
        -0.028654664754867554,
        0.03286008909344673,
        0.004952944349497557,
        0.07918033748865128,
        -0.05377453193068504,
        0.021352797746658325,
        0.01144503429532051,
        -0.014937188476324081,
        -0.03296829015016556,
        0.051493607461452484,
        0.047712866216897964,
        0.05755338445305824,
        -0.04402867332100868,
        -0.12048621475696564,
        0.006694782990962267,
        -0.009294845163822174,
        0.037604790180921555,
        0.07117556780576706,
        0.012829320505261421,
        0.08976089954376221,
        -0.031127428635954857,
        -0.012272811494767666,
        -0.015023789368569851,
        0.10899321734905243,
        0.04000098630785942,
        -0.06957419961690903,
        -0.03466136008501053,
        0.014232687652111053,
        0.06907809525728226,
        -0.002410290762782097,
        -0.014008835889399052,
        -0.04164552316069603,
        -0.08482221513986588,
        -0.15796653926372528,
        0.0005693668499588966,
        0.00792385172098875,
        -0.026194028556346893,
        0.018205204978585243,
        -0.0603199303150177,
        -0.040493033826351166,
        -0.01875990629196167,
        0.03304355964064598,
        0.05919358506798744,
        0.05270763859152794,
        -0.02631906419992447,
        -0.014122380875051022,
        -0.033861711621284485,
        -0.060154423117637634,
        -0.07451719790697098,
        -0.043560534715652466,
        0.03054305911064148,
        0.0479133240878582,
        -0.020450040698051453,
        -0.052990756928920746,
        0.01982622593641281,
        -0.005107181612402201,
        -0.04407766833901405,
        0.03805055841803551,
        0.10064210742712021,
        -0.09083528816699982,
        -0.0018310098676010966,
        0.06643886119127274,
        -0.07229828089475632,
        -0.037798624485731125,
        -0.06345614045858383,
        -0.080841064453125,
        0.028545398265123367,
        0.09728686511516571,
        -0.025242529809474945,
        -0.007658442482352257,
        3.961123558051342e-33,
        0.04493165761232376,
        0.06758049875497818,
        -0.03408883512020111,
        0.02523937076330185,
        0.0019057724857702851,
        0.016414839774370193,
        -0.07399594783782959,
        0.03166425600647926,
        0.002691030502319336,
        0.018285566940903664,
        0.03100830316543579,
        -0.028725450858473778,
        -0.06506031006574631,
        0.04181484505534172,
        -0.010408514179289341,
        -0.0413682721555233,
        -0.058791425079107285,
        -0.016043296083807945,
        -0.02282932586967945,
        -0.013742172159254551,
        0.004414708353579044,
        0.03905247151851654,
        0.01858614571392536,
        0.03768226131796837,
        0.09762832522392273,
        0.026935338973999023,
        -0.012127306312322617,
        -0.017484493553638458,
        0.09241233766078949,
        0.02746851183474064,
        -0.02605089731514454,
        0.009504471905529499,
        0.03848325088620186,
        -0.055979903787374496,
        0.0601901113986969,
        -0.02669975347816944,
        -0.02614443190395832,
        -0.03777720406651497,
        -0.0009119750466197729,
        0.017932411283254623,
        0.03278292715549469,
        0.038722533732652664,
        -0.03805887699127197,
        -0.02869775891304016,
        -0.05549594759941101,
        -0.05071203410625458,
        0.052341606467962265,
        0.09211844205856323,
        -0.058037467300891876,
        0.016670824959874153,
        0.03177442401647568,
        0.022336382418870926,
        -0.02870987169444561,
        -0.05595779791474342,
        -0.030388232320547104,
        -0.03218431398272514,
        -0.003017551964148879,
        0.04809976741671562,
        0.08600926399230957,
        0.02938951924443245,
        0.030102863907814026,
        0.004749333951622248,
        0.02723444253206253,
        0.016307994723320007,
        -0.07244934886693954,
        0.03447294235229492,
        0.10527356714010239,
        0.03723601996898651,
        0.0229373499751091,
        -0.03182931989431381,
        -0.05716736242175102,
        0.0601644404232502,
        -0.03866881504654884,
        -0.07353967428207397,
        -0.015606237575411797,
        0.10364612936973572,
        -0.06442496925592422,
        -0.026352541521191597,
        0.016575170680880547,
        0.03342067450284958,
        0.02079746127128601,
        -0.00024908417253755033,
        0.015435533598065376,
        0.042718496173620224,
        -0.011873316951096058,
        0.016005149111151695,
        -0.005305031314492226,
        -0.12885868549346924,
        -0.025634504854679108,
        0.0075013767927885056,
        -0.02547224797308445,
        0.04118476063013077,
        -0.016130361706018448,
        -0.020803477615118027,
        0.04304603859782219,
        -4.588083020954009e-33,
        0.023767873644828796,
        0.07865607738494873,
        -0.04146357998251915,
        -0.02703056111931801,
        0.06260722875595093,
        -0.0008598160347901285,
        0.11853199452161789,
        0.026398319751024246,
        0.04604349657893181,
        -0.07076211273670197,
        0.056463573127985,
        -0.02696666680276394,
        -0.011094635352492332,
        -0.009391804225742817,
        -0.04612428694963455,
        -0.039281439036130905,
        0.008475612848997116,
        -0.06385643035173416,
        -0.02256406843662262,
        0.007978476583957672,
        0.08757991343736649,
        0.035341136157512665,
        0.04377957433462143,
        0.011778696440160275,
        -0.021697184070944786,
        0.03394223377108574,
        -0.032777056097984314,
        0.051261112093925476,
        0.04080801457166672,
        0.018827904015779495,
        0.011929428204894066,
        0.010055745020508766,
        -0.023475689813494682,
        -0.04488877207040787,
        0.021219966933131218,
        0.05578375980257988,
        0.14004270732402802,
        0.025545813143253326,
        -0.01634245552122593,
        -0.14004218578338623,
        0.01881907507777214,
        0.12066374719142914,
        0.02204352617263794,
        -0.044818609952926636,
        -0.011223952285945415,
        0.0020554568618535995,
        -0.08737104386091232,
        0.036546289920806885,
        -0.07309097796678543,
        0.032580893486738205,
        0.020746074616909027,
        0.01593451201915741,
        0.08185998350381851,
        -0.0778186246752739,
        -0.02108295075595379,
        0.011148928664624691,
        -0.0005795526667498052,
        0.040644701570272446,
        0.01059369370341301,
        0.07507762312889099,
        0.023707734420895576,
        -0.005342446267604828,
        -0.05882648006081581,
        -0.09381886571645737,
        0.021886726841330528,
        0.07346408814191818,
        0.06734690070152283,
        0.0213468037545681,
        -0.007330786902457476,
        0.03248608112335205,
        0.08203624188899994,
        0.04837046563625336,
        0.042292602360248566,
        -0.025860397145152092,
        0.0409589521586895,
        0.05133051797747612,
        -0.06541623920202255,
        -0.11529979109764099,
        -0.02070092409849167,
        0.02383618988096714,
        -0.09490610659122467,
        -0.037168778479099274,
        0.11433444917201996,
        0.015857858583331108,
        0.09832391887903214,
        0.0746251568198204,
        0.028861183673143387,
        0.027007101103663445,
        -0.002457323716953397,
        0.02004971168935299,
        -0.08672726154327393,
        0.037074945867061615,
        -0.020079702138900757,
        0.025736290961503983,
        0.08548560738563538,
        -5.918215251199399e-08,
        0.050924960523843765,
        -0.0014678280567750335,
        -0.03194371238350868,
        0.008534867316484451,
        -0.015643710270524025,
        -0.08363380283117294,
        0.016277961432933807,
        -0.022760730236768723,
        0.09963401407003403,
        -0.07403045147657394,
        -0.018714936450123787,
        0.03196372464299202,
        -0.003967507276684046,
        0.09292848408222198,
        0.04171708598732948,
        -0.005361227784305811,
        -0.04280391335487366,
        0.014954893849790096,
        -0.06146857142448425,
        -0.04027818143367767,
        0.025862794369459152,
        0.010599684901535511,
        0.025190414860844612,
        0.019743522629141808,
        0.0009003980085253716,
        0.013338047079741955,
        -0.005075542721897364,
        0.09739933907985687,
        0.009869086556136608,
        -0.01913689263164997,
        -0.0863247737288475,
        0.012589632533490658,
        -0.09356328099966049,
        -0.022528504952788353,
        -0.029075145721435547,
        -0.011623308062553406,
        -0.05621439218521118,
        -0.00628258753567934,
        -0.02646924927830696,
        -0.0510750450193882,
        -0.0007593444897793233,
        -0.10476549714803696,
        -0.051890283823013306,
        0.030851896852254868,
        -0.03718050196766853,
        0.035707227885723114,
        -0.012023433111608028,
        -0.09860534965991974,
        -0.014672651886940002,
        0.02076646313071251,
        -0.05297176539897919,
        0.07023702561855316,
        -0.0021602651104331017,
        -0.02546731010079384,
        0.04879750311374664,
        -0.005007363855838776,
        0.08591000735759735,
        0.05855396389961243,
        -0.05649012699723244,
        0.027247566729784012,
        -0.004104845225811005,
        0.01994563825428486,
        0.05044955760240555,
        0.06550417840480804
    ]
}