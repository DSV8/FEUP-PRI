{
    "id": "SzYKzAHsdMg",
    "title": "Python WiFi",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2021-01-07T16:55:54Z",
    "video_url": "https://www.youtube.com/watch?v=SzYKzAHsdMg",
    "category": "Science & Technology",
    "tags": [
        "wifi",
        "python",
        "netsh",
        "windows 10 wifi",
        "windows 10 python",
        "windows 10 netsh commands",
        "netsh wifi",
        "netsh wifi commands",
        "python windows 10 64 bits",
        "windows 10",
        "python wifi",
        "wifi password",
        "wifi tips",
        "python tutorial",
        "python 3",
        "learn python",
        "powershell"
    ],
    "views": 1663634,
    "likes": 58733,
    "comments_count": 2265,
    "description": "Python is such a great language to learn! Need help? Join my Discord:   Download script from Github here:   Menu: Learn how to code with Python: 0:00 Demo: 0:11 Python scripts: 0:56 Windows netsh Commands: 1:32 WiFi profiles: 3:05 Show WiFi: 3:57 Python script demo: 5:06 Python script explanation: 6:15 E-mail information: 9:36 Be careful: 10:01  Scripts:   ================ Connect with me: ================ Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:  YouTube:    ================ Support me: ================ DavidBombal.com: CCNA ($10):   Udemy CCNA Course:  GNS3 CCNA Course: CCNA ($10):   ====================== Special Offers: ====================== ITPro.TV:  30% discount off all plans Code: DAVIDBOMBAL   Boson software: 15% discount Link: bit.ly/boson15 Code: DBAF15P  wifi netsh python netsh wifi  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #wifi #python #netsh",
    "description_links": [
        "https://discord.com/invite/usKSyzb",
        "https://github.com/davidbombal/red-python-scripts/blob/main/windows10-wifi.py",
        "https://bit.ly/2XlIJFu",
        "http://discord.davidbombal.com",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal",
        "http://bit.ly/yt999ccna",
        "https://bit.ly/ccnafor10dollars",
        "https://bit.ly/gns3ccna10",
        "https://itpro.tv/davidbombal"
    ],
    "transcript": "- My advice is don't be a script kiddie. Learn how to code. Learn how to use Python because that gives you a lot of power to do many, many things, opens up a lot of doors for you. In this video, I'm gonna show you how to use a simple Python script to get all the WiFi SSIDs, or the WiFi names if you prefer, and the passwords for all the WiFi networks on a computer. I'm gonna show you how you can use a few Windows commands to list all the WiFi SSIDs on a computer and then how to retrieve the password of a WiFi network. But then I'll show you how to use a very simple Python script to basically extract all that information and show it in a nice format. Okay, let's get started and I'm gonna show you why you should learn Python. If you wanna be an ethical hacker, it really opens up a lot of doors for you. (electronic music) Okay, so on my Windows computer, I'm gonna open up a Command Prompt. In this case, I'll go to the downloads directory because in this directory, I've got a little Python script called get_wifi_passwords.py. This little script is a script that I'm gonna concentrate on in this video, but I've also created additional scripts where you can get all the WiFi passwords and email it to an email address, or copy the WiFi passwords to an HTTP server somewhere, on the internet as an example. But this is the one that we're gonna concentrate on. Before we do that, let's look at some basic Windows commands. This is not Python. This is just commands running in Windows. So netsh wlan show profiles. This shows me all the WiFi profiles stored on this computer. If I click on the WiFi icon, notice I'm connected currently to this WiFi network, but other WiFi networks are also listed here. Now, before we continue, everything that I'm showing you here is happening on my local network. Do not do anything that can get you into trouble. Be an ethical hacker and help companies better secure their networks. So in this example, everything is being done on my local laptop. I own all the infrastructure and all the networks that I'm gonna demonstrate here. I'm not trying to connect to someone else's network and hack them. I'm demonstrating why you need to be careful with network security, why you need to learn Python to help companies better protect their networks. So this video is for educational purposes only. Please make sure that you educate yourself and use this knowledge to help companies better secure their networks. We need to try and combat attacks like the recent attack on SolarWinds. Because of security issues in their network, they got hacked and that affected many, many other companies. Be careful with security. It's sometimes just too easy to break into companies or to get information that hackers shouldn't be getting. So learn how to protect networks. So once again, I own these networks. This TP-Link network is actually a little WiFi router that I've got behind me. So all of this information is just test networks that I'm using to demonstrate the power of Python and the power of knowing a little bit about coding. Okay, so we can use the netsh wlan show profile and look at a profile to see information about a WiFi network. So there's the command once again. We can see information about it such as the name. It's a Wireless LAN. Connection mode is connect automatically. There's some other information here, but this is the piece that we're most interested in. This tells us that a security key is present. And what we wanna do is get Windows to show that in clear text. So this command netsh wlan show profile whatever the WiFi network is. So this is the SSID or the name for the WiFi network. Key=clear will allow us to see the password. And then you go. That is the password of the WiFi network. That WiFi network is once again a little TP-Link router that's right behind me. So on this router, there's the SSID or name of the WiFi network. There's the password. By simply using this command on a Windows computer, I was able to retrieve the password of that SSID or that WiFi network. Okay, but let's use Python to automate this process because we don't want to have to do that command for every network. And I'll just clear the screen. So as an example, we could look at the password for this network, mysecurewifi, and you can see that there's the password, youcannotgetaccess! or bang if you prefer, but let's use a Python script to show all of the all the SSIDs, all the WiFi networks, and all the passwords. Now, before I go through the whole script in a lot of detail, let me show you what it actually does. So dir in downloads directory. This is the script. So I'm simply gonna run Python. And what I'm gonna run is get_wifi_passwords.py. And there you go. There are all the SSIDs and all the passwords stored on this Windows laptop. I'll clear the screen and I'll run it again, python get_wifi_passwords.py, and notice there is the password for the TP-Link router. There's the password on this network. And you can see the information for the other SSIDs or wireless networks and all their passwords. These are just test networks that I've created specifically for this demonstration, but it's as simple as that to get the passwords on a Windows computer. So now let's look at the code. Okay, so here's the Python script. First thing we're gonna do is import subprocess. This will allow us to use system commands. Then we're gonna import re which allows us to use regular expressions. Regular expressions are used in many, many places. It basically allows us to search for a specific text in some output and then do something. Now, rather than trying to copy all of this down, note that I've put a link to GitHub below this video so that you can download the script, but you use it at your own risk, and please be aware that this is supposed to teach you ethical hacking principles and shouldn't be used to hack other people's networks. Don't go to jail. Don't get into trouble. Use this for ethical hacking purposes only. Now, what you'll notice here is I've put a lot of documentation in the output. So I'm not gonna try and explain every command in a lot of detail because it's all documented in the script. But notice here as an example, we are running the subprocess command and we're running netsh wlan show profiles. That's as if we had run this command. So we're running that command basically in Python and then we're gonna capture the output and decode it. And then what we're gonna do is use a regular expression. Notice re. We're going to look for entries that say all user profile because that's what's in the output. We are looking for that. And we're gonna grab all the profile names and store that in a list. So we create an empty list. And then if the profile name does exist, for every name in the profile name, we're going to create a dictionary. And then we're gonna run the netsh wlan show profile and the name and look to make sure that a security key is found. If a security key is found, we are going to run the command that shows us the security key information. So again, we're running this command to see the profiles, then we're running this command for every profile name to make sure that a security key is present. And if it is present, then we're running this command setting the key to clear so that we can find the actual password. So notice there you can see key=clear. We wanna run that. We wanna capture the output and decode it. We wanna store that information. We are looking for the password. If the password is set to none, we'll say the profile password is none. Otherwise, we'll specify the password. And then we're gonna basically run through the WiFi list and print this in a nice format. So again, if I run the script, it basically gives us this output. So there you go. In a few lines of code, and most of the script is just comments trying to explain what the code is doing, I was able to retrieve all the SSIDs on a Windows computer, all the passwords, and then display them on the screen. Now, you can extend the script and email the passwords to use yourself or copy them to a server. I'll put a link to that code below this video. That code is available on my GitHub. I won't go through that in this video because I don't wanna get into hot water. So that code is available. Again, use it only for ethical hacking purposes or for educational purposes. Don't get into trouble. Don't go to jail. Okay, I hope you enjoyed this video. I just wanted to show you why it's important to implement good security on a network. Don't just open some file that someone sends you as an attachment on an email, because that could run a piece of code that could get all the WiFi passwords and then email them to someone. So be careful which applications you run. In this example, I'm running raw Python. In a separate video, I'll show you how to take Python code and wrap that as an executable so that you can just run an app if you like on a computer rather than running raw Python. Don't be a script kiddie. Learn the power of programming. Learn how powerful this is. It'll change your life if you can write a bit of code, opens up so many doors for you. Okay, I hope you enjoyed this video. If you did, please like it. Please consider subscribing to my YouTube channel. Please click on the bell to get notifications. I'm David Bombal. I wanna wish you all the very best. (electronic music)",
    "transcript_keywords": [
        "Python",
        "WiFi",
        "WiFi network",
        "network",
        "Python script",
        "networks",
        "password",
        "show",
        "script",
        "Windows",
        "Command",
        "passwords",
        "run",
        "Windows computer",
        "profile",
        "simple Python script",
        "WiFi passwords",
        "code",
        "information",
        "security"
    ],
    "transcript_entity_values": [
        "Python",
        "SolarWinds",
        "Python",
        "HTTP",
        "SSID",
        "First",
        "Windows",
        "David Bombal",
        "YouTube"
    ],
    "transcript_entity_types": [
        "WORK_OF_ART",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORDINAL",
        "PRODUCT",
        "PERSON",
        "ORG"
    ],
    "vector": [
        -0.059476789087057114,
        -0.040537457913160324,
        -0.0483589731156826,
        -0.005689212586730719,
        -0.04875027388334274,
        -0.02620524913072586,
        0.08055924624204636,
        -0.024941038340330124,
        -0.059820737689733505,
        -0.016484051942825317,
        0.023998431861400604,
        -0.06360160559415817,
        0.03183857724070549,
        0.019092831760644913,
        0.0534949004650116,
        0.02279973030090332,
        -0.04208742454648018,
        -0.0895664319396019,
        -0.044544219970703125,
        -0.14975762367248535,
        -0.00017124670557677746,
        0.03919278457760811,
        0.06452739238739014,
        -0.0419292151927948,
        0.01820932887494564,
        -0.05626843497157097,
        0.040131762623786926,
        0.02297191135585308,
        -0.037141259759664536,
        -0.0019562835805118084,
        0.050993409007787704,
        0.08629292249679565,
        0.00395183777436614,
        0.024375412613153458,
        0.04012178257107735,
        -0.024565234780311584,
        -0.03833908960223198,
        0.028589557856321335,
        -0.05578048899769783,
        -0.01421480905264616,
        -0.038489360362291336,
        -0.04265296086668968,
        -0.020103905349969864,
        -0.001293640467338264,
        0.001822659745812416,
        -0.02329796552658081,
        -0.07413282245397568,
        -0.019014373421669006,
        0.047073621302843094,
        -0.02744610421359539,
        -0.043136291205883026,
        -0.045024190098047256,
        0.02270761877298355,
        0.02601446956396103,
        0.009770797565579414,
        -0.0354650616645813,
        -0.04787686467170715,
        0.020557038486003876,
        0.03236068785190582,
        -0.12149562686681747,
        0.008918236009776592,
        -0.04070751368999481,
        -0.024445917457342148,
        -0.009338104166090488,
        -0.00604052422568202,
        0.0119843240827322,
        -0.07378380000591278,
        0.07703978568315506,
        0.06064543500542641,
        -0.0009395217057317495,
        -0.09485090523958206,
        0.0027078469283878803,
        -0.057401835918426514,
        0.09159436076879501,
        -0.0035354553256183863,
        -0.0651077851653099,
        0.03412928432226181,
        -0.029199063777923584,
        -0.03213619813323021,
        -0.020193040370941162,
        0.008795132860541344,
        -0.05838584527373314,
        0.014871501363813877,
        0.017275165766477585,
        0.08024802803993225,
        -0.010343988426029682,
        -0.01342693716287613,
        0.020315196365118027,
        -0.033847272396087646,
        -0.022576982155442238,
        -0.03642433136701584,
        0.03947804868221283,
        0.03817493095993996,
        -0.022846488282084465,
        -0.02753407694399357,
        0.06184631958603859,
        0.016887621954083443,
        -0.07659221440553665,
        -0.10311459749937057,
        0.08361682295799255,
        -0.03715837001800537,
        -0.02958882972598076,
        -0.03357114642858505,
        -0.03079691343009472,
        -0.021253405138850212,
        -0.008466924540698528,
        0.04320750758051872,
        0.03884517401456833,
        0.11485891789197922,
        -0.002646399661898613,
        -0.08468475937843323,
        0.00666801305487752,
        -0.07734224945306778,
        -0.07818097621202469,
        0.06323092430830002,
        0.06656826287508011,
        0.04247512295842171,
        0.11130503565073013,
        0.1438949853181839,
        0.06886044144630432,
        0.025640884414315224,
        -0.024344541132450104,
        -0.05866850167512894,
        -0.017492640763521194,
        -0.045390523970127106,
        -0.044816382229328156,
        0.04650199040770531,
        1.7209817696374008e-32,
        0.06292133033275604,
        0.025028884410858154,
        -0.06042548641562462,
        0.06190311163663864,
        0.12846128642559052,
        -0.04045497998595238,
        0.04996848106384277,
        -0.03291156515479088,
        -0.14787304401397705,
        -0.05775061994791031,
        -0.08448135107755661,
        -0.00038143113488331437,
        -0.04611106216907501,
        0.031048232689499855,
        -0.06547149270772934,
        -0.05501513555645943,
        4.307723793317564e-05,
        0.04021785780787468,
        0.020587628707289696,
        0.005444783251732588,
        -0.03968179225921631,
        0.003003157442435622,
        0.06681942939758301,
        -0.015254968777298927,
        0.06918225437402725,
        -0.05121831223368645,
        0.03745388239622116,
        0.023876911029219627,
        0.0756894126534462,
        -0.01248162891715765,
        -0.07151227444410324,
        -0.00401639798656106,
        -0.09355458617210388,
        -0.04173203557729721,
        0.055275484919548035,
        -0.0528908371925354,
        -0.07101117074489594,
        -0.08296728134155273,
        -0.032972224056720734,
        -0.03230268880724907,
        -0.051075927913188934,
        -0.03101089783012867,
        -0.012248397804796696,
        -0.05174655839800835,
        -0.02297748066484928,
        0.000529721612110734,
        -0.040712255984544754,
        0.00948258861899376,
        0.012518028728663921,
        0.05130971223115921,
        -0.022284161299467087,
        -0.010469365864992142,
        -0.010058162733912468,
        -0.0707637146115303,
        0.004441333003342152,
        -0.006710370071232319,
        0.028710830956697464,
        0.07568980753421783,
        0.02776569500565529,
        -0.058137960731983185,
        0.03235552832484245,
        0.03083336167037487,
        0.027041597291827202,
        0.003590360749512911,
        0.07966459542512894,
        -0.028912898153066635,
        -0.05490364134311676,
        0.032597996294498444,
        0.02612297423183918,
        0.004739775322377682,
        -0.07248237729072571,
        0.026309167966246605,
        -0.029774505645036697,
        0.0018907927442342043,
        0.03483269363641739,
        -0.03459279611706734,
        0.0015488911885768175,
        -0.06876622140407562,
        -0.05326273664832115,
        0.050802573561668396,
        0.07980778068304062,
        -0.004206492565572262,
        -0.008614097721874714,
        -0.05594832822680473,
        -0.03893227130174637,
        -0.035257790237665176,
        0.051463689655065536,
        -0.0852942168712616,
        -0.0146368108689785,
        0.05179348960518837,
        -0.0500640831887722,
        0.00879488606005907,
        0.06897827237844467,
        0.03035014681518078,
        -0.06895485520362854,
        -1.9213728466626855e-32,
        0.022339828312397003,
        0.02410358190536499,
        0.0320257693529129,
        -0.04086676612496376,
        0.01651843637228012,
        -0.0393090657889843,
        0.055870041251182556,
        -0.011893454939126968,
        0.05606987327337265,
        0.004148149862885475,
        0.06469663977622986,
        -0.025620434433221817,
        -0.022219689562916756,
        -0.051314663141965866,
        0.08316105604171753,
        -0.011409771628677845,
        0.005859028548002243,
        -0.031208457425236702,
        0.013184919022023678,
        -0.023095661774277687,
        -0.07674938440322876,
        0.04545693099498749,
        -0.09596900641918182,
        -0.014264194294810295,
        -0.11873277276754379,
        -0.06446414440870285,
        0.025123870000243187,
        0.03916238620877266,
        -0.0023309914395213127,
        -0.005670469254255295,
        -0.013380555436015129,
        0.028939884155988693,
        -0.06498540192842484,
        0.0660141259431839,
        -0.016015557572245598,
        0.06517282128334045,
        0.046599555760622025,
        0.03581822291016579,
        -0.003944804426282644,
        0.0070587764494121075,
        0.1265898495912552,
        0.039800964295864105,
        -0.10882657766342163,
        0.00880030170083046,
        0.06093906611204147,
        -0.03642124682664871,
        -0.025310387834906578,
        0.028800541535019875,
        -0.14665526151657104,
        0.01356738992035389,
        0.12315593659877777,
        -0.021111078560352325,
        -0.028159525245428085,
        -0.05287075415253639,
        0.015767954289913177,
        0.012046425603330135,
        0.059121083468198776,
        -0.07710614055395126,
        -0.02622426301240921,
        -0.10205640643835068,
        -0.06827988475561142,
        -0.12580375373363495,
        0.03911015763878822,
        0.04482852667570114,
        0.015444520860910416,
        -0.023434532806277275,
        -0.094633549451828,
        0.059063855558633804,
        -0.04448683559894562,
        -0.08673857897520065,
        0.015023056417703629,
        -0.05866589397192001,
        0.007606009021401405,
        -0.02705240808427334,
        -0.008799226954579353,
        -0.03425528109073639,
        0.021688824519515038,
        0.05680892616510391,
        -0.08234706521034241,
        0.056307073682546616,
        -0.011719276197254658,
        0.05144643038511276,
        -0.004338898696005344,
        0.004843221977353096,
        -0.017416585236787796,
        0.030476145446300507,
        0.04432763531804085,
        0.09388628602027893,
        0.015927888453006744,
        0.027721326798200607,
        0.022906996309757233,
        0.05332554876804352,
        0.07328159362077713,
        0.08136283606290817,
        0.012824534438550472,
        -6.515915629279334e-08,
        -0.11174076795578003,
        0.002854489255696535,
        -0.1009480208158493,
        0.01748077943921089,
        -0.04977322742342949,
        0.05361173301935196,
        0.04422111436724663,
        -0.11124682426452637,
        0.0021608334500342607,
        0.00942309945821762,
        -0.058654166758060455,
        -0.001165744848549366,
        -0.03675515949726105,
        0.07674704492092133,
        -0.04018479585647583,
        0.10226438194513321,
        -0.04213900491595268,
        -0.0029047811403870583,
        0.044544048607349396,
        0.027407784014940262,
        0.0702660083770752,
        -0.041032031178474426,
        0.018145455047488213,
        0.08641267567873001,
        -0.08142811059951782,
        0.052736539393663406,
        -0.01964871771633625,
        0.00962906889617443,
        -0.055535562336444855,
        -0.04758370667695999,
        -0.05318521335721016,
        -0.05250776559114456,
        0.04790380597114563,
        -0.03455530107021332,
        0.03180873021483421,
        0.011468463577330112,
        -0.042990755289793015,
        -0.08177847415208817,
        0.0019239431712776423,
        0.07620225101709366,
        0.019460875540971756,
        -0.03498339280486107,
        -0.014313356019556522,
        0.03066878952085972,
        -0.007081261370331049,
        -0.019082864746451378,
        -0.03727143630385399,
        -0.054826200008392334,
        0.021125992760062218,
        -0.05682028830051422,
        -0.028964567929506302,
        -0.023102859035134315,
        0.01490691863000393,
        -0.06469390541315079,
        0.060046445578336716,
        0.04502606391906738,
        -0.0249415822327137,
        -0.021268336102366447,
        -0.014651745557785034,
        0.05404685065150261,
        0.03604289889335632,
        0.05788663774728775,
        0.011747777462005615,
        -0.01837417483329773
    ]
}