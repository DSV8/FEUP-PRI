{
    "id": "3yJqlD9RxD4",
    "title": "Dissecting the CD Player: How to Turn Shiny Plastic into Music",
    "channel": "Technology Connections",
    "channel_id": "UCy0tKL1T7wFoYcxCe0xjN6Q",
    "subscriber_count": 2460000,
    "upload_date": "2018-09-06T12:40:18Z",
    "video_url": "https://www.youtube.com/watch?v=3yJqlD9RxD4",
    "category": "Science & Technology",
    "tags": [
        "CD palyer",
        "compact disc",
        "CD",
        "magnavox cdb 260",
        "philips",
        "magnavox",
        "DAC",
        "analog sound",
        "digital sound",
        "CD-DA",
        "CDDA",
        "red book",
        "technology connections",
        "laser reader",
        "laser mechanism",
        "disc tray"
    ],
    "views": 652908,
    "likes": 19723,
    "comments_count": 1012,
    "description": "You can support this channel on Patreon!   Link below      Did you ever want to know a little more about the nuts and bolts inside a CD player?  No?  Well Im afraid youll have to pick another video because thats exactly what this one is!  In it, I start with a taken-apart Magnavox CDB 260, and we examine what all the parts do, how they fit together, and how they work together to turn pits and lands on a plastic disc into your favorite electrosynthamagnetic musical sounds.   The Wiki article on CD Subcode:   The previous video:   The Digital Sound Playlist:   Technology Connections on Twitter:   You can support this channel on Patreon!  With the support of individuals like you, this channel has transformed from my weird hobby into my job.  Its my goal to keep this channel completely independent from outside sponsorship, and thanks to Patreon supporters thats more than possible!  If youd like to pledge some support of your own to keep the channel free of outside influence, as well as to help it grow, please check out my Patreon page.  Thanks for your consideration!    And thank you to the following Patrons! Sen, mark barratt, Tully, Violet Moon, Duncan Ward, Tobias Faller, Justin Smith, Corey A Hudson, EpicLPer, Luc Ritchie, Michael Dragone, Manfred Farris, Eric Romero, John Laur, Patric Bates, Sven Almgren, Lutz Broska, Jrgen Kieser, Nicholas, Ewen McNeill, thefanification, Nicolas, Albin Flyckt, Michael A Kalfas II, Michael Bernstein, Kevin Kostka, Shame Zamora, Brad Wilmot, John Bailey, Alex Ilyin, Miles H, Deovandski Skibinski Junior, Andrew \"FastLizard4\" Adams, Avi Drissman, Jens Bretschneider, Phil Taprogge, Sam, Rich Jeanes, Jonathan Skowronek, Tim Grov, Pieter van der Eems, Philip Kvist, Brian Condron, Peter Jerde, Torin Zaugg, James Watson, Vince Terranova, Jason Nevins, Andrew Montagne, David Scott, Mike Nichols, MrSonicOSG, Brandon Enright, James Fialho, Christian Torelli, Sunchild, Kim Rypstra, The Paul Allen, toasterking, Seth Robinson, Ralph, Pavel Soukharev, Forrest Miller, Patrick Quinn-Graham, Max Zelinski, Troy Kelly, Ulti, Jason Brandy, Norman Tatlock, Jesper Jansen, Andrew Johnson, Goolashe, Rmy GRANDIN, ce keen, Jake Shep83, Nick Pollard, Drew Holm, David Grossman, Ben Auch, Jeff Puglisi, Andy S, Robert, Johan Greefkes, Jacob Dixon, Matt Luebbert, Alex Corn, SonOfSofaman, Brent Higgins, Rob Kefford, Roger Baker, Alexander Schrder, Andreas Skagestad, Eric Butterfield, James Holmes, Tim Skloss, James-Ross Harrison, Sean OCallaghan, Lee Wallbank, Jonas, Colin Cogle, Kyle Matheis, Krzysztof Klimonda, Aaron Rennow, Gantradies, Ted Flores, Yota Ninja, Tee Jay, Jakob, Bee Jay (thats a fun coincidence, a Tee Jay and a Bee Jay), Francesco Lezi, Countzero, Ray Chang, Kodapan, L0j1k, Chris Connett, Guillaume Tremblay-Beaumont, Eduardo Kaftanski, Winfield Trail, Miles H, Eric Nelson, Sha Nasti, Charles Surett, Ed Green, Stephen B. Hinton, Daniel Bernard, thegeoffreak, annoying and reprehensible idiot, Piotor Kowalski, Bob Slovick, Aleksei Besogonov, Michael Sims, Recycled, Meetupvideo, Jason Burgett, Wayne Marsh, Jib Systems, Lars Kuur, Alan Nise, Matt Dancer, Andrew Rosenwinkel, Fran Rogers, Malcolm Balshaw, Tero Janhunen, Bob B, Mike Noe, Alan Smith, Philip Cosgrove, Joshua Doades, Rob Rymarczyk, Scarfacecapwn, Andreas Lunderhage, Ennex The Fox, LEONARD PEZZANO, Steve Kralik, Nicolai Savolyi, Hank Eskin, Kirill Polstainen Dont see your name?  Dont worry!  To keep this little perk alive, the $5 patron shoutout is now on a rotating basis!  If youre not here, you should be here in one of the next two videos.  If youve slipped through the cracks, dont hesitate to send me a message via Patreon and Ill fix it!",
    "description_links": [
        "https://en.wikipedia.org/wiki/Compact_Disc_subcode",
        "https://youtu.be/sAbhPeTp51s",
        "https://www.youtube.com/playlist?list=PLv0jwu7G_DFWBEyCKt4tKHIk8ez_pZS_P",
        "https://twitter.com/TechConnectify",
        "https://www.patreon.com/technologyconnections"
    ],
    "transcript": "This exploded machine is capable of a marvelous feat. These parts, when assembled correctly, are able to interact with this silver plastic thing and make melodious sounds for you to enjoy in the highest of fidelities. Am I being vague? Maybe. Well, more specifically, this is a compact disc player! The innards of a Magnavox CDB 260, made in August of 1988. From what I can gather this is a pretty basic CD player, even for the time. But thats fine, in fact it might even be better. So, in the last video, *ding* we talked about how the data is stored on a compact disc. Just below the top surface of the disc, millions of little bumps are found in the polycarbonate, and the aluminum coating will reflect light like a mirror back from whence it came. These bumps, from the bottom side, form pits and lands and they are what encodes the data. So the first thing any CD player will need to do is to shine a light on the CD, a light so finely focused that its shining mostly on only one track, and it needs a way to detect the change in brightness caused by the pits. Thats what this guy does, here. This is the laser and lens assembly. To understand what it does, its best to take a look at it from this angle. Excellent. OK, so notice that there are two circuit boards at right angles to each other. This one to the side is where you will find the laser diode. This is what creates the beam of light that will read the disc. The light from the laser diode gets shot straight to the left, and a prism, right about here, will cause the light to make a 90 degree turn, and end up going... up through the lens, and onto the disc. Because the disc has a mirrored surface, that light is gonna come straight back down through the lens. And heres where the other circuit board comes in. Some of the light being reflected from the CD will go straight through the prism and end up at the bottom. Now you cant see them because this is sealed and I dont really want to break it but inside, on top of the circuit board, there are 4 photodiodes arranged in a 2 x 2 grid. Why are there 4, you ask? Well, not only do the photodiodes need to react to the changes in brightness of the reflected light in order to, for lack of a better word, detect the zeros and ones, but they also forms the basis of the focus and tracking system. A ha! A new thing to unpack. No CD is perfect. All of them are going to have some deviations from perfectly flat, and theyre also probably not going to be held exactly perfectly centered, so the track of pits will waver like this off-center record. To stay on the same track of pits and lands, some mechanism will need to be able to move the lens closer to and farther away from the disc, in other words stay focused on it, and there will also need to be a way to move the lens back and forth as the spiral track wobbles. In other words, it needs to track it. Philips solution to the problem of focus and tracking is the less common one, but it is so much more elegant than Sonys in my opinion. Ill show you Sonys system later on, but if you didnt see my last video, I showed you the disc tray of this machine and suggested it hinted at the difference. So, first the easy bit. To maintain focus on the disc, the lens is floating, and you can kinda see that theres a coil of wire that can push it up or pull it down, pretty much exactly like a loudspeaker driver. The low mass of the lens allows it to react practically instantly to changes in the distance between the CD and the lens, so even a badly warped CD wont fool the CD player. Alright, we have the Y axis accounted for. But how do we move the lens left and right, in order to account for a wibbly wobbly track? Well, notice that the lens is on an arm thats surrounding a metal disc. This allows the lens to rotate around the disc, and youll notice that this disc is a magnet. Flip this upside down and you'll find another coil of wire, surrounding the magnet. This swing-arm design is remarkably similar to how hard drives move their read/write heads with a voice coil, and its this that sets the Philips design far apart from Sonys. Because the lens can move vertically, and its platform can move horizontally, constant focus and tracking can be maintained. Now, Ill reattach the laser mechanism to the spindle motor assembly. It has ball bearings on the top and bottom, and when this bracket is in place the arm essentially floats and moves nearly effortlessly. This mechanism is fastened to this assembly, which also operates the disc tray. The disc tray is made in two pieces, and its a rather unique design. The bottom half sort of drops down when it is inserted into the player, and you can sort of move it even while its open. When it is holding a CD to be played, it is brought into the player and as it reaches the spindle, the lower half drops down and this spring-loaded clamp will rest on it. The reason why I said the tray might give a hint to the Philips pickup system, is that it has a curved cut out to accommodate the path of the lasers swing. Thats a tell-tale sign that the CD player has a swing-arm laser mechanism. Now with the disc held in place, the spindle motor spins the disc, and the laser will attempt to read it. And now we go back to the photodiodes, because this is the really genius bit. If the disc is focused correctly and its being tracked correctly, all four photodiodes will receive the same relative intensity of light. This is because the spot of light thats hitting the array is a perfect circle. Due to the optics of the lens and prism, an out-of-focus beam will morph into an ellipse, and depending on which way its oriented, the focus is either near or far. Additionally, tracking errors either left or right will push the spot... left or right. By comparing the relative intensities between these four photodiodes, the player can determine what corrective action it needs to take. So what does the comparing? Well, when assembled, the ribbon cable which carries power to the laser unit and returns signals from the diodes plugs in here on the circuit board. Now if we flip it over, we find two rather large chips. If we follow the traces from the plug where the ribbon cable went in, there are four that go right to this chip, labeled TDA8808T. What does this chip do? Well, its a photodiode signal processor for compact disc players! Its data sheet tells us that it is a bipolar integrated circuit designed for use in compact disc players with a single spot read-out system. It amplifies the photo-diode signals and processes the error signals for the focus- and radial control network. Well aint that handy! So this chip not only handles the focus, but it also amplifies the actual signal coming from the photodiodes. Neat. But it doesnt do tracking. But if you noticed this strikingly similar chip, this one a TDA8809T, you might have guessed that this guy does that. But it only needs two inputs because it just wants the sums of these two diodes, which handily the other chip has generated for it. These two chips feed their calculated corrections up to this chip, which actually handles the voltage to drive the deflection coils for the lenss vertical movement and the arms horizontal movement. OK, theres one last thing that the first chip handles. It has some automatic gain control circuitry onboard to actually generate a binary stream from what is the analog signal coming from the photodiodes. Remember, the pits and lands represent ones and zeroes, but were still in the analog realm, reading voltage from the four photodiodes. So in essence, this chip is an analog-to-digital converter, creating an actual bit-stream for the following components to utilize. If we follow this trace, from the pin which is labeled TO DECODER on the datasheet, well find it heading over to this Motorola chip. Now this one was a bit of a mystery for a while, in fact it tripped me up so much that what youre looking at now happened a day after what happened before. Eh, what exactly the motorola chip does is not clear, as I couldnt find a datasheet for it, but it appears to be the main processor for the machine. If you look at these pins here, youll see that they head to these connectors which connect the main board to the front panel. These are likely inputs for the buttons on the front of the machine, as well as the outputs for driving the LEDs on the display, though there is probably some communication protocol for that task, given there are definitely not enough pins to be driving each segment and each indicator directly. What is clear is that some of these traces head from the Motorola chip up to the tracking chip, which would make sense because if the processor handles button inputs, it probably also talks to the tracking chip for navigating around the disc. But whats odd is that the datasheet for the TDA8808T said that pin 10, which is definitely this trace, Ive checked with an ohmmeter, goes to the decoder. And this other big chip, from Philips, is called the decoder chip. Hmm, whats going on? To be honest, Im not entirely sure. I can make a few educated guesses, though. First, if you havent already spotted it, youll see that the trace from pin 10 on the focus chip branched off here, and it also connects to the decoder chip through a resistor on the top side of the board. So the decoder chip does have a connection to the laser diodes output, but whether or not this is where its getting the data it needs is uncertain. There are direct connections between the processor chip and the decoder chip, so it could be that this trace here is providing the decoder with some sort of redundancy or perhaps even something as simple as a clock signal. One thing that is certain is that the decoder chip has a number of connections to this chip right next to it. This chip is a RAM chip, which the player likely uses to undo the cross-interleaved reed-solomon coding used in the disc. Remember, the data is spread about on the disc in addition to having parity bytes mixed in, so the player needs somewhere to dump the raw datastream in the short term for some data reorganization and decoding. Ah right, thats probably why its called the decoder chip. If I were to make a guess, which I am doing right now, Id say that the processor contains the lookup table and is demodulating the eight-to-fourteen modulation used on the disc. Then it generates the raw stream of 8 bit words. From that point, it sends the demodulated, but still CIRC encoded, data to the Philips decoder chip. The Philips chip dumps the raw data into RAM so it can reorganize and decode the CIRC error correction and recover the actual audio samples from the datastream. Then it can be sent to the DAC. But the processor is probably also handling the logic of the disc. Theres some low-level stuff in the datastream that can be seen before CIRC error correction is decoded. For example, the subcode. Subcode? Hmm, have we overlooked something? Well kinda. Weve talked in the past about the table of contents and the timecode, but where are these along this disc? If the CD was just a raw stream of audio samples, how is the timecode being stored? Well, earlier I had said that 192 bits of audio samples are stored in a frame, consisting of 24 bytes. Thats not strictly true, though. The frames are actually 33 bytes. Now, if youve been keeping track, reed-solomon code produces a parity byte for every 3 audio bytes, which would mean that in 24 bytes of audio, there should be 8 redundant parity bytes. That would bring the frame to 32 total bytes. But theres an extra one. Ooh, the plot thickens! That is the subcode byte, of which there is one in each frame. 98 frames comprise the timecode frame, sometimes also called a sector, though the use of the term sector was added in the CD-ROM days and is not part of the original Red Book standard. However Im going to continue to use the word Sector because Frame and Timecode Frame are too similar. These combine to create 1/75th of a second of audio, so each second contains 75 timecode frames, or sectors, which comprise the most specific time references there are on the CD. The way the subcode is handled is pretty ingenious. Though there is only one byte per frame, a total of 96 frames have a usable byte per sector. The first two in a 98 frame sector are used as a synchronization word. Now, you might have realized that 96 is divisible by 8. So rather than just create one bitstream, each subcode byte actually represents one bit of 8 subcode channels. Depending on which channel the player wants to read, it will be looking for the nth bit in each subcode byte, and stringing them together. And the crucial one for the timecode is the Q bit. And even within just that datastream, theres some extra specificity. The first bits of the Q channel are actually signifying specific information about the disc, and its the 72 bits before the last 16 that we need to look into. But even then, there are different modes that can be selected within the datastream of the Q channel, so there was a lot of thinking going into this. Ive linked the Wiki article on compact disc subcode as it goes over this much better than I can. This explains the rather elegant way in which a CD player can find tracks on a disc. The lead-in contained the table-of-contents (which incidentally is sent in the Q channel subcode as well) and the CD player stored in memory. It now knows where each of the tracks are by their time code. So when you select Track 10, which the Table of Contents told the player can be found at this time code, it will first send its laser to around where that timecode probably is (after all the physical characteristics are nearly identical from CD to CD) and then it simply mutes the audio while it looks. By reading the Q channel datastream it knows exactly what its looking at, and it will move inward or outward in fine steps until it sees exactly the timecode that its looking for. Then it will unmute the audio, and play the song. In a rather smart move, Sony and Philips minded their Ps and Qs by making these the only two subcode channels used in the Red Book standard. 6 entire data streams were left unused for future extensions of the standard. And each of these streams, when discounting the two synchronization bits, can produce 7.2 kilobits per second. Now of course thats not a lot, but thats 900 characters of text per second. Multiply that by 6 channels and you have 5.4 kilobytes per second of untapped data available, or about 24 megabytes total for a 74 minute CD. In later years this would be used to produce some nifty things. Which well get to, dont worry. But just imagine for a moment how crazy forward thinking that was. In any CD, there were more than 16 3.5 inch floppy diskettes worth of data sitting completely unused. And in 1982, these things werent even in commercial production yet, plus they wouldnt hit 1.44 megabytes in size until 1986. In a time when hard drives for computers were around 10 megabytes, if you even had one in your PC, the idea of having 24 megabytes in one place, let alone 24 megabytes of what amounted to unneeded and unused data on a sound storage medium, was quite remarkable. But remember, no one was thinking of that at all. The CD-ROM was some years away, though it does strike me as a bit of a waste that no one developed computer peripherals that could interface with the subcode-out jacks found in some CD players to get programs or data off of audio CDs. That would have been kinda nifty. Now of course, this just an educated guess, but the decoder chip probably isnt even looking at the subcode. The motorola chip is probably the only thing paying attention to it, and in fact it might even strip that out before sending the CIRC encoded audio data to the decoder chip. But dont assume the decoder chip has an easy job; its got a lot of math to work out to undo the reed-solomon code. Plus, keep in mind that there are 16 bit audio samples here, but were dealing with 8 bit words, so it needs to decode what exactly each sample is and send this and this alone to the DAC. Which is definitely the role of this chip. Flipping the board back over, if we follow the traces we find weve got a couple of connections to this little 8 pin chip. And believe it or not, that is the DAC. This diminutive TDA1543 is all that we need to turn ones and zeros into music. Just provide it with a clock signal, your data stream, a power and ground, and youll get left and right channel outputs on pins 6 and 8. Now the datasheet says that pin 3 is the data input, and if we follow the trace back, sure enough this heads to the Philips chip. So lets put this entirely back together. The circuit board is held down with only one screw, as it also gets support from screws on the rear. The CD mechanism rests above the circuit board here, and we need to plug in the ribbon cable for the laser mechanism, as well as the spindle motor and the disc tray motor. The disc tray slides back in place like this, though you have to kind of hold up the moveable piece as you do so, and now were ready to put the faceplate back on. Simply plug in the connectors to its circuit board for the display and buttons, and dont forget the headphone jack, and now we just have to put on this plastic thing which connects the power button to the actual power switch, which is way back here for some reason, and now its more or less assembled. Well, except for the cover. So now lets play a CD. I turn the player on, and youll see that it performs a check of whether or not a CD is in it. Its empty, so it enters a standby mode. I press the open/close button and the motor pushes the tray open. Now I deposit my disc of choice, and press the open/close button again. Once the tray has closed, the focus chip performs its initial focus routine, where it sweeps the lens from its lowest to highest position in order to detect whether or not a disc is there. Once it sees the disc it locks focus on it, and as the disc is spun by the spindle motor, it begins analyzing the ratio of stimulation between the two pairs of photodiodes to maintain focus even on badly warped discs. Now, the tracking chip kicks in, nudging the laser left and right at the request of the Motorola chip, which is working for the Philips chip. The tracking chip is helping to look for the table of contents. Once its seen it, it locks onto it and the processing chips load the TOC into memory. At this point the player re-enters a standby mode. If I had selected play, or pushed the tray in rather than hitting the close button, it would have started playing immediately after loading the TOC. In any case, its ready to play the disc. I hit PLAY, and the disc begins spinning while the focus chip maintains focus and the tracking chip helps to look for the beginning of the program area. After finding it, the tracking chip simply locks on to the datastream, and the raw data is processed by these two chips. Again, exact specifics unknown here. After undoing the eight-to-fourteen modulation, as well as reordering the data and filtering out the parity bytes from the CIRC error correction, the player has now extracted the raw datastream of audio samples. These are sent to the DAC, which recreates the original analog sound wave based on the principles of the Nyquist-Shannon Sampling Theorem. If I want to select a later track using the NEXT button, the Motorola chip will take over the tracking chip once more, nudging the laser farther out while it looks in the Q channel subcode for the timecode of the next track. Once it sees it, it locks onto the datastream again, and the audio is processed as normal. If I select a track thats far from the start, the laser flings itself out there, still looking in the Q channel, for the appropriate track. The CD player will happily decode the audio for you until it reaches the end of the last track. Now, its reading the lead-out, in which the subcode will tell the player its reached the end of the disc, and it stops. Unless of course youve got repeat enabled, in which case its back to the beginning to start the whole thing over again! Hooft, that was intense. Like the circus! Oh no, youre seeing the CD player all disassembled again! The continuity errors! The horrors! OK, Ill cut back on the silliness. This was my best attempt at explaining how this CD player works in the most comprehensive way possible, while trying not to get too technical. Already I can tell that this is a longer-than-normal video, so if you made it here, thanks! And congratulations! Soon, Ill be taking this back apart-- after I reassemble it-- and adding some test wires to the board so that we can take a look at the waveforms produced by these components with an oscilloscope. That will probably be the next video on the channel, so be sure to subscribe so you wont miss it! Thanks for watching, and I really hope you enjoyed this video, it was a lot of fun to make, especially going through the circuit board, finding the datasheets, and all that jazz. As always, a great big thank you to everyone who supports the channel on Patreon. One of the greatest things about the support I have from Patreon is that it allows me to keep the channel going without resorting to outside sponsorships. Id much rather this channel stay entirely community driven, and thanks to people like you thats remained the case! If youre interested in pledging some support to the channel to help it grow, please check out my Patreon page! Thank you for your consideration, and Ill see you next time! uncomfortably smooth jazz ...binary stream from what is the analog (long pause) No, that was right. OK. That it ReepresentReepresents. Reepresents? Reepresents. These continue to create 1/75th.... Oh man cmon! But even then, there are different nnmmmmmMMMMMMmmm. modes! ...which the CD player stored in memory. It now knows whe (glances at mechanism he just bumped up against) or that ...plus they wouldnt be the 1.44 megabytes in size until 1986 they wouldnt hit dangit.",
    "transcript_keywords": [
        "chip",
        "disc",
        "decoder chip",
        "tracking chip",
        "Motorola chip",
        "player",
        "Philips chip",
        "data",
        "Philips decoder chip",
        "disc tray",
        "focus chip",
        "lens",
        "compact disc players",
        "focus",
        "track",
        "laser",
        "DECODER",
        "audio",
        "compact disc",
        "Philips"
    ],
    "transcript_entity_values": [
        "24 megabytes",
        "around 10 megabytes",
        "TOC",
        "August of 1988",
        "the Q channel datastream",
        "Motorola",
        "CIRC",
        "about 24 megabytes",
        "TDA8808T",
        "32",
        "Sonys",
        "half",
        "motorola",
        "96",
        "only one",
        "24",
        "Sony",
        "33",
        "fourteen",
        "two",
        "more than",
        "1986",
        "8",
        "3",
        "Wiki",
        "later years",
        "the 1.44 megabytes",
        "192",
        "6",
        "zeros",
        "16 3.5 inch",
        "98",
        "2",
        "Ill",
        "only two",
        "4",
        "Qs",
        "90 degree",
        "Red Book",
        "74 minute",
        "the lenss vertical movement",
        "Track 10",
        "Patreon",
        "1/75th",
        "260",
        "DAC",
        "jack",
        "Hooft",
        "the spindle motor assembly",
        "75",
        "first",
        "4",
        "four",
        "Magnavox",
        "one",
        "RAM",
        "eight-to-",
        "10",
        "72",
        "the Table of Contents",
        "Nyquist",
        "millions",
        "One",
        "16",
        "some years",
        "1982",
        "5.4 kilobytes",
        "the last 16",
        "TDA8808T.",
        "First",
        "Ps",
        "second",
        "7.2 kilobits",
        "NEXT",
        "Philips",
        "1.44 megabytes"
    ],
    "transcript_entity_types": [
        "QUANTITY",
        "QUANTITY",
        "ORG",
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "QUANTITY",
        "PRODUCT",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "QUANTITY",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "DATE",
        "QUANTITY",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "QUANTITY",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "DATE",
        "ORG",
        "QUANTITY",
        "WORK_OF_ART",
        "TIME",
        "ORG",
        "LAW",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "PERSON",
        "PERSON",
        "ORG",
        "CARDINAL",
        "ORDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "TIME",
        "CARDINAL",
        "DATE",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "DATE",
        "DATE",
        "QUANTITY",
        "DATE",
        "ORG",
        "ORDINAL",
        "ORG",
        "ORDINAL",
        "QUANTITY",
        "ORG",
        "ORG",
        "QUANTITY"
    ],
    "vector": [
        -0.04314379394054413,
        -0.017607280984520912,
        0.04782875254750252,
        -0.13953742384910583,
        0.00967748649418354,
        0.026690993458032608,
        0.057383112609386444,
        0.05306301265954971,
        -0.06797970831394196,
        -0.008177976123988628,
        -0.016517529264092445,
        0.035139087587594986,
        0.042505133897066116,
        -0.04787949472665787,
        -0.0009853943483904004,
        -0.004581001121550798,
        -0.00887579470872879,
        -0.03441790118813515,
        -0.08750394731760025,
        0.0005466800648719072,
        0.013825238682329655,
        -0.08410216122865677,
        -0.002787088742479682,
        -0.016909636557102203,
        -0.07615745067596436,
        0.03246452659368515,
        0.012178857810795307,
        0.05710384249687195,
        -0.03148433938622475,
        -0.08454719930887222,
        0.035577330738306046,
        0.09280215203762054,
        0.010847210884094238,
        -0.05931854248046875,
        0.0002195012930314988,
        -0.011779654771089554,
        0.000528021133504808,
        -0.01749343052506447,
        -0.030104028061032295,
        -0.03786567598581314,
        0.03906717523932457,
        -0.04097907990217209,
        0.040902089327573776,
        -0.013965180143713951,
        -0.11569319665431976,
        -0.05911995470523834,
        0.028682280331850052,
        -0.0772826075553894,
        -0.020831136032938957,
        0.003884894773364067,
        -0.028868937864899635,
        -0.0206693597137928,
        0.11564096063375473,
        0.033531658351421356,
        -0.02509545162320137,
        -0.0032121003605425358,
        0.07597222179174423,
        0.03640151396393776,
        0.03286874294281006,
        -0.009777924045920372,
        0.07932043820619583,
        -0.02502429112792015,
        -0.04390282556414604,
        0.02348322421312332,
        0.05694053694605827,
        -0.07200480252504349,
        -0.013680810108780861,
        0.05039622262120247,
        -0.005726395174860954,
        0.018240300938487053,
        0.0027061046566814184,
        0.031136203557252884,
        0.033268142491579056,
        0.05129319429397583,
        0.05191364884376526,
        -0.027082189917564392,
        -0.03168708458542824,
        -0.048056311905384064,
        0.008942474611103535,
        -0.00894814170897007,
        0.02971636690199375,
        0.0757942870259285,
        -0.019778253510594368,
        -0.12319094687700272,
        -0.05537029728293419,
        0.028674427419900894,
        0.021650807932019234,
        0.0229877308011055,
        -0.04509231820702553,
        0.006724757608026266,
        -0.03667284920811653,
        0.06405048817396164,
        0.049523498862981796,
        -0.005974912084639072,
        -0.029349150136113167,
        -0.003124220995232463,
        0.00948541983962059,
        -0.0889347642660141,
        -0.0014387870905920863,
        0.05588975548744202,
        0.0670267790555954,
        0.030415913090109825,
        0.01767381653189659,
        -0.07286965847015381,
        -0.06930321455001831,
        -0.08508890122175217,
        -0.07869736105203629,
        0.11689921468496323,
        0.034897588193416595,
        0.0016370173543691635,
        -0.061959873884916306,
        0.012811790220439434,
        -0.06537918746471405,
        -0.017396777868270874,
        -0.04231981188058853,
        0.0065346998162567616,
        0.0019760699942708015,
        0.10179968178272247,
        -0.0022475128062069416,
        -0.0907871425151825,
        0.019073888659477234,
        -0.07638657093048096,
        -0.02776516228914261,
        -0.03249602019786835,
        0.07248686999082565,
        -0.0940103605389595,
        -0.029865659773349762,
        2.4094048934086886e-33,
        -0.015933560207486153,
        0.08047069609165192,
        -0.03223913162946701,
        0.030120743438601494,
        0.022528033703565598,
        -0.03775104135274887,
        -0.015409920364618301,
        0.10041467100381851,
        -0.09378176927566528,
        0.07013041526079178,
        0.09054102003574371,
        0.049222927540540695,
        -0.06902755051851273,
        -0.0005269607063382864,
        -0.04550173878669739,
        -0.0917578712105751,
        -0.1571766883134842,
        -0.025751611217856407,
        -0.02986316755414009,
        -0.07397707551717758,
        -0.0031346615869551897,
        0.017369098961353302,
        0.022335514426231384,
        0.06320592015981674,
        0.051003050059080124,
        -0.0718596801161766,
        -0.016367265954613686,
        -0.021033428609371185,
        0.0765463262796402,
        0.02942410111427307,
        -0.029729733243584633,
        0.05950486660003662,
        0.007818624377250671,
        -0.05372295528650284,
        0.05697660148143768,
        -0.012217080220580101,
        -0.11308558285236359,
        -0.10107941925525665,
        0.008119242265820503,
        -0.07205653190612793,
        -0.009446035139262676,
        -0.013610592111945152,
        -0.05688759684562683,
        0.03331000730395317,
        -0.022302482277154922,
        0.02341652847826481,
        0.04017125815153122,
        -0.04535667970776558,
        0.0637066587805748,
        0.016218699514865875,
        0.048890620470047,
        0.01866861805319786,
        0.035723499953746796,
        -0.03831182047724724,
        0.01813860796391964,
        -0.010191204026341438,
        -0.0023731193505227566,
        -0.028122548013925552,
        0.01958383433520794,
        -0.08011696487665176,
        0.09197228401899338,
        0.010187658481299877,
        0.03513715788722038,
        -0.04637370631098747,
        -0.0727057158946991,
        0.09316598623991013,
        0.04790782928466797,
        -0.0010667070746421814,
        0.05652903765439987,
        -0.009031666442751884,
        -0.023320382460951805,
        -0.0005017941584810615,
        -0.03940141201019287,
        -0.06083383038640022,
        -0.009704936295747757,
        0.0397118516266346,
        -0.06888704001903534,
        0.004431862384080887,
        0.05119158700108528,
        -0.004240987356752157,
        -0.02661396749317646,
        0.030968867242336273,
        -0.09497267752885818,
        0.011511927470564842,
        0.05429237708449364,
        0.049803465604782104,
        0.026701880618929863,
        -0.030506178736686707,
        0.018176019191741943,
        0.007830657064914703,
        0.03625652939081192,
        -0.0316150039434433,
        -0.06588529795408249,
        0.013436570763587952,
        0.019366636872291565,
        -4.4002044935460524e-33,
        0.013877658173441887,
        -0.023040518164634705,
        0.11272770166397095,
        -0.04104568809270859,
        0.06631489843130112,
        -0.05987762287259102,
        -0.01015317253768444,
        0.06515979766845703,
        0.06867044419050217,
        0.006427561864256859,
        0.003332993946969509,
        0.01992746815085411,
        -0.056969430297613144,
        -0.028225917369127274,
        -0.10875260084867477,
        -0.06433435529470444,
        -0.01891150511801243,
        0.06553585827350616,
        0.036436088383197784,
        0.0020369733683764935,
        0.01110923197120428,
        0.04963558167219162,
        0.011567921377718449,
        0.08124414086341858,
        -0.028822336345911026,
        0.015728479251265526,
        0.01977066695690155,
        0.06569905579090118,
        0.11129102110862732,
        0.031477201730012894,
        0.023805972188711166,
        0.03304648399353027,
        -0.005890894215553999,
        -0.0913071259856224,
        -0.007486511021852493,
        -0.02645903266966343,
        0.052094966173172,
        0.014613237231969833,
        -0.08205050230026245,
        -0.13990674912929535,
        -0.04064008221030235,
        0.07154736667871475,
        -0.03292735666036606,
        -0.020202316343784332,
        -0.05330164358019829,
        -0.060850705951452255,
        0.0486355759203434,
        0.01909489743411541,
        -0.03869915381073952,
        0.07769212871789932,
        0.03703049570322037,
        -0.05501297116279602,
        0.10406316816806793,
        -0.04876131936907768,
        -0.00028980622300878167,
        0.015843847766518593,
        0.00893715675920248,
        -0.0007721763104200363,
        0.028627609834074974,
        -0.0004202209529466927,
        -0.021922409534454346,
        0.06121958792209625,
        -0.0058472310192883015,
        0.01095107663422823,
        -0.02240925282239914,
        -0.03008360229432583,
        0.09674759954214096,
        0.07246240228414536,
        -0.037228573113679886,
        0.01588832214474678,
        0.058573003858327866,
        0.06398530304431915,
        0.024155134335160255,
        -0.03308812528848648,
        0.001971602439880371,
        -0.04316462203860283,
        -0.02527860924601555,
        -0.06308171898126602,
        -0.08030162006616592,
        0.05063876509666443,
        -0.0564291849732399,
        0.05289719998836517,
        0.03783995658159256,
        0.0031072827987372875,
        0.06934799253940582,
        0.05335846170783043,
        0.04189487174153328,
        -0.010120745748281479,
        -0.040531083941459656,
        0.039856795221567154,
        0.021314194425940514,
        0.07937956601381302,
        0.02446310967206955,
        0.05343709513545036,
        0.04895377904176712,
        -5.3570442304362587e-08,
        -0.017276031896471977,
        0.04145180061459541,
        -0.019927415996789932,
        -0.03622381016612053,
        0.004219430964440107,
        -0.04426424950361252,
        0.015141037292778492,
        -0.04548360034823418,
        0.016623958945274353,
        -0.048432573676109314,
        0.06743630021810532,
        0.0045127770863473415,
        -0.037543050944805145,
        0.045616548508405685,
        0.03088231384754181,
        0.03974323719739914,
        -0.09530574083328247,
        0.06857713311910629,
        -0.06307782232761383,
        -0.012806111015379429,
        -0.004946913104504347,
        0.0089191272854805,
        0.1638593077659607,
        0.0716087594628334,
        0.008387639187276363,
        0.06740396469831467,
        0.018674053251743317,
        -0.004967608023434877,
        -0.04735732451081276,
        -0.029746463522315025,
        -0.04557722434401512,
        -0.0062764533795416355,
        -0.05858258530497551,
        0.013453276827931404,
        -5.112646613270044e-05,
        -0.05195736885070801,
        -0.06417274475097656,
        -0.021158041432499886,
        -0.02932325005531311,
        0.008089661598205566,
        0.03501057252287865,
        -0.02857343852519989,
        -0.052990250289440155,
        0.06415637582540512,
        -0.0028608422726392746,
        -0.012156292796134949,
        -0.07475215196609497,
        0.01565123349428177,
        -0.05724981799721718,
        -0.01279375422745943,
        -0.03362883999943733,
        -0.031542833894491196,
        -0.05601999908685684,
        -0.019748907536268234,
        0.03481076657772064,
        0.001777898520231247,
        -0.058003127574920654,
        0.20562633872032166,
        -0.014252426102757454,
        0.03949896991252899,
        -0.022754095494747162,
        -0.049893058836460114,
        0.07123132050037384,
        0.03443162515759468
    ]
}