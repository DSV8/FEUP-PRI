{
    "id": "l4UgZBs7ZGo",
    "title": "Lines of Light: How Analog Television Works",
    "channel": "Technology Connections",
    "channel_id": "UCy0tKL1T7wFoYcxCe0xjN6Q",
    "subscriber_count": 2460000,
    "upload_date": "2017-07-02T00:30:00Z",
    "video_url": "https://www.youtube.com/watch?v=l4UgZBs7ZGo",
    "category": "Science & Technology",
    "tags": [
        "TV",
        "television",
        "NTSC",
        "PAL",
        "how does TV work",
        "cathode ray tube",
        "CRT",
        "video",
        "analog"
    ],
    "views": 1236817,
    "likes": 42244,
    "comments_count": 2595,
    "description": "You can support this channel on Patreon!  Link below Have you ever wondered how old-school television worked?  It seems almost impossible for a device to make moving images without a computer being involved.  Yet analog television is very, very old.  How on Earth did it work?  Find out in this video.  All images used in this video are in the public domain, either due to age or the author's will.  If you like videos like this, I humbly ask that you hit that like button and subscribe!  I'm doing my best to keep videos like this headed your way.  You can support this channel through Patreon!  Find me here:",
    "description_links": [
        "https://www.patreon.com/technologyconnections"
    ],
    "transcript": "If youre watching something like, well like this, on a modern display, you probably dont think too much about what your device is doing to make this happen. Its not really that extraordinary in this modern world filled with computers and microprocessors. In fact, Im willing to bet you have a rough idea of how this works. But Ill explain anyway. If you get up close to a TV or monitor, you find theres a grid, made of millions of little squares called pixels. From far enough away, these pixels blend into each other, and our eyes and brains build a coherent picture. To actually create the image on the screen, each pixel can have some instructions sent to it to tell it how much light it should emit. A series of controller circuits work with millions of transistors to methodically give every one of these squares a specific brightness value 60 or 120 times a second, sometimes more often than that. The instructions are further divided into three separate values for red, green, and blue which when combined together can create practically any color you can think of. But have you ever wondered how old-school TV worked? Weve been sending video signals over the air for a very long time, in fact analog television predates World War II. There werent computer or logic circuits decoding number values then, in fact there werent even pixels. Yet, this somehow worked. How? What magic is going on to take the signal coming over this wire and turn it into a black and white image of me, all without a single digital circuit? To find out, lets make things really simple. Instead of looking at millions of pixels, lets look at just one. A single pixel is really just a point of light. Without using any digital circuitry, how can we tell the light what to do? Easy, by controlling how much power it gets. Heres an LED hooked up to a power supply. By simply varying how much voltage it gets, you can change how much light it emits. Using radio technology, its really easy to build a circuit that can control the brightness of this LED or another light source based on the strength of a signal transmitted over the air. Of course, this is clearly not television, but its at the core of what makes it work. See, we really suck at seeing things that happen quickly. Our eyes and brains are just no good at processing fast visual information. Thus, its really easy to trick our eyes into seeing something thats not really there. If you take a light source and move it very quickly, you no longer see a single light source, instead you see a continuous line that follow the path of the light. Our brains cant process the lights fast motion, and it just blurs together into a solid line. This phenomenon is called persistence of vision. Now, if you manipulate the voltage of the light while you move it, you can make patterns in the line. You can find a lot of toys that exploit persistence of vision. This old 20Q game works using this principle. A small circuit board with a few LEDs on it spins in a circle really fast, too fast for your eyes to keep track of. If the LEDs were lit up all the time, it would just appear to be a continuous circle. But the game uses sensors to track where the LEDs are, and turns each of them on and off at very specific times. By manipulating the brightness of the LEDs and timing it with their motion, it can draw simple text and graphics using just eight points of light. But a CRT television like this has only one point of light to work with. After all, this is 1920s technology, and multitasking wasnt really a thing yet. So first, what actually makes the light? Well, CRT stands for cathode ray tube. The name comes from cathode rays, which were discovered by Johann Hittorf in 1869. William Crookes had created these goofy tube things that were really important to early scientific discovery. He was able to evacuate nearly all the air from these tubes, which allowed electrons to move freely within them, though no one yet knew what electrons were. When electric current was sent through these tubes, something caused them to glow. Johann Hittorf was the first person to piece together that whatever was causing this phenomenon travelled in straight lines from the cathode, or negative electrode, observing how a stencil between the cathode and the surface of the tube cast a shadow. Eugen Goldstein gave them the name Cathode Rays, just like rays of sunlight. J J Thompson would later use these tubes to work out what these cathode rays were actually made of, and in doing so he happened to discover the electron. So good on him. Before we continue, SAFETY WARNING: Exploring the innards of a CRT television can be quite dangerous. A set as small as this can generate over a thousand volts through the flyback transformer, and the CRTs glass can store a lethal charge. I know what is and whats not OK to touch, and since you likely dont, dont try this at home. If youve ever messed around with antique radios youll have seen vacuum tubes, which are the precursors to transistors. These electronic components have the air evacuated from them so electrons can move freely, just like the crookes tubes. Using a heater filament to induce thermionic emission from a cathode, they can manipulate electric current in a bunch of ways. A television CRT is really a specialized vacuum tube that has had its top blown way up and out to form a screen. Its then mounted sideways in a cabinet, and your eyes stare at the front of it. Thats what brought about the phrase, watching the tube. And it also explains the name of this site. Because it has no air inside, it has to be pretty strong to counteract the force of the atmosphere always trying to crush it. Thats why larger tube TVs are so heavy--the glass needs to be quite thick on larger sets. Most of the tube is empty space with the meat and potatoes being at the very back. Here youll find the awesomely named electron gun. This component generates a stream of electrons and they are shot straight out to the front of the tube. The flyback transformer generates an extremely high voltage in the anode to attract the electrons to the front of the screen. Coating the inside surface of the tube is a special powder known as a phosphor. When the electrons sent from the gun hit the phosphor, it gets all excited and emits light, via fluorescence, but only in the spot the electrons are hitting it. Heres a working CRT with one of the critical components to television removed because we havent gotten that far. Dont worry, well get there. So, the CRT is doing a bang-up job producing a stream of electrons and theyre going straight to the front of the screen, and colliding with it to make it glow. And, this is the result. So fascinating. But hang on, theres more to it. The vast majority of the signal coming into this television is simply telling it how bright to make this point of light. Therefore, a signal that alternates between bright and dark will make this happen. Amazing. That doesnt do that much good. Ah, but you see, the point of light can be moved. One of the things Crookes and others noticed when mucking about with his tubes was that a magnetic field can bend an electron beam. In other words, you can use a magnet to alter the path the beam makes through the tube. Watch. Heres an ordinary strong magnet used for a nametag. When I move it around the neck of the tube, the point of light moves around the screen, also. Mind bending, more like beam bending, amiright? So then, here comes the other bit. This little bundle of wires is called the deflection yoke. This is responsible for moving the beam really really quickly, and fooling your eyes. The yoke is made of two electromagnets that surround the neck of the tube, and they work together to move the electron beam around in a set pattern. It does this by creating a fairly strong magnetic field which will deflect the beams path. First, Ill turn on the horizontal deflector. Now, rather than a point of light, we see a line. This line is being drawn on the screen thousands of times a second, way too fast for your eyes to notice. Just like the POV effect from the toy, if we carefully control how bright this line is as it moves left and right we can create patterns in the line like this. But the yoke contains another magnet that can move the beam up and down. Let me switch to that one. We now have a vertical line being drawn on the screen, and we can control its intensity just like the horizontal line to draw patterns. This vertical movement happens much more slowly than the horizontal movement, with the line only being drawn 60 times in a second. Now, since we can point the beam from left to right, as well as up and down, we can point it anywhere we want on the screen. Lets turn on both electromagnets at the same time. We now have an image on the whole screen. Pretty neat, huh? By carefully controlling the intensity of the beam over time, we can create a complete image. If you look really closely at a black and white television, you wont find pixels. Rather, youll find lines. See, the image is made of lines, in fact there are roughly 525 lines that make up the NTSC signal, and about 480 are visible on the screen. The deflection yoke is making a pattern on the screen called a raster, and in NTSC countries, its drawn on the screen 60 times a second. Theres a bit of a trick, though, because the screen is only COMPLETELY redrawn 30 times a second. See, as the raster is drawn, only every other line is filled in. This is called a field, and its the principle behind interlaced video. Thats the i in 1080i. Because not-a-lot of bandwidth is available, the whole screen can only reasonably be filled in 30 times a second, but this would be noticeable as flicker and could give many people headaches. By skipping every other line and then repeating the scan to fill in the rest, the screen is drawn from top to bottom 60 times a second, which was too fast for most people to perceive flickering. Also, it allowed for smoother motion, with the caveat that fast-moving objects would have less detail as only every-other line is filled in with each field (however that never proved to be a huge concern as its hard to see detail in fast moving objects, anyway.) Side-note: Its no coincidence that the 60 hz refresh rate matches the frequency of the AC electricity sent into homes, as the 60 hz sine wave coming from the socket powering the TV made for a convenient timing reference for vertical scanning. PAL countries, which have 50 hz electricity, have a television frame rate of 25 frames per second interlaced, with a scanning refresh rate of 50 hz. So, tv framerates are what they are because convenience. So now that we have the means to generate this raster, well how does that make a picture? Well, its just like the POV effect from the toy, only its a helluva lot faster and the light moves in two dimensions. Lets slow down time and see how the TV builds an image. Lets say we want to show this on the screen. At the start of a field, the deflection yoke is pointing the electron beam at the top left of the screen. As it moves towards the right, the beam changes its intensity along with how bright the image should be, so at a point along the line thats bright, it produces a lot of electrons, and thus that point on the screen glows brightly. Dark parts send little to no electrons. When the beam gets to the end of the line, the deflection yoke almost instantly pulls it back to the left-hand side and starts the next line. But remember, it skipped a line. This process repeats until it reaches the bottom of the screen. Then the yoke flings the beam back to the top, and we start again filling in the alternate lines. This happens way too fast for us to notice it, so it appears like a fully illuminated screen. One thing to note is that the vertical deflection isnt happening in steps. Rather its a constant downward motion. This means that the horizontal lines are actually slightly slanted downward to the right. To counteract this, the deflection yoke is mounted to the tube ever so slightly crooked, so the lines drawn on the screen are actually level. The constant downward travel is also how the interlacing is accomplished. The next line will start at the same height as the end of the first, which creates a gap. You may remember an extremely high-pitched noise coming from a TV set whenever it was turned on. This noise actually came from the deflection yoke and the electronics that drive it. In NTSC televisions, the horizontal deflection occurred 525 times per frame, and there are 30 frames in a second, which means the electron beam is being deflected left-and-right 15,750 times per second. In PAL countries, the framerate is only 25 frames per second, but 625 lines are drawn with each frame, which works out to 15,625 deflection per second. The yoke and the flyback transformer, along with some other components, actually vibrate at this frequency ever so slightly, which produces audible noise. This is what it sounds like. Adults over the age of 25 or so cant hear this sound, as its at the upper limit of human hearing range, which gradually diminishes with age. So for those viewers, sorry. When it comes to actually producing an image, the trickiest part is matching that raster to an incoming television signal. To help with this, the TV signal contains triggers which assist the TV in grabbing hold of the image and keeping it in one place. This Sony TV is correctly tuned to channel 3, which is currently displaying this video that youre hearing right now. But theres absolute nonsense on the screen. What gives? Well, the TV is generating its own raster, and right now its not synchronized with the raster coming into the TV. Youre seeing all of the image, but each part is in the wrong place because its not lined up. Here, to show you what the TVs looking for, lets fade to white. Youll notice that there are a ton of black gaps swirling around what should be an entirely white screen. These gaps are the horizontal blanking intervals between individual scanlines. When horizontal hold is properly adjusted, electronics in the TV can see these gaps and line them up. Hold up, how can the set tell the difference between the blanking intervals and a black spot on the screen? Well, it can tell them apart because the blanking intervals are actually BLACKER THAN BLACK. No, really. Heres a one line of a television signal drawn on a graph. These parts at the ends are the blanking intervals between scan lines. They are the lowest parts of the graph because their amplitude is near zero. Here is the actual start of the scan line. The higher the line goes, the brighter that part of the scan line will be drawn on the screen. Makes sense, but black is all the way up here. Television sets are calibrated to not fire the electron gun at amplitudes at or below this amount, so to they eye, any amplitude below this point wont be visible, but the electronics can clearly tell blanking intervals from signals. The blanking interval isnt there just to provide a reference for the beginning and end of a scan line, its also there prevent anything from being drawn on the screen as the deflection yoke sweeps the electron beam back to the left-hand side before the start of the next line. The TV just has to line these low points up by catching them at the beginning of each scan line, and then theyll fall into the TVs own raster. Everything is hunky dory. So then, when I adjust the horizontal hold, you can see that this moves the blanking intervals closer to each other, and eventually, the image snaps into place. well, sort of. Now the image is rolling, its continually moving downwards. Ah, see, we have only synchronized the television's raster with the horizontal components of the signal. Without a reference as to what starts a field scan, the pictures just gonna roll around like this. See that hunk of black between my head and my waist? Thats the vertical blanking interval, which is little more than a bunch of empty scan lines. Just like the horizontal intervals, it allows the deflection yoke time to get back to the top of the field. Again, this is BLACKER THAN BLACK, and it allows the television to hold onto the start of each field and keep them in one place. The vertical blanking interval also contains some special pulses to differentiate between the odd and even numbered fields. So, ill adjust the vertical hold, and eventually, the frame snaps into place, and you get a truly stable image. Very intentionally, the CRT is scanning outside the borders of the face of the tube. This is called overscan, and its done to hide the blanking intervals as well as just ensure the whole screen is being used. On this set, you can see how the scan extends beyond the tube itself when looking from behind. This unseen overscan area was used later to add closed captioning into television broadcasts. On one of the lines that make up the VBI, alternating white-black bits created a barcode of sorts that contained digital text information. A decoder inside the television set could read this data from that line, and when enabled place text graphics on top of the image. I think thats pretty friggin nifty. As far as audio, well thats really simple. Thats nothing more than simple FM radio built into the TV, and each channel has an audio signal being transmitted at a set offset frequency from the video source. Since the signals are transmitted together, they are always in sync. So, thats how these old things work. But theres a lot more to explore. For one, how did television cameras actually create the signal that drives this TV? And who were the people responsible for inventing it? What about color? Well explore that in a later episode, along with the precursor to CRT television, mechanical television, so be sure to subscribe to Technology Connections. If you liked this video, I humbly ask that you hit that like button and maybe leave a comment. Im doing my best to keep videos like this headed your way. Thanks for watching!",
    "transcript_keywords": [
        "line",
        "screen",
        "light",
        "television",
        "tube",
        "lines",
        "beam",
        "image",
        "electron beam",
        "deflection yoke",
        "CRT",
        "scan line",
        "CRT television",
        "electrons",
        "yoke",
        "point",
        "signal",
        "times",
        "drawn",
        "deflection"
    ],
    "transcript_entity_values": [
        "zero",
        "Crookes",
        "20Q",
        "eight",
        "William Crookes",
        "J J Thompson",
        "VBI",
        "CRT television",
        "roughly 525",
        "30",
        "only one",
        "POV",
        "525",
        "Sony",
        "the age of",
        "two",
        "1920s",
        "1869",
        "3",
        "Johann Hittorf",
        "about 480",
        "Cathode Rays",
        "625",
        "AC",
        "thousands",
        "World War II",
        "first",
        "one",
        "NTSC",
        "Technology Connections",
        "only 25",
        "millions",
        "CRT",
        "One",
        "25",
        "a thousand volts",
        "120",
        "a ton",
        "Eugen Goldstein",
        "First",
        "second",
        "60",
        "60 hz",
        "15,750",
        "50 hz",
        "three",
        "15,625"
    ],
    "transcript_entity_types": [
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "PERSON",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "ORG",
        "DATE",
        "CARDINAL",
        "DATE",
        "DATE",
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "PRODUCT",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "EVENT",
        "ORDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "QUANTITY",
        "CARDINAL",
        "QUANTITY",
        "PERSON",
        "ORDINAL",
        "ORDINAL",
        "CARDINAL",
        "QUANTITY",
        "CARDINAL",
        "QUANTITY",
        "CARDINAL",
        "CARDINAL"
    ],
    "vector": [
        -0.05451921373605728,
        -0.03849406540393829,
        0.02096441574394703,
        -0.08667652308940887,
        0.05108373612165451,
        -0.0602593794465065,
        -0.007945255376398563,
        -0.019593093544244766,
        0.038656316697597504,
        -0.016343407332897186,
        -0.014987284317612648,
        0.026484878733754158,
        -0.014155106619000435,
        0.03421924635767937,
        -0.0954258069396019,
        -0.06484156101942062,
        0.051159121096134186,
        -0.042548127472400665,
        -0.0712466910481453,
        0.06701966375112534,
        0.0918121486902237,
        -0.12925969064235687,
        -0.03826301917433739,
        -0.04786938056349754,
        0.04975699633359909,
        0.02387835644185543,
        -0.013567423447966576,
        -0.0003497467841953039,
        -0.008243086747825146,
        -0.0672413632273674,
        0.0260589811950922,
        0.05080682411789894,
        0.019230298697948456,
        0.009851996786892414,
        -0.06672193855047226,
        0.004594398662447929,
        0.05569535493850708,
        0.014803048223257065,
        -0.04295028746128082,
        0.02980804815888405,
        0.030473222956061363,
        -0.06496163457632065,
        0.04685698449611664,
        -0.059429947286844254,
        0.007154819555580616,
        -0.0029530844185501337,
        0.08461446315050125,
        -0.06940162926912308,
        -0.0209543127566576,
        -0.09711036086082458,
        -0.14953139424324036,
        -0.023134607821702957,
        -0.01723688840866089,
        0.009399746544659138,
        -0.012462308630347252,
        0.016078218817710876,
        0.06987713277339935,
        -0.01388300210237503,
        0.017528600990772247,
        0.010919861495494843,
        0.11767567694187164,
        -0.015855975449085236,
        -0.015929270535707474,
        0.063868947327137,
        -0.01815749891102314,
        -0.023252181708812714,
        0.052906062453985214,
        -0.04612506181001663,
        0.06654185056686401,
        -0.10614991188049316,
        -0.0874737873673439,
        0.060607828199863434,
        0.0038878917694091797,
        -0.0164155513048172,
        0.031742822378873825,
        -0.04910925403237343,
        0.01491568610072136,
        -0.05141709744930267,
        0.08128099143505096,
        -0.028651276603341103,
        0.06180131435394287,
        -0.057833001017570496,
        -0.08798255771398544,
        0.05265222117304802,
        -0.020375661551952362,
        0.06063181906938553,
        0.015258045867085457,
        0.0195607952773571,
        0.03291459381580353,
        -0.06875971704721451,
        -0.10642257332801819,
        0.06451041996479034,
        -0.020223692059516907,
        0.029357433319091797,
        0.041078947484493256,
        -0.0772208422422409,
        0.007279876619577408,
        -0.045331668108701706,
        0.040259357541799545,
        0.052172183990478516,
        0.04281263425946236,
        0.006606234237551689,
        0.02905202843248844,
        0.0032420509960502386,
        0.0037383909802883863,
        -0.07236907631158829,
        0.011283734813332558,
        0.1043618693947792,
        0.04353851452469826,
        0.06954282522201538,
        -0.05808955058455467,
        0.0222626905888319,
        -0.07931619882583618,
        0.043233487755060196,
        -0.013815506361424923,
        -0.02318117581307888,
        -0.0132316704839468,
        -0.004432005807757378,
        -0.001638116198591888,
        -0.0992531105875969,
        0.027746252715587616,
        -0.07148206979036331,
        -0.1026291698217392,
        -0.0314033105969429,
        0.13280591368675232,
        -0.04755077511072159,
        0.005090785678476095,
        3.20023120755186e-33,
        -0.007948564365506172,
        0.07650935649871826,
        -0.0077014584094285965,
        0.04857989400625229,
        0.03511718660593033,
        0.050706569105386734,
        -0.041784029453992844,
        0.044138118624687195,
        0.08660190552473068,
        0.037545591592788696,
        0.07893658429384232,
        0.012250799685716629,
        -0.03658009693026543,
        0.14116881787776947,
        0.03814076632261276,
        -0.06113039329648018,
        -0.03218166530132294,
        -0.07638876885175705,
        -0.03320293501019478,
        0.0032620630227029324,
        0.03176750987768173,
        -0.011904747225344181,
        -0.020801939070224762,
        -0.06048659607768059,
        -0.03822628781199455,
        -0.03427561745047569,
        -0.08510563522577286,
        -0.002885695779696107,
        0.07039361447095871,
        -0.020078100264072418,
        -0.007794683799147606,
        0.03670886904001236,
        -0.029106272384524345,
        -0.05373392999172211,
        0.0056681097485125065,
        -0.05528363585472107,
        0.009137348271906376,
        -0.06810885667800903,
        0.026055749505758286,
        0.07009571045637131,
        -0.005164564587175846,
        0.06190262362360954,
        -0.04146597906947136,
        -0.01758701354265213,
        0.016448959708213806,
        0.038442302495241165,
        0.09807747602462769,
        0.05700401961803436,
        -0.055407945066690445,
        0.04847769811749458,
        0.03293117135763168,
        -0.03799336031079292,
        -0.03706131502985954,
        -0.07542107254266739,
        0.049544867128133774,
        0.04624763876199722,
        -0.0465950183570385,
        -0.052028071135282516,
        0.05095050111413002,
        0.0035118674859404564,
        0.030727576464414597,
        0.004632295109331608,
        0.020436584949493408,
        0.06332485377788544,
        -0.10683828592300415,
        -0.016314320266246796,
        0.10171998292207718,
        0.0472990982234478,
        -0.04264778271317482,
        0.06500294059515,
        -0.010026599280536175,
        0.026439188048243523,
        -0.05017484724521637,
        -0.12035132199525833,
        0.0224391371011734,
        0.02339031733572483,
        -0.07427415996789932,
        0.030140236020088196,
        -0.0013561106752604246,
        0.00026434939354658127,
        0.02675653249025345,
        -0.06299459934234619,
        0.011730409227311611,
        0.0011610366636887193,
        0.03213708847761154,
        0.043167389929294586,
        -0.01853278838098049,
        -0.0802905261516571,
        0.0018248663982376456,
        -0.0583738349378109,
        -0.04224719479680061,
        -0.05405360087752342,
        -0.037004370242357254,
        -0.008084782399237156,
        -0.003726581810042262,
        -5.275564279876701e-33,
        -0.01460852101445198,
        0.042345501482486725,
        -0.014709370210766792,
        -0.018665378913283348,
        -0.031271014362573624,
        -0.05359185114502907,
        0.006507454439997673,
        0.020931381732225418,
        0.062010593712329865,
        -0.0627228170633316,
        -0.005585554521530867,
        -0.024283455684781075,
        -0.045642927289009094,
        -0.0004223881405778229,
        -0.09828952699899673,
        -0.05846389755606651,
        0.03416658937931061,
        -0.041218072175979614,
        -0.09763167053461075,
        -0.03316311910748482,
        0.04694582149386406,
        0.05081940442323685,
        -0.039677396416664124,
        0.011012391187250614,
        0.06633380055427551,
        0.037960536777973175,
        0.01821032725274563,
        0.07578961551189423,
        0.012402040883898735,
        0.07981199026107788,
        -0.006584254093468189,
        -0.06998927891254425,
        0.0710085853934288,
        -0.026434749364852905,
        0.009117056615650654,
        0.0658494085073471,
        0.0931655690073967,
        -0.01982763037085533,
        -0.04899950325489044,
        -0.13187217712402344,
        0.02717636153101921,
        0.05530102923512459,
        -0.00369214522652328,
        -0.04414195939898491,
        -0.011847139336168766,
        0.01267804205417633,
        -0.05389353260397911,
        0.026295214891433716,
        -0.07076448947191238,
        0.04665592685341835,
        0.06440991908311844,
        0.04794822633266449,
        0.0034150565043091774,
        -0.08739979565143585,
        0.01183237973600626,
        0.01368904858827591,
        -0.02942749299108982,
        0.08736485987901688,
        0.08935648947954178,
        -0.011504924856126308,
        0.011207347735762596,
        -0.06967228651046753,
        -0.1099468469619751,
        -0.05248861014842987,
        -0.010813762433826923,
        0.06912907212972641,
        0.030778340995311737,
        0.03457685932517052,
        -0.006868948694318533,
        0.04654311761260033,
        0.03483464941382408,
        0.02809937112033367,
        -0.001635597669519484,
        -0.066314697265625,
        0.03946704417467117,
        0.012961992993950844,
        -0.015318259596824646,
        0.009964942932128906,
        -0.008734948933124542,
        0.049560897052288055,
        -0.03826333209872246,
        -0.03300251439213753,
        0.10495579242706299,
        -0.025506995618343353,
        0.03729214146733284,
        0.041282929480075836,
        -0.018002880737185478,
        -0.036563169211149216,
        -0.03718935698270798,
        0.03458819165825844,
        -0.009235205128788948,
        0.026219630613923073,
        -0.013314000330865383,
        0.015587916597723961,
        0.09451121091842651,
        -5.344745090951619e-08,
        0.007247282657772303,
        0.04309273511171341,
        0.02906115911900997,
        -0.05281733348965645,
        -0.028256772086024284,
        -0.0846729427576065,
        0.08544948697090149,
        -0.041884645819664,
        0.06385424733161926,
        -0.12075269967317581,
        -0.03169374540448189,
        0.034979671239852905,
        -0.014103561639785767,
        0.0780486986041069,
        0.06814561039209366,
        0.0431346595287323,
        -0.0575774684548378,
        -0.04664145037531853,
        -0.038450922816991806,
        0.05466347187757492,
        -0.010832262225449085,
        -0.049059752374887466,
        0.0646531954407692,
        0.0610220730304718,
        0.005254379473626614,
        0.06029164791107178,
        0.016361868008971214,
        0.009147499687969685,
        -0.008219403214752674,
        -0.029211267828941345,
        -0.013233479112386703,
        -0.010602317750453949,
        0.0028899055905640125,
        -0.0015533093828707933,
        0.03455165773630142,
        -0.04754170775413513,
        -0.04310370981693268,
        -0.05810379981994629,
        0.02085573785007,
        -0.019153455272316933,
        -0.052831020206213,
        -0.15514792501926422,
        0.01687326654791832,
        0.01756395399570465,
        0.04527195915579796,
        0.02371608279645443,
        0.005674354266375303,
        -0.0653846487402916,
        -0.012461845763027668,
        0.011153203435242176,
        0.04943845048546791,
        0.07250669598579407,
        -0.009096530266106129,
        -0.04089069366455078,
        0.06578592956066132,
        -0.06841082125902176,
        0.047703128308057785,
        0.02983003668487072,
        -0.015587229281663895,
        0.07618144899606705,
        0.036451131105422974,
        0.031139731407165527,
        -0.015823982656002045,
        0.021418515592813492
    ]
}