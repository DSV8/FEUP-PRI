{
    "id": "K1bMSPje6pw",
    "title": "Kali Linux: Hacking Networks Part 1",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2019-10-28T21:09:19Z",
    "video_url": "https://www.youtube.com/watch?v=K1bMSPje6pw",
    "category": "Science & Technology",
    "tags": [
        "kali linux",
        "kali linux tutorial",
        "kali linux install",
        "kali linux hacking tutorials playlist",
        "kali linux basics",
        "kali linux tutorial for beginners",
        "kali linux 2019",
        "kali linux 2020",
        "kali linux hacking tutorials",
        "ethical hacking",
        "ethical hacking tutorial",
        "ethical hacking free course",
        "ethical hacking course",
        "how to become a hacker",
        "ccna",
        "ccna 200-301",
        "linux tutorial",
        "ceh",
        "oscp",
        "hacker",
        "hacking",
        "cisco training",
        "ine",
        "cbt nuggets",
        "ccna study",
        "kali",
        "yersinia",
        "whitehat",
        "whitehat hacking"
    ],
    "views": 2909224,
    "likes": 78471,
    "comments_count": 2127,
    "description": "It's so easy to hack badly configured networks using Kali Linux! Make sure you have configured your networks securely! Otherwise, look at how simple it is to hack networks using Kali Linux running on a Windows 10 computer. Applications like Yersinia make hacking with Kali Linux super easy! It's important that you as a network professional know how to protect networks from hackers. Even the new Cisco CCNA 200-301 exam covers some of these hacking topics. Don't just learn the theory of hacking, learn how to hack practically.   In this Ethical Hacking with Kali Linux playlist, I'm going to show you step by step how to hack and protect networks. This is white-hat hacking, not black-hat -  in other words this is about teaching you Ethical hacking to help you better secure your networks!  In this video I'll show you how to get started with Yersinia and hack CDP and Spanning Tree Protocol (STP). In subsequent videos I'll show you how to hack other protocols.  Menu: Overview: 0:00 Yersinia Overview: 0:58 Install Yersinia: 3:08 Yersinia options: 4:07 Run Yersinia: 4:40 Use Putty to view Switch configuration: 5:38 Bridge Kali Linux to the physical Ethernet network: 10:28 CDP flooding: 11:40 Spanning Tree (STP) hacking: 13:49  ====================== Previous Video: ====================== Kali Linux installation video:   ====================== CCNA content: ====================== Free CCNA content:   CCNA course:   kali linux Hacking Ethical hacking  EVE-NG GNS3 VIRL Packet Tracer 10x Engineer CCNA Cisco Devnet Associate  CCNP Enterprise CCNP Security CCNP Data Center CCNP Service Provider CCNP Collaboration Cisco Certified Devnet Professional Cisco Certified Network Professional  LPIC 1  LPIC 2 Linux Professional Institute LX0-103 LX0-104  XK0-004   Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   ======================== Switch configuration: ========================  c2960-CG# sh run Building configuration...  Current configuration : 2984 bytes ! version 15.0 no service pad service timestamps debug datetime msec service timestamps log datetime msec no service password-encryption ! hostname c2960-CG ! boot-start-marker boot-end-marker ! enable password cisco ! no aaa new-model ! ip dhcp pool vlan1  network 10.1.1.0 255.255.255.0  default-router 10.1.1.254  dns-server 10.1.1.254 ! ip dhcp pool vlan2  network 10.1.2.0 255.255.255.0  default-router 10.1.2.254  dns-server 10.1.2.254 ! ! ! ! ! ! spanning-tree mode pvst spanning-tree extend system-id ! ! ! ! ! ! ! ! ! vlan internal allocation policy ascending ! ! ! ! ! ! ! ! ! ! ! interface GigabitEthernet0/1 ! interface GigabitEthernet0/2  switchport access vlan 2  switchport mode access  spanning-tree portfast ! interface GigabitEthernet0/3 ! interface GigabitEthernet0/4 ! interface GigabitEthernet0/5 ! interface GigabitEthernet0/6 ! interface GigabitEthernet0/7 ! interface GigabitEthernet0/8 ! interface GigabitEthernet0/9 ! interface GigabitEthernet0/10 ! interface Vlan1  ip address 10.1.1.254 255.255.255.0  no ip route-cache ! interface Vlan2  ip address 10.1.2.254 255.255.255.0  no ip route-cache ! ip http server ip http authentication local ip http secure-server ! ! ! ! line con 0 line vty 0 4  password cisco  login  transport input all line vty 5 15  login ! end   ========================  #kalilinux #ethicalhacking #hacker",
    "description_links": [
        "https://youtu.be/AnwgxRtWXLI",
        "https://www.youtube.com/playlist?list=PLhfrWIlLOoKM3niunUBTLjOR4gMt_uR_a",
        "http://bit.ly/2PmTVPD"
    ],
    "transcript": "- In this video I'm gonna show you how to hack Cisco switches using Kali Linux. In a previous video, I showed you how to get Kali Linux downloaded and installed on a Windows 10 computer. So have a look at the video which I've linked here or below. If you haven't got Kali Linux installed and running, I basically show you how to download a prebuilt version of Kali Linux and import it into VMware Workstation Player, which is free software that allows you to run Kali Linux on your Windows 10 computer. (upbeat music) Now before we get started, please consider subscribing to my YouTube channel. Please like this video, if you enjoy it, and please click on the bell to get notifications when I post a new video. All right, without further ado, let me show you how to hack Cisco networks. In this video I'm gonna demonstrate the use of Yersinia, which is a framework for performing layer 2 attacks. It allows you to attack multiple network protocols, including Spanning Tree, CDP or Cisco Discovery Protocol, DTP or Dynamic Trunking Protocol, DHCP, HSRP, 802.1q, 802.1x, ISL and VLAN Trunking Protocol or VTP. So basically this application, allows you to hack multiple protocols, in Cisco networks. Doesn't just apply to Cisco networks, but some of these protocols such as CDP, DTP, and HSRP are Cisco proprietary protocols. So this application is really geared for hacking Cisco networks. But you could use it for hacking other protocols in, networks that have, other vendor devices in it. Cisco is the biggest networking vendor in the world. So, Cisco switches and Cisco routers will be found in many, many corporate environments around the world. So I'm gonna demonstrate how to hack Cisco devices using Yersinia running in Kali Linux. Now in this basic network, I've got a Cisco switch, this is a Catalyst 2960CG switch. The reason I'm using a small switch like this is it's fan less so it doesn't make a lot of noise. I've got a Windows 10 laptop, that I've connected physically to the ethernet switch on port one. I've got a MacBook connected on port two. These devices are connected via ethernet cables to the switch. I've also connected to the console of the switch using a USB connection. In this example I'm also controlling both of those devices from my local Mac. It just makes it easier to do the recordings. So I've got the connection to the MacBook and I'm controlling that, via VNC, and I'm also controlling the Windows computer via VNC. The Windows computer once again, is running Kali Linux within VMware Workstation Player. Okay, so I'm gonna open up a terminal, and I'm going to type y-e-r-s tab, and you'll notice nothing happens. That's because this application is no longer installed, by default in this latest release of Kali Linux. So I'm gonna type apt-get update to update references, on, this Kali Linux host. And then I'm gonna say, apt get install yersinia. So I'm basically installing this application, on Kali Linux. It used to be installed by default but in this release is no longer installed. The version of Kali Linux that I'm using is 2019.3. You simply need to wait now for the application to install. Okay so it's now installed, so I'll clear the screen, and notice now when I type y-e-r-s tab, the command auto completes, and I can press dash or hyphen h to get help about the application. So we told that we can get to the application version number by using uppercase v, h displays this help screen, G gives us a graphical user interface, I is interactive, upper case d is Daemon mode, lowercase d is Debug mode. We've also got some logging options. So what I'm gonna type is yersinia -G to get a graphical user interface. Now we told that this is an Alpha release, that's fine, for our example. Notice once again that multiple protocols are supported, CDP, DHCP, 802.1q, 802.1x, DTP, HSRP, ISL, MPLS, STP, VTP, and we've got a log here. Now in this video, I'm assuming that you have knowledge of these protocols. To be able to hack networks, you need to have an understanding of the protocols that network devices use. Now if you don't know what those protocols are, have a look at some of the videos that I've linked below, or have a look at my course, in my CCNA course, I teach a lot of these protocols. You don't have to take my course if you don't want to, have a look at other videos on YouTube or, other CCNA courses, but for this video I'm assuming that you have knowledge of these protocols. Now in this example, I'll start Putty. Because what I wanna do is connect to the console of the Cisco switch and show you how the switch has been configured. Before I do that, we need to know which console port to use. So I'm gonna go to device manager, and here I can see that USB Serial Device (COM3) is being used. So I'm gonna specify COM3 in Putty and click Open. And now I'm connected to this switch. This switch has not been configured with best practices and that's a problem. Because with hacking tools like Kali Linux, if you don't configure, a network device properly, hackers can get access to your network very, very easily. So if I typed sh run on this switch, it's got two DHCP pools configured. Port one on the switch is configured in VLAN1 and port two is configured in VLAN2. In other words this laptop is in a different VLAN to that laptop, but we're not going to let that stop us. Scrolling down, you can see that interface gigabit 0/1 is configured with defaults, very bad idea. You don't wanna use default configurations on a switch port on a switch. You should at least shut down, ports on a switch that are not in use, or put them in a separate VLAN. Or stop protocols like DTP being used. So as an example, show int g0/1 switchport. What you'll notice, is negotiation of trunking is on, current administrative mode is dynamic auto. We've got DTP enabled, on this port. That's something we don't wanna do. So this command show interface port number switch port shows us that the port is configured in VLAN1, but DTP is enabled on that port. So again, sh run int g0/1, that's the configuration of port one, here's the configuration of port two. I'll put the switches configuration below the video, if you wanna have a look at the switches configuration offline. But apart from that, this switch also doesn't have routing enabled. That means that there's no routing, from one VLAN to another on this switch. At the moment VLAN1 is down because I haven't plugged in my Kali Linux PC. So let me do that. And what we should notice is the port on the switch comes up and it does. So sh ip int brief. This VLAN is still down, but we can see that, interface gigabit 0/1 has come up. So after a while, that SVI or switched virtual interface should come up. And there you go, it's now come up. So VLAN1 and VLAN2 are configured on the switch. The switch is acting as a DHCP server and allocating IP addresses, to devices, in the relevant VLANs, sh vlan, shows us that, gigabit 0/1 is in VLAN1, gigabit 0/2 is in VLAN2. The MacBook has been allocated to this IP address. 10.1.2.1 by the DHCP server. We can see that on the switch by tapping sh ip dhcp bindings. So that IP address has been allocated to the MacBook. According to the switch this IP address has also been allocated and that's probably my Windows computer. Change the font size here to make it easier to see. So command prompt, ipconfig. This Windows computer, has been allocated this IP address. But the PCs won't be able to ping each other because IP routing is disabled on the switch. There's no routing from one VLAN to another in this topology. So on my MacBook as an example, if the MacBook tries to ping the Windows computer it can't do that, because IP routing is disabled. There's no routing between the VLANs, but that's not gonna stop us once again. Now currently the Kali Linux host, is configured to use NAT. And it's been using, my wireless connection to get access to the internet. This little network here doesn't have any internet access. So what I'm gonna do is I'm going to bridge, the, Kali Linux host, to the Realtek USB Gigabit Ethernet Family Controller. So I'm gonna bridge it to this ethernet connection, and click OK. So in Kali Linux, I'll open up another terminal window, ifconfig will show us the IP address, at the moment no IP address has been allocated. Do that command again, and notice 10.1.1.3 has been allocated. So on the switch, sh ip dhcp bindings, this IP address has been allocated to the Kali Linux host. So that means I've got three devices in this topology, physical Windows PC, MacBook, plus Kali Linux virtual computer. So let's use Kali now to hack the network. Okay so, it's already picked up that it's connected to a switch through CDP. So we already know that we connected to a Cisco switch. On the Cisco switch, sh cdp nei, it doesn't see any neighbors at the moment, but what we could do, is launch an attack, and send a CDP packet and click OK. In the log, we can see that an attack was launched and it's now finished. So back on the switch sh cdp nei, still don't see a neighbor. So let's flood the CDP table of that switch. So as you can see, a lot of CDP packets are being sent out, on the switch sh cdp nei, notice we suddenly have, a huge amount of, CDP neighbors, and you can see the platform here is Yersinia. So, we are flooding the CDP neighbor table on the switch. That isn't really a fantastic attack, but it just shows you, that by a simple attack, I can flood the CDP table of that switch. Notice how many packets are being sent out. After a short while you'll see this has increased dramatically. The CPU on that laptop is going crazy. The lights on that switch are going mad. I am essentially flooding, this switch, with a lot of neighbor relationships. So if I typed sh cdp traffic, you'll notice a lot of input packets are being received by the switch. A lot of attack packets. To stop this, go to Actions, List Attacks, and I'm gonna say stop all attacks. If you wanna shut the program down and stop the attack, click Exit, but you probably wanna go to Actions, List Attacks, and then you can shut down the attacks. Now because this network is small, I mean there's only one switch in this topology, I can't show you large scale attacks, but I'll continue showing you some basic attacks which you can then apply to larger topologies, I'll show you larger topologies in separate videos. Now very basic, attack that can be used is, attacking Spanning Tree. At the moment in this network sh spanning-tree shows me that the switch is the root of the topology. Gigabit 0/1 is forwarding on VLAN1. Switch is the root for VLAN1. For VLAN2, switch is also the root. So VLAN2 switch is the root. Port that's forwarding is gigabit 0/2. I only have two ports currently up in this topology. Port one is in VLAN1, we can see that with the show vlan brief command. So gigabit 0/1 is currently in VLAN1, gigabit 0/2 is configured in VLAN2. I only have two ports, plugged into the switch. And again, port one is in VLAN1, port two is in VLAN2, show spanning-tree root shows us that, the current switch is the root for VLAN1 and VLAN2, we can see the root cost is zero for both those VLANs. And again we can use the show spanning-tree command to see that the switch is the root for VLAN1 and VLAN2. But let's change that. So I'm gonna launch an attack, in this case it's a spanning tree attack. We going to claim root role, and click OK. So Yersinia has picked up that there's a switch in the topology, but we going to claim to be the root. So on the switch, show spanning-tree, notice for VLAN1, the switch is no longer the root, it has a cost of four to get to the root. We can see that gigabit 0/1 is a root port with a cost of four. Previously, the port was a designated port when, the switch was the root. So we've changed the role, to root, this is the port that the physical switch is gonna use to get to the root bridge which is currently Kali Linux. For VLAN2 we can see that the switch is root, notice gigabit 0/2 is a designated port. Now, I won't have time to go through all the protocols. There's a lot of things you can do just with Yersinia within Kali Linux. I'll show you other hacks in subsequent videos, but please if you enjoyed this video, subscribe to my YouTube channel, like the video and click on the bell to get notifications when I post a new video. (upbeat music)",
    "transcript_keywords": [
        "Kali Linux",
        "switch",
        "Kali Linux host",
        "Kali",
        "Linux",
        "Cisco",
        "Cisco switch",
        "port",
        "CDP",
        "Cisco networks",
        "Kali Linux installed",
        "root",
        "protocols",
        "Kali Linux downloaded",
        "Windows",
        "running Kali Linux",
        "show",
        "run Kali Linux",
        "hack Cisco",
        "video"
    ],
    "transcript_entity_values": [
        "Gigabit 0/1",
        "0/2",
        "STP",
        "Yersinia",
        "this Kali Linux",
        "VNC",
        "three",
        "USB",
        "0/1",
        "MacBook",
        "VLAN1",
        "Putty",
        "Actions",
        "Cisco",
        "MPLS",
        "Cisco Discovery Protocol",
        "two",
        "four",
        "vlan",
        "CCNA",
        "only one",
        "2",
        "CPU",
        "zero",
        "NAT",
        "YouTube",
        "Alpha",
        "SVI",
        "VLAN",
        "Dynamic Trunking Protocol",
        "Catalyst 2960CG",
        "MacBook",
        "Mac",
        "VLAN1",
        "IP",
        "Spanning Tree",
        "Kali",
        "VMware Workstation Player",
        "one",
        "cdp",
        "HSRP",
        "VLAN1",
        "the Realtek USB Gigabit Ethernet Family Controller",
        "2019.3",
        "VLAN2",
        "Port one",
        "Cisco",
        "CCNA",
        "Windows 10",
        "cdp nei",
        "Kali Linux",
        "COM3",
        "VLAN2",
        "Windows",
        "DHCP",
        "VTP",
        "YouTube",
        "ISL",
        "CDP",
        "DTP"
    ],
    "transcript_entity_types": [
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "PERSON",
        "PERSON",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "NORP",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "LOC",
        "ORG",
        "ORG",
        "PRODUCT",
        "PRODUCT",
        "FAC",
        "PERSON",
        "PERSON",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "GPE",
        "ORG",
        "CARDINAL",
        "PERSON",
        "FAC",
        "GPE",
        "ORG",
        "PRODUCT",
        "ORG",
        "PERSON",
        "GPE",
        "GPE",
        "PRODUCT",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "ORG",
        "ORG"
    ],
    "vector": [
        -0.028546620160341263,
        0.02785235457122326,
        -0.06160833314061165,
        -0.03757930174469948,
        -0.03273533657193184,
        0.044259801506996155,
        0.003475519362837076,
        -0.021193288266658783,
        -0.054938748478889465,
        0.007815934717655182,
        0.023769306018948555,
        0.021626651287078857,
        -0.054118938744068146,
        -0.02764052338898182,
        -0.03331473097205162,
        -0.00921868346631527,
        -0.024985481053590775,
        0.05528532341122627,
        -0.003179464489221573,
        -0.06270540505647659,
        -0.012488583102822304,
        -0.1094425693154335,
        0.004556418862193823,
        -0.007787830661982298,
        -0.03258810192346573,
        0.01803227700293064,
        0.04761451855301857,
        0.023178964853286743,
        -0.03780493512749672,
        -0.06108072027564049,
        -0.03526195138692856,
        -0.004412457346916199,
        -0.010103264823555946,
        -0.0023272554390132427,
        -0.09177418053150177,
        -0.07120911777019501,
        -0.005881431046873331,
        0.020793315023183823,
        -0.03526559844613075,
        -0.05251549556851387,
        -0.004267355427145958,
        -0.057578857988119125,
        -0.048479266464710236,
        0.04170694947242737,
        -0.035237688571214676,
        -0.06798461824655533,
        -0.07933416962623596,
        0.10995174944400787,
        0.03836044296622276,
        -0.10480556637048721,
        -0.012742306105792522,
        0.00476835248991847,
        -0.03469539433717728,
        0.023387283086776733,
        0.0421711802482605,
        -0.09836728125810623,
        0.005582467652857304,
        0.07061049342155457,
        0.10480118542909622,
        0.000910914852283895,
        0.059832215309143066,
        0.008549283258616924,
        -0.052614226937294006,
        0.06587003916501999,
        -0.03686901554465294,
        0.012938892468810081,
        0.02113313600420952,
        0.11076716333627701,
        0.0038262701127678156,
        0.047091443091630936,
        -0.03569991514086723,
        -0.01551927998661995,
        0.0198886189609766,
        0.01619480736553669,
        0.08399475365877151,
        0.10842279344797134,
        -0.037997640669345856,
        0.00026312508271075785,
        0.019009729847311974,
        0.04152693226933479,
        0.11406783014535904,
        0.11375880986452103,
        -0.012143444269895554,
        0.04921073094010353,
        0.0048407199792563915,
        0.04871935024857521,
        -0.08046264201402664,
        -0.006178890820592642,
        0.07260163128376007,
        -0.05238378793001175,
        0.016011716797947884,
        0.03135381266474724,
        -0.024426354095339775,
        0.022826137021183968,
        0.04328806325793266,
        0.004923488479107618,
        -0.002716107526794076,
        -0.0356331542134285,
        -0.06309264153242111,
        0.02223750203847885,
        -0.036386020481586456,
        -0.053019627928733826,
        0.004961069673299789,
        -0.04696224257349968,
        0.019187675788998604,
        0.0798538401722908,
        0.039082568138837814,
        -0.02644038014113903,
        0.037550993263721466,
        0.009467043913900852,
        -0.0793512761592865,
        0.0636119693517685,
        -0.10399243235588074,
        -0.09158667922019958,
        0.020926624536514282,
        0.00299540301784873,
        -0.01672426611185074,
        0.11444045603275299,
        0.031683553010225296,
        0.017671555280685425,
        -0.024306997656822205,
        -0.009340646676719189,
        -0.036910317838191986,
        -0.05475286766886711,
        0.026846908032894135,
        -0.0076365298591554165,
        -0.034501537680625916,
        5.823086773286675e-33,
        0.09389464557170868,
        0.06858620792627335,
        -0.0616571307182312,
        -0.015458486042916775,
        0.10018488019704819,
        -0.04451904818415642,
        0.0015158705646172166,
        -0.04121088236570358,
        -0.09516249597072601,
        0.06889908760786057,
        0.0002143908350262791,
        -0.045278679579496384,
        -0.05185107886791229,
        -0.047574400901794434,
        0.1348675638437271,
        -0.0019112755544483662,
        0.02741067484021187,
        -0.0696762427687645,
        0.03909855708479881,
        0.003330863080918789,
        0.07238137722015381,
        -0.05738217756152153,
        0.014136810787022114,
        0.002289931522682309,
        0.08912600576877594,
        0.0394161082804203,
        -0.09577618539333344,
        -0.08118966221809387,
        0.08484324812889099,
        0.02806813456118107,
        -0.043030381202697754,
        0.01568862423300743,
        -0.02854493446648121,
        0.02670031413435936,
        -0.05036769434809685,
        -0.0015744989505037665,
        -0.02994006685912609,
        -0.06191959232091904,
        0.009441852569580078,
        -0.05234084278345108,
        -0.01344617921859026,
        -0.027559323236346245,
        -0.006324044428765774,
        -0.017659395933151245,
        0.08811546117067337,
        0.0029879247304052114,
        -0.0020604541059583426,
        0.03001546859741211,
        0.048959363251924515,
        0.049844708293676376,
        -0.06569632887840271,
        -0.028953608125448227,
        -0.02208983525633812,
        0.05829811841249466,
        0.017297718673944473,
        -0.020512443035840988,
        0.0708826333284378,
        -0.024293556809425354,
        0.04093577712774277,
        0.11137178540229797,
        0.0003628283739089966,
        -0.022592898458242416,
        -0.030231690034270287,
        -0.011294768191874027,
        -0.05364059656858444,
        -0.05893759801983833,
        -0.05174010619521141,
        -0.0040414705872535706,
        0.04411548003554344,
        0.013606950640678406,
        -0.1073383316397667,
        -0.017680808901786804,
        -0.07852291315793991,
        0.014707881025969982,
        -0.08363769948482513,
        0.038685087114572525,
        0.03360004350543022,
        0.04631814360618591,
        0.00749652786180377,
        0.03157319501042366,
        -0.018446337431669235,
        0.00022320981952361763,
        -0.024569114670157433,
        0.005609958898276091,
        0.02271495945751667,
        -0.01701967790722847,
        -0.0021104353945702314,
        -0.07680844515562057,
        0.03131960332393646,
        0.10711468011140823,
        -0.025891613215208054,
        0.042523689568042755,
        0.03283010795712471,
        0.032117657363414764,
        -0.001586026861332357,
        -7.460689259252313e-33,
        0.004376029595732689,
        0.05162016302347183,
        0.016605261713266373,
        -0.0137660326436162,
        -0.03327163681387901,
        -0.04702165722846985,
        -0.030557679012417793,
        0.03912608325481415,
        0.0062704794108867645,
        -0.03098263405263424,
        -0.03327491506934166,
        -0.02231682650744915,
        0.061628539115190506,
        -0.043123356997966766,
        0.038804471492767334,
        -0.07672592252492905,
        0.01693001762032509,
        0.061644844710826874,
        -0.09370674192905426,
        -0.0023171904031187296,
        -0.020446140319108963,
        0.17119641602039337,
        -0.055894892662763596,
        -0.04082099348306656,
        0.025782832875847816,
        -0.03389037773013115,
        0.06787008792161942,
        0.07840459793806076,
        0.016926182433962822,
        0.11022017896175385,
        0.03565573692321777,
        -0.01612050086259842,
        -0.004826114047318697,
        0.01609424129128456,
        0.049454279243946075,
        0.059551503509283066,
        0.1340184360742569,
        0.0611271969974041,
        -0.043972447514534,
        -0.05325422063469887,
        0.14952628314495087,
        0.01422544289380312,
        -0.1457204967737198,
        -0.011660164222121239,
        0.00971029233187437,
        0.014493896625936031,
        -0.0012745348503813148,
        0.08183852583169937,
        -0.11895695328712463,
        -0.0621742382645607,
        0.07583298534154892,
        -0.048470329493284225,
        0.03845500200986862,
        0.030659670010209084,
        -0.0011186877964064479,
        -0.011000395752489567,
        0.02846325747668743,
        -0.020209871232509613,
        0.07484173029661179,
        0.047198906540870667,
        -0.0029182876460254192,
        -0.07905466854572296,
        -0.08715745806694031,
        0.04486420005559921,
        0.003840311663225293,
        -0.06436020135879517,
        -0.004226869437843561,
        -0.012252796441316605,
        0.0017053195042535663,
        -0.03769202157855034,
        -0.08397940546274185,
        0.030742011964321136,
        -0.004117854405194521,
        0.04667286202311516,
        0.042955175042152405,
        -0.04064145311713219,
        -0.05192342400550842,
        0.02635524794459343,
        -0.007708235643804073,
        0.052804768085479736,
        0.05783539637923241,
        0.02957318350672722,
        -0.02791162207722664,
        -0.05186387151479721,
        0.03693888336420059,
        0.08880562335252762,
        0.06612366437911987,
        0.02659045346081257,
        0.019526701420545578,
        0.0024795408826321363,
        -0.08836701512336731,
        0.0253771785646677,
        -0.014726896770298481,
        0.08091036230325699,
        0.08483481407165527,
        -4.8842508704183274e-08,
        0.011696544475853443,
        0.038581158965826035,
        0.017980212345719337,
        0.037909671664237976,
        0.02482064627110958,
        0.041459206491708755,
        0.01145677175372839,
        -0.0857366994023323,
        0.027102155610919,
        0.05861268937587738,
        -0.05921837314963341,
        0.05426442623138428,
        -0.046047523617744446,
        0.008572195656597614,
        -0.025386298075318336,
        0.026364684104919434,
        -0.04842207580804825,
        -0.023406019434332848,
        -0.01054136548191309,
        0.015892881900072098,
        -0.022825447842478752,
        -0.03291426599025726,
        0.036466747522354126,
        0.03205246105790138,
        0.004324519541114569,
        -0.028849005699157715,
        0.05921461805701256,
        -0.03501884639263153,
        -0.0031420141458511353,
        0.07666170597076416,
        -0.06607366353273392,
        -0.0681975856423378,
        0.01991378143429756,
        0.04115067422389984,
        -0.08278703689575195,
        0.05726711452007294,
        -0.09462041407823563,
        0.017966849729418755,
        0.032096605747938156,
        0.019091911613941193,
        -0.09653054922819138,
        -0.09801299124956131,
        0.024201400578022003,
        -0.030362529680132866,
        -0.14152243733406067,
        -0.009321391582489014,
        -0.02137717232108116,
        0.03449597954750061,
        0.017891421914100647,
        -0.054262373596429825,
        0.005870368331670761,
        -0.0004915352328680456,
        0.00011082913260906935,
        -0.05954350531101227,
        -0.013707412406802177,
        0.003155951853841543,
        0.025692997500300407,
        -0.01830032281577587,
        0.008128620684146881,
        0.0014380071079358459,
        0.0017822367371991277,
        -0.04261917620897293,
        -0.0014431241434067488,
        -0.02596597746014595
    ]
}