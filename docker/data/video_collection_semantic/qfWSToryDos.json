{
    "id": "qfWSToryDos",
    "title": "Free Wireshark and Ethical Hacking Course: Video #2",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2020-08-17T22:35:24Z",
    "video_url": "https://www.youtube.com/watch?v=qfWSToryDos",
    "category": "Science & Technology",
    "tags": [
        "ethical hacking",
        "wireshark",
        "hacking",
        "wireshark tutorial 2020",
        "ethical hacker",
        "wireshark tutorial for beginners",
        "wireshark download",
        "wireshark 2020",
        "networking",
        "how to hack",
        "wireshark filters",
        "wireshark tutorial",
        "how to use wireshark",
        "gns3 wireshark",
        "http",
        "packets",
        "sniffing",
        "how to",
        "packet analyzer",
        "kali linux",
        "hacker",
        "ethical hacking course",
        "hackers",
        "udemy wireshark",
        "networking tutorial for beginners",
        "packet sniffing",
        "learn hacking",
        "tutorial",
        "kali linux tutorial",
        "hacking course"
    ],
    "views": 27816,
    "likes": 989,
    "comments_count": 53,
    "description": "This is a complete Wireshark and Ethical hacking course.  Get the full Wireshark course for $9:  support the mission, join thisisIT:  CCNA for $10:   Previous video in this series:   Make sure you know where to capture packets or frames in a network. Do you know how devices such as hubs, switches and routers treat traffic? Do you know what port span is?  In this course I'm going to show you how to capture packets from a network, how to capture passwords, replay voice conversations, view routing protocol updates and many more options.  Do you know network protocols? Do you know how to hack? Want to learn wireshark and have some fun with Ethical hacking? This is the course for you:   Learn Wireshark practically. Wireshark pcapng files provided so you can practice while you learn! There is so much to learn in this course:  - Capture Telnet, FTP, TFTP, HTTP passwords. - Replay VoIP conversations. - Capture routing protocol (OSPF) authentication passwords. - Troubleshoot network issues. - Free software. - Free downloadable pcapng files. - Answer quiz questions.  The course is very practical. You can practice while you learn!  Learn how to analyze and interpret network protocols and leverage Wireshark for what it was originally intended: Deep Packet Inspection and network analysis.  Protocols we capture and discuss in this course include: - Telnet - FTP - TFTP - HTTP - VoIP - OSPF - EIGRP - DNS - ICMP  Menu: Overview: 0:00 Network Capture: 0:44 DNS and DHCP traffic: 1:45 Why is HTTP not captured? 7:30 Switch MAC address table: 7:58 Solution: 9:30 Thank you to my supporters: 9:56  pcap file used in the video:  Wireshark playlist:   ====================== Special Offers: ====================== Cisco Press: Up to 50% discount Save every day on Cisco Press learning products! Use discount code BOMBAL during checkout to save 35% on print books (plus free shipping in the U.S.), 45% on eBooks, and 50% on video courses and simulator software. Offer expires December 31, 2020. Shop now.  Link: bit.ly/ciscopress50  ITPro.TV:  30% discount off all plans Code: DAVIDBOMBAL   Boson software: 15% discount Link:  Code: DBAF15P  GNS3 Academy: CCNA ($10):  Wireshark ($10):   DavidBombal.com CCNA ($10):  Wireshark ($9):   Who this course is for: Network Engineers Network Architects Ethical hackers Networking Students  Wireshark wireshark download  wireshark tutorial 2020  wireshark tutorial for beginners  wireshark 2020  packet sniffing ethical hacking hacking  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #Wireshark #Hacking #CCNA",
    "description_links": [
        "https://bit.ly/wireshark9",
        "https://bit.ly/thisisitwireshark",
        "https://bit.ly/ccnafor10",
        "https://bit.ly/wiresharkhacking",
        "https://bit.ly/sharkpcap2",
        "https://bit.ly/wiresharkhacking",
        "https://itpro.tv/davidbombal",
        "https://bit.ly/boson15",
        "https://bit.ly/gns3ccna10",
        "https://bit.ly/gns3wireshark",
        "http://bit.ly/yt999ccna",
        "https://bit.ly/wireshark9"
    ],
    "transcript": "- This is one of multiple videos in my Wireshark packet analysis and ethical hacking course. Have a look at the link below for previous videos in this course. In this video we're going to discuss an issue that you may encounter when capturing packets. You've got to think about how packets flow in a network and how specific devices treat packets. (upbeat music). You need to be careful when using Wireshark to capture packets or frames from a network. You need to think about how traffic flows through a network and make sure that you capturing in the right part of the network. So, as an example, if PC one opens up a browser and connects to the server, where do you need to capture the traffic? Now it's obvious that you may capture here or may capture here. But what happens if you capture over here? Will you see the traffic sent from the client to the server? Notice we're seeing a whole bunch of traffic here, we seeing EIGRP, we seeing spanning-tree, we see other protocols. But let's filter for HTTP. That's the moment we see no HTTP traffic. What happens when PC one opens up a browser to the server? So I'll close this down and let's open up a browser and go to 10.1.1.100 so this server. Do we see any HTTP traffic? And the answer is no. If I clear the filters, I'll see a whole bunch of traffic. So as an example, I can see DNS. So there's DNS queries. So let's filter for DNS. Notice the client 10.1.1.1 sent a DNS query, you can see query here, to the DNS server. The source IP address is 10.1.1.1, destination is 10.1.1.254. Now in this topology, the router is acting as a DNS server. This is a Cisco router. So show version here shows me that I'm running Cisco IOS Software on this router. Now, if you're not familiar with Cisco, again. you get free access to my CCNA course. So that'll teach you a whole bunch about Cisco routers but you don't need to know that to use Wireshock. But if you want to be a serious Network Engineer I strongly suggest that you learn about Cisco because Cisco is the biggest vendor out there. So what I've done here, if I tapped show run piping clued DNS, I have set up this router as a DNS server through this command IP DNS server. Now these commands may be confusing. So let me show you that the router is also acting as a DHCP server or Dynamic Host Configuration Protocol server. In other words it's allocating IP addresses to clients dynamically. The PCs are not configured with static IP addresses. They dynamically get IP addresses from the DHCP server. So this allows me to configure the router as a DHCP server. And this command allows me to create entries in the DNS server running on this router that says gns3.com has this IP address. So as an example, if I ping gens3.com, that resolves to this IP address. Domain Name Server or Domain Name System, DNS, allows us to resolve easy to read names to IP addresses. This gns3 typology is not connected to the internet. It's running locally on my computer. So gns3.com, if you surf from an internet connected device will take you to the actual gns3 server. But in this example it's simply taking us to the server in the topology. Now what I'll do is stop this Wireshark capture and I'll save this. Basic Wireshark Capture too so you can also once again have a look at this capture if you want to. But notice here the client is sending a DNS request to the server. The reason this was captured is we were capturing traffic on this link and the PC is sending a DNS request to the router, which is the DNS server. Source Mac addresses is the PC destination address is the router. We can prove that once again by going to the router and I can use the command show interface, gigabit zero/zero. Notice the Mac address of this router this and that's the destination Mac address of the frame. So the PC sent a DNS request to the router, source IP addresses is the PC destination, IP address is the router. I can prove that once again, by going back to the router. Remember I typed this command, there's the Mac address, there's the IP address of the router 10.1.1.254. Source Port Number is an ephemeral or random or Dynamic Port Number. Destination Port Number is a well known port number. 53 is the well-known port number for DNS. So again, layer two; frames, layer three; packets, layer four; segments. In this case however, it's UDP or User Datagram Protocol, it's not TCP. DNS in this example is using UDP. Source port again, destination port. Forget layer five to seven. So top layers of the OSI model, you can see it's a Standard query. Let's go through that Standard query. So the queries are, in this example, for MSN. So something was happening in the background. But let's have a look for gns3.com. But notice windows just right out the gate is querying for a whole bunch of stuff, including bing.com. So, a whole bunch of queries there. Let's see if we carry on a bunch of Microsoft MSN, keep going, a lot of queries, but this is the one I'm after. Notice gns3.com. So the windows PC, in this example, queried for gns3.com and the server hopefully at some point replies, here we go. Serve a reply back to the client. Notice source port is 53. Destination port is the femoral port used by the client. Now notice different port numbers were used for different queries. So the bing query over here used this source port number from the client. I'd have to go back and find the gns3 query. There it is. Notice 55037 is the source port when the query was made, when the server replies it's replying back to that port number and it tells the client the IP address of the server. So the router acting as a DNS server is telling the client gns3.com has this IP address 10.1.1.100. And then the client can initiate a session to the server but we don't see that if we capture traffic on this link. So again, if I filter for HTTP, I see nothing in the output because the HTTP traffic is sent directly from the client to the server. Why? Because this is a switch. It's important to remember that switches do not flood traffic once they know the Mac addresses involved in a conversation. So as an example, if I tap show Mac address table notice we can see the Mac addresses that have been lunched. The switch has learnt about this Mac address on gigabit zero zero. It's also learned about this Mac address and it's learnt about this Mac address on gigabit zero one. Now, when I sent traffic from the client so that could have timed out. If I refresh that page notice it's learnt about this Mac address on gigabit zero two. Once the switch learns about the Mac addresses in the conversation, this once again is the server. And just in case you don't believe me notice this is the Mac address of the server. This is the HTTP server over here. Notice this Mac address was learnt on gigabit zero two. Once this switch has learned about the devices in the conversation, it's not gonna flood the frames out of other ports. It's gonna be switched directly between these two hosts. So, the PC with this Mac address 00-0C ending in DC-D7. You know, the words, this Mac address is gonna have its traffic forwarded directly to the server and the server traffic is gonna go directly back to the PC. Say if you capture traffic on this link, you won't see the conversation between the server and the client. That's why you need to either span a port or mirror a port on the switch to be able to see what's going on or you need to have a network tap or something in the network where you can see the traffic. You've got to get the traffic to your capturing device. Otherwise you won't see it. So in the next video, I'll show you how to do that. Let's add a mirror to the topology so that we can actually see what's going on. (upbeat Music)",
    "transcript_keywords": [
        "Mac address",
        "DNS server",
        "DNS",
        "server",
        "Mac",
        "address",
        "Port",
        "router",
        "traffic",
        "Port Number",
        "Mac addresses",
        "Notice",
        "client",
        "capture",
        "HTTP",
        "HTTP traffic",
        "DHCP server",
        "Cisco",
        "DNS request",
        "Source Port"
    ],
    "transcript_entity_values": [
        "User Datagram Protocol",
        "Microsoft",
        "Wireshark Capture",
        "three",
        "Domain Name System",
        "Dynamic Host Configuration Protocol",
        "Wireshock",
        "EIGRP",
        "53",
        "seven",
        "Cisco",
        "five",
        "two",
        "four",
        "Wireshark",
        "10.1.1.1",
        "gigabit zero zero",
        "Destination Port Number",
        "MSN",
        "IP",
        "HTTP",
        "Mac",
        "Cisco IOS Software",
        "10.1.1.100",
        "Dynamic Port Number",
        "Cisco",
        "CCNA",
        "DNS",
        "gns3",
        "OSI",
        "DHCP",
        "00-0C",
        "UDP"
    ],
    "transcript_entity_types": [
        "PERSON",
        "ORG",
        "PERSON",
        "CARDINAL",
        "PERSON",
        "PRODUCT",
        "PERSON",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "PRODUCT",
        "PRODUCT",
        "DATE",
        "FAC",
        "ORG",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "CARDINAL",
        "FAC",
        "GPE",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG"
    ],
    "vector": [
        -0.08202396333217621,
        0.017882902175188065,
        -0.033451225608587265,
        -0.0582117959856987,
        0.03408671170473099,
        -0.04104118049144745,
        0.026088126003742218,
        -0.03239632025361061,
        -0.04768211394548416,
        0.04809598997235298,
        0.01598529703915119,
        -0.011341624893248081,
        -0.007540650200098753,
        -0.052054427564144135,
        -0.017918583005666733,
        -0.03159129247069359,
        -0.028574911877512932,
        0.014600910246372223,
        0.04649098217487335,
        -0.0514732226729393,
        -0.00847335159778595,
        -0.03814893588423729,
        0.07868380844593048,
        -0.07041066139936447,
        -0.01841481402516365,
        0.05002005770802498,
        0.07032616436481476,
        0.012805799022316933,
        -0.04594524949789047,
        -0.022529831156134605,
        -0.045725781470537186,
        0.059189628809690475,
        -0.00508791534230113,
        0.030251920223236084,
        -0.030694833025336266,
        -0.052240654826164246,
        0.046456120908260345,
        0.039205413311719894,
        -0.005755078513175249,
        -0.00331058818846941,
        -0.0505627766251564,
        -0.025517571717500687,
        -0.014221102930605412,
        -0.002467080485075712,
        -0.06076350808143616,
        -0.03996413201093674,
        -0.00021668690897058696,
        -0.020323311910033226,
        0.019311871379613876,
        -0.05687791854143143,
        -0.026018012315034866,
        0.006395124364644289,
        0.002145561622455716,
        0.07695814967155457,
        0.013750998303294182,
        -0.07688865810632706,
        -0.017526118084788322,
        0.04662680998444557,
        0.019294817000627518,
        -0.014544721692800522,
        -0.03807254135608673,
        -0.0003645522228907794,
        -0.08636672794818878,
        0.036934178322553635,
        -0.04122493416070938,
        0.048616331070661545,
        -0.007675723172724247,
        0.16404621303081512,
        0.0764291062951088,
        -0.04805605486035347,
        -0.18080583214759827,
        0.0022236027289181948,
        -0.04082278907299042,
        0.047443024814128876,
        0.017735814675688744,
        0.03853914514183998,
        0.027045683935284615,
        0.00010495085007278249,
        -0.05903882905840874,
        -0.0350707545876503,
        0.0583677664399147,
        -0.01938091404736042,
        -0.04125107824802399,
        0.06137971580028534,
        0.0178091861307621,
        0.022672703489661217,
        -0.05640437453985214,
        0.01111413724720478,
        0.017312487587332726,
        0.009415497072041035,
        -0.03797144815325737,
        0.06186868995428085,
        0.0009291321039199829,
        -0.0015526674687862396,
        -0.000565018504858017,
        -0.0015210009878501296,
        -0.0016834365669637918,
        -0.018716033548116684,
        -0.04905274882912636,
        0.0640605166554451,
        -0.019394589588046074,
        -0.037835922092199326,
        -0.04686424508690834,
        -0.1452888697385788,
        0.010140263475477695,
        0.05958249792456627,
        0.0022353248205035925,
        -0.05355866625905037,
        0.09737878292798996,
        0.030337398871779442,
        -0.05629357323050499,
        0.06544684618711472,
        -0.07124463468790054,
        -0.08725360035896301,
        0.11415248364210129,
        0.11144067347049713,
        -0.03594953566789627,
        0.07952223718166351,
        0.051786817610263824,
        0.018388593569397926,
        -0.025326283648610115,
        0.031501948833465576,
        0.004222876857966185,
        0.0428740531206131,
        0.07441595941781998,
        -0.06482946872711182,
        0.02665138989686966,
        2.0485777188741716e-33,
        0.03572101891040802,
        0.09318628162145615,
        -0.0896269679069519,
        0.045295435935258865,
        0.05061753839254379,
        0.026505745947360992,
        0.09070923924446106,
        0.04225117713212967,
        -0.04871474578976631,
        0.09727026522159576,
        0.013331753201782703,
        -0.02877918630838394,
        -0.023007897660136223,
        -0.0350676029920578,
        0.04347449541091919,
        -0.017785122618079185,
        -0.1019221842288971,
        -0.049607958644628525,
        -0.01999574527144432,
        0.04483841359615326,
        0.00986360665410757,
        -0.06567876785993576,
        0.07061515748500824,
        0.029244372621178627,
        0.0574866384267807,
        -0.012936563231050968,
        -0.03242858871817589,
        -0.06907574087381363,
        0.11644972115755081,
        0.028357556089758873,
        -0.07266706228256226,
        0.028271129354834557,
        -0.021033460274338722,
        0.001720908796414733,
        0.06501743197441101,
        0.04956202208995819,
        -0.005248084664344788,
        -0.07384368777275085,
        -0.027899939566850662,
        -0.03169964998960495,
        -0.09099104255437851,
        -0.04639842361211777,
        -0.011349905282258987,
        -0.07611311972141266,
        -0.015092898160219193,
        -0.06011144071817398,
        0.010871325619518757,
        -0.018198814243078232,
        0.03715427964925766,
        0.03878336027264595,
        -0.03430159017443657,
        -0.03857843577861786,
        -0.016555245965719223,
        -0.06262075155973434,
        -0.023510592058300972,
        -0.0235171839594841,
        0.03179638460278511,
        -0.0315442830324173,
        0.024273864924907684,
        0.07913132756948471,
        0.026379821822047234,
        0.07658568024635315,
        -0.04072205349802971,
        -0.010572100058197975,
        -0.06685184687376022,
        0.0013760783476755023,
        -0.022395266219973564,
        0.038522057235240936,
        0.05151423066854477,
        -0.009434732608497143,
        -0.07409781962633133,
        0.035435497760772705,
        -0.03793802484869957,
        -0.008243478834629059,
        -0.0021550448145717382,
        0.13051584362983704,
        -0.016180839389562607,
        0.02748320810496807,
        0.02385312132537365,
        0.06404364109039307,
        0.0026248337235301733,
        -0.02155882865190506,
        0.08492341637611389,
        0.0035430367570370436,
        -0.005674601066857576,
        -0.043628983199596405,
        0.028767036274075508,
        -0.09642517566680908,
        0.056893620640039444,
        0.08505845069885254,
        -0.013370633125305176,
        -0.00633237836882472,
        -0.015771813690662384,
        0.0012437510304152966,
        0.004418260883539915,
        -3.575284802467204e-33,
        0.011924066580832005,
        0.07734396308660507,
        -0.05992448702454567,
        0.0362849198281765,
        0.0272771418094635,
        -0.04969838261604309,
        0.018770858645439148,
        0.01314958743751049,
        0.016263972967863083,
        -0.002859999192878604,
        -0.031040143221616745,
        -0.002995453542098403,
        0.008737047202885151,
        -0.05292658507823944,
        0.10417507588863373,
        -0.09200616180896759,
        -0.04873454570770264,
        0.009212459437549114,
        -0.05902710184454918,
        -0.07847573608160019,
        -0.04651843383908272,
        0.08390512317419052,
        -0.02985401637852192,
        -0.06985466182231903,
        0.0033375530038028955,
        0.008644129149615765,
        0.023260151967406273,
        0.051853667944669724,
        0.1006961241364479,
        0.07669344544410706,
        0.025795867666602135,
        0.03020879067480564,
        0.03912697732448578,
        0.057195425033569336,
        -0.009790302254259586,
        0.07427459955215454,
        0.14173808693885803,
        0.07282759249210358,
        0.0441841222345829,
        -0.04661160334944725,
        0.10824618488550186,
        0.010546381585299969,
        -0.03893548622727394,
        -0.03937412053346634,
        -0.04906725138425827,
        -0.08736200630664825,
        -0.0879640132188797,
        0.06435469537973404,
        -0.07922794669866562,
        -0.029730606824159622,
        0.09082189947366714,
        0.007667569909244776,
        0.027776384726166725,
        -0.05339683219790459,
        0.026989953592419624,
        0.08777116239070892,
        0.04731407016515732,
        -0.0010340039152652025,
        0.09817424416542053,
        0.030600139871239662,
        0.0042327470146119595,
        -0.02659834921360016,
        -0.10208393633365631,
        0.05789784714579582,
        0.003041371703147888,
        -0.001984252594411373,
        0.008371910080313683,
        0.011814717203378677,
        -0.056743323802948,
        0.022821426391601562,
        -0.03625321760773659,
        -0.019355658441781998,
        -0.0032302492763847113,
        -0.08405972272157669,
        0.039220187813043594,
        0.007779896724969149,
        -0.03962947428226471,
        0.046159468591213226,
        -0.06897109001874924,
        0.012483442202210426,
        0.08558256924152374,
        -0.04083557426929474,
        -0.041743163019418716,
        0.04119918495416641,
        0.02024657465517521,
        0.07006309181451797,
        0.027330657467246056,
        0.037248775362968445,
        0.009145625866949558,
        -0.056993771344423294,
        -0.07707074284553528,
        -0.006824403535574675,
        0.005668404046446085,
        0.058955173939466476,
        0.11659681051969528,
        -4.5976104701139775e-08,
        -0.06848341226577759,
        -0.007429493125528097,
        -0.021563805639743805,
        0.023122336715459824,
        0.024517232552170753,
        0.10716823488473892,
        -0.025568963959813118,
        -0.03282579034566879,
        -0.01147555559873581,
        0.007343790959566832,
        0.023065844550728798,
        -0.029240861535072327,
        -0.03807372599840164,
        -0.005628000013530254,
        -0.021937232464551926,
        0.021870248019695282,
        -0.055254481732845306,
        -0.041145049035549164,
        -0.023665476590394974,
        0.019668621942400932,
        0.044002171605825424,
        -0.04270847141742706,
        -0.05540456995368004,
        0.017776252701878548,
        -0.040103260427713394,
        -0.03593461588025093,
        0.003592332126572728,
        0.08913829922676086,
        -0.0006723678670823574,
        -0.04043247923254967,
        -0.0712745264172554,
        -0.0017246755305677652,
        0.013044862076640129,
        -0.04725434631109238,
        -0.03588593006134033,
        0.030812527984380722,
        -0.11446161568164825,
        -0.09835276007652283,
        0.02731603942811489,
        0.04216666519641876,
        -0.14438937604427338,
        -0.05356822907924652,
        -0.014034800231456757,
        -0.011588125489652157,
        -0.04880470409989357,
        -0.010053141042590141,
        -0.031203608959913254,
        -0.0409458763897419,
        -0.008321505039930344,
        0.010316526517271996,
        -0.0067544314078986645,
        -0.017780140042304993,
        0.03536355867981911,
        -0.0015442859148606658,
        0.07525323331356049,
        0.10059671849012375,
        0.014994509518146515,
        -0.07523275911808014,
        -0.025622056797146797,
        0.02318565919995308,
        0.026099568232893944,
        0.06978922337293625,
        -0.04454277083277702,
        0.010559170506894588
    ]
}