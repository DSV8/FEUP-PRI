{
    "id": "9vaEwycet90",
    "title": "Bug Bounty: Get paid to hack PayPal and TikTok // Featuring Nahamsec",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2022-04-01T14:08:07Z",
    "video_url": "https://www.youtube.com/watch?v=9vaEwycet90",
    "category": "Science & Technology",
    "tags": [
        "bug bounty",
        "bug bounty tutorial",
        "bug bounty course",
        "bug bounty for beginners",
        "bug bounty live",
        "bug bounty hunter",
        "bug bounty hunting",
        "bug bounty poc",
        "nahamsec recon",
        "nahamsec",
        "hacking",
        "cyber security",
        "bug bounties",
        "ethical hacking",
        "burp suite",
        "ethical hacker",
        "bug bounty tips",
        "pentest basics",
        "hackerone",
        "bugcrowd",
        "bugbounty",
        "bugs",
        "how to get started in bug bounty",
        "how to get a infosec job",
        "ben nahamsec",
        "pentesting",
        "bug hunting for beginners",
        "bug hunter google",
        "red teaming",
        "hack",
        "bug"
    ],
    "views": 72592,
    "likes": 2782,
    "comments_count": 156,
    "description": "Want to hack companies like PayPal and TikTok? What about the Department of Defense? Lots of companies that you can hack legally - and get paid doing it! This is a practical guide on how to get started hacking today.  // MENU // 00:00  Introduction 00:17  Who is Nahamsec? 01:18  Different Bug Bounty Platforms 01:40  Why Nahamsec Prefers These Platforms 02:34  Intigriti Quick Overview 02:58  Bugcrowd Quick Overview 03:25  Hackerone Quick Overview 04:01  What is Bug Bounty? 04:57  Non-Monetary Rewards: Nahamsec's Red Bull Hack 05:57  The Lyft, Snapchat and Undisclosed Travel Company Hack 07:02  Interface Walkthrough 08:45  Scope 10:18  Top Hacker Profiles on Bug Bounty Programmes 11:04  Profile Hacktivity Feed 13:54  Using the site wide hacktivity feed to learn from previous bug bounties 15:31  Getting Started: hacker101 17:24  Getting Started: hackerone 20:58  Submitting/Writing a Report 29:23  Report Terminology 31:06  How to Find a Company's Websites 33:05  Nahamsec's Approach: Certificate Transparency 36:30  Why NahamSec Prefers Dev Sites 38:05  How to Find a Website's SSL Certificate 41:21  Targeting a Company' Main Website vs Targeting Subdomains 42:25  Researching a Company's Assets 43:43  If You're New to the Bug Bounty Thing 47:40  Ways to Learn 49:18  Books to Help You Get Started Hacking 53:49  Online Resources to Help You Get Started 55:28   Final Advice  // Connect with David // Discord:  Twitter:   Instagram:   LinkedIn:   Facebook:   TikTok:  YouTube:    // Connect with Nahamsec // Twitter:  YouTube:  Github:  Discord:  Instagram:  LinkedIn:  Twitch:  Website:   // Nahamsec's Udemy Course//  Udemy:   // Sites // Hackerone:  Bugcrowd:  Intigriti:   // Books recommended // Bug Bounty Bootcamp:  Real-World Bug Hunting:  Android Hacker's Handbook:  The Web Application Hacker's Handbook:  Black Hat Python:  Black Hat Python (2nd edition):   // Creators mentioned // Nahamsec:  STK:  LiveOverflow:  Farah Hawa:  InsiderPhD:  The Cyber Mentor:   // MY STUFF // Monitor:  More stuff:   // SPONSORS // Interested in sponsoring my videos? Reach out to my team here: sponsors@davidbombal.com  bug bounty bugbounty hackerone hacking Ben Sadeghipour NahamSec nahamsec  cyber security bug bounties ethical hacking bug bounty hunting burp suite ethical hacker pentest certificate red teaming bug bounty tips bug bounty for beginners bug bounty course pentest basics bugcrowd bugbounty hack bugs hackerone bugcrowd Intigriti  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   #bugbounty #hacking #hack",
    "description_links": [
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal",
        "https://twitter.com/nahamsec",
        "https://www.youtube.com/c/nahamsec",
        "https://github.com/nahamsec/Resources-for-Beginner-Bug-Bounty-Hunters",
        "https://discord.com/invite/ysndAm8",
        "https://www.instagram.com/nahamsec/",
        "https://www.linkedin.com/in/nahamsec/",
        "https://www.twitch.tv/nahamsec",
        "https://nahamsec.com/",
        "https://www.udemy.com/course/intro-to-bug-bounty-by-nahamsec/",
        "https://www.hackerone.com/",
        "https://bugcrowd.com/programs",
        "https://www.intigriti.com/",
        "https://amzn.to/3K2YDeJ",
        "https://amzn.to/3wTF9FN",
        "https://amzn.to/3uMc509",
        "https://amzn.to/3IZ2RTr",
        "https://amzn.to/3JYIZAV",
        "https://amzn.to/379WcIV",
        "https://www.youtube.com/c/Nahamsec",
        "https://www.youtube.com/c/STOKfredrik",
        "https://www.youtube.com/c/LiveOverflow",
        "https://www.youtube.com/c/FarahHawa",
        "https://www.youtube.com/c/InsiderPhD",
        "https://www.youtube.com/c/TheCyberMentor",
        "https://amzn.to/3yyF74Y",
        "https://www.amazon.com/shop/davidbombal"
    ],
    "transcript": "- [Ben] And they send me like 15 cases of Red Bull, I wanna say, maybe 28 cases of Red Bull at some point. My friends made a throne out of it for me, and I sat on it and did a video. (upbeat music) - Hi everyone, it's David Bombal, back with a very special guest, very well known in the hacking community. Ben, welcome. - Well, hello, thank you for having me. - I'm calling you Ben now, but what's your handle that you typically use, and give us a bit of background of yourself. - Yeah, My name is Ben Sadeghipour, most people online know me as the NahamSec. I've been doing bug bounties, or hacking as a profession since 2014. People may have seen me from hacking companies like Apple, Red Bull, Airbnb, Lyft, Snapchat, I've hacked the Department of Defense a few times, which was really fun. I also create content to help mentor and get people into the door with hacking, and kinda show them how it changed my life, and they could do the same with hacking as well. - I was hoping that you could give us a demonstration of like how do you get started in bug bounty? Some of the platforms and sort of a walkthrough of that, would that be possible? - Yeah, absolutely. I can give you a walkthrough. We can talk about different platforms, how do people get started. - Yeah, that'd be great, Ben, if you could take it away, talk us through it and give us your advice. I mean, you've been doing this for a long time. - Cool, so when it comes down to bug bounties, there are three key players. There are multiple players, I don't wanna say there's only three, but there are multiple platforms. Three of them are my favorite; there's HackerOne, there's Bugcrowd, and there's Intigriti. There are also platforms like Synack, YesWeHack, Communify, there's a bunch of other ones. These are the three that I personally hack on. I'm a little bit biased with HackerOne itself. I used to work at HackerOne for a while, I've been there for six years. - Why do you prefer these three? And I mean, this is, we'll just say this, this is your personal opinion, this video's not sponsored by anyone, you can say whatever you like, so- - Yeah, absolutely. - Just give us your opinion. - There are different reasons. One is, they're more established in the community. So these three are very heavily involved in the community. Companies like Synack you have to pass a test, you have to do an interview with them, it's a little bit harder to get into the Synack red team, which is good and bad. It's good, because that means there's gonna be hackers on their team, but it's bad because everyone could get started. But with these three, especially with HackerOne, it's just the program selection, the bounty amounts, the companies that are on there, there's the staff, the teams, the support staff and all that good stuff. So, I'll give you an example of the big companies that are on each one. Department of Defense is on HackerOne, Airbnb is on HackerOne. Tesla is on Bugcrowd and Red Bull, and I believe Intel are both also on Intigriti. So there are big, big players on three of these companies. And you can see the list of all their programs here, for instance, for Intigriti, they have the WordPress engine, for example, this is all these companies. And again, they're very focused on Europe. So if you're in Europe and you wanna hack on European brands, this should be probably your go-to if you wanna just primarily focus on that, but they're going to be branching out to different countries as well, but most of these, if you know their products, it's easier to hack on them than a company that you don't know. Next one, Bugcrowd same thing. You go to programs, this is before you sign up, if you just wanna browse, you can see that they have one password, a password manager, Pinterest, let's see who else to have, the Railroad Retirement Board, so when the government's program, HostGator, lots and lots of different companies. I have more and more here, they're not showing all of them unfortunately, you can see right here, it's says promoted, but you can filter 'em based on the industry, based on max reward submissions. Same thing with HackerOne. HackerOne's a little bit more hidden, you have to go to this page called directory. Directory, if I can spell it right. And right here, directories can take a while, but you can see all of these different programs that they also offer. You can see what their bounty amounts are if you wanna sort by the bounty amount. So it was sorted by bounties. - So just for people who are new, the bounty is what you could possibly earn, is that right? - Earn, correct. And I will do a rundown about everything means, in just a sec, I wanna kinda just show these. You can also, if you're good at mobile hacking, iOS for iPhone, you can go here. If you're an Android hacker, you can filter by and that stuff. But before we jump into it, I think it would be fair for me to talk about a few things that are very important when it comes out to bug bounties. There's some terminology that I think everyone should know. - Yeah. - One is, what is bug bounty first of all? Like what does this bug bounty thing we're talking about? Bug bounties allow anybody, whether you're a professional, you're a security professional, you're an ethical hacker, you're a beginner, it allows you to hack on a company, test their security and the security of their products and their digital assets, as long as you play within a scope of their program. And they pay you in a return or they may give you some goods or they may not pay you and just recognize you for your work. Some people like doing the recognition, it's a good place to put on your resume, for example, companies like IBM, Department of Defense, Ford, GM, they don't pay you, but if you hack them, they'll put you on their leaderboard that says, \"Hey, they have hacked on our program, they are who they say they are,\" and they get recognized. Red Bull actually offered Red Bull cases, if you go on one of my social media accounts, you'll see me receiving- - I was gonna say, I saw you video about but Red Bull. What was that video? Tell us about it. - Yeah, so I hacked Red Bull when they launched a bug bounty program, just purely out of fun. I like the aspect of just hacking a company for the bragging rights, but I don't put too much time and effort into it, it's just more of a, I wanna say I did it, it was an experienced thing. And they sent me like 15 cases of Red Bull I wanna say, maybe 20 cases of Red Bull at some point. My friends made a thrown out of it for me, and I sat on it and did a video for fun. So that's also another case, it's not always monetary. Some of these gifts are valued more than money, in some cases. Another one is like the United Airlines has their own bug bounty program, not only on these platforms, which is also common. Like Google, Facebook, and like United airlines have their own bug bounty programs off of these platforms. United Airlines gives you airline miles. So when you hack on 'em, you can get 50,000 miles all the way to a million. I know hackers who have like millions and millions of miles, I got a couple hundred thousand and I flew to Europe and back, which was really, really fun. So you can do stuff like that with it. - What's one of the most exciting ones that you've done, and which is one that's made you the most money, and, I'm not sure if you can share, but like kinda the money that you were able to make out of this? - I will show how you can see everyone's reports at some point through this interview- - Okay, great. - Or this preview. But for me personally, I went on this journey, I wanna call it, with a friend of mine, Seraphina Brochess, a.k.a. Daycan, give a follow on Twitter, amazing hacker, probably one of the most brilliant minds you'll see out there. Her and I were just wanting to hack some of these big companies. So we hacked Lyft, Snapchat, and a big hospitality travel company that I cannot name, unfortunately. But if you go on my profile, it's very obvious who they are. Were looking at a particular functionality on all these companies, and all three were vulnerable. And that just gave us a lot of money and also allowed us to talk on dev con. The only reason why I said that was one of the most fun things I've done is, I learned a lot throughout the process, it wasn't so much a monetary aspect, I collaborated with Seraphina, which was really, really fun, but it was just the method we were saying, \"Hey, we can hack these particular functionality on these random sites. Can we do it to big organization?\" And it did work, it was the same method. And it worked out. I mentioned scope earlier. That's really important to understand what a scope is. So I'm going to actually go to the Yahoo program. The Yahoo program is known as the beginner's program for a lot of the old school hackers like myself who are very new to bug bounties, because a Yahoo, Google and Facebook group, were probably the only company's offering a bounty in 2014. But this is what it looks like for every company. And I wanna see if you even let's go to background I wanna show you, it looks all similar. The layouts are different, but they all look almost similar. The bounty amounts are up here for Bugcrowd, for HackerOne was in the corner. But I wanna show that they all show this information to you, and you really should read it, this is very important. Because this is how they set up expectations. This is how they tell you, \"Hey, this is what we want you to do, this is what we don't want you to do. This is what we pay you, this is how much the max payout is.\" And it gives you metadata on the program itself too. So from the top right here, you see the rewards, if you find something with low criticality, they're gonna give you $100, and if you do something critical, minimum is $10,000. But if we scroll down right here, you can see the top bounty range is between 6,000 and $40,000. And I mean, somebody has gone a single bounty worth $40,000 from Yahoo before. - And you can see how much it paid in the last 90 days. You can see if it's an active program, and total amount made. That's great. - Total bounties paid, almost $22 million, which is insane. - Wow. - But yeah, so this tells you the type of contents, some companies may be smaller, it might be shorter, and some companies is a lot bigger. So here it tells you like, \"Hey, if you're hacking you need to add these things to your request, this is a must do, if you find a particular vulnerability, this is what you need to do with it.\" They tell you everything you need to know, and they explain the information here as well. They tell you what's considered as a medium, what's considered as a critical, and then all the way, all these rules, and right here is what's in scope of the program. So if you see these domains right here, it says, this domain data.mail.com is considered critical, so that's an important asset to them, and it is eligible for a bounty. So that means they're going to pay you. Versus this one is a medium, while they may pay you a bounty, it's not as important to them. So the bounty range is gonna stop at a medium, and then all the way at the bottom right here, you're gonna see some of these domains, there's a lot of them from Yahoo, that says, it's critical, you can report to them, it's still in scope, like vzbuilders.com, but it's not eligible for a bounty. So they will not pay you for it if you find a vulnerability. These assets are there on what we call the, see something, say something basis. So if you randomly find a vulnerability, you wanna be responsible and disclose it, you should be responsible to disclose it. You go here and report it, but you shouldn't expect, sometimes they may pay you, they may give you a bonus, but don't expect to get paid. - But you could get bragging and rights, yeah? - Yeah, and then out scope means, please don't hack on these things. Don't touch them. Yahoo.net is very much like third party for Yahoo, a lot of the third party services on there, same thing with yahoo.com.tw, and all these different ones. That means, please do not test these, and don't go after them at all. So, you know what scope is now, you know what the policy looks like, there are some other information on the right-hand side right here. Again, Bugcrowd has similar ones, it shows you, the vulnerabilities rewarded, how many days it takes, how much they've paid at average. Same thing here, but it's more, they tell you average time to have bounty is about a month, so if you report something to them, it may take 'em a month before they pay you. You can see what their average bounty amount is. Last report they resolved was yesterday, and you can also see all of the hackers who have hacked on this program historically. You can see all-time hackers who are up here, or you can go and see the start of the program in 2014 or 2013, and see who was hacking on their programs as they were submitting bugs and received more and more vulnerabilities. And you can see these names just changed drastically every year. But there's a few other things that I really wanna highlight on each of these, one is if you lack a particular hacker, I'm gonna use my own profile as an example, you can click on their profile, it gives you information. This clear verified means there have been verified and background checked by HackerOne. This is mostly for the customers, but it also tells you this person is a real person. So it's not someone claiming to be me just like they would do on other social media platforms. You can see the social media links, which it's not that important honestly, but this is where the good stuff happens. This is called the Hactivity, which you can see the hactivity based on a user's profile on a customer profile, and also you can see it based on the entire platform. The hactivity is pretty much the hacker's activity, as a sales activity, and you can see all the vulnerabilities that they have chosen to disclose. So right here, you can see, I go to disclosed. It shows you all the vulnerabilities that have disclosed, with some other information. So you can click on it, and again, I'm not registered on this platform yet. I haven't logged in yet. So you can see the conversation I've had with this company, what we found, what the back and forth looked like, all the way through the bounty amount, and what their expectation was and why they paid that much. You can see all of it pretty much. And it tells you what went wrong, what went great, whatever it is, you can see all of that. And on the right-hand, I can see more of the metadata, all the people that were involved. So all these different security folks that were involved in this process, and some of the hackers who were also involved while we reported this. - (crosstalk) It's very transparent, isn't it? There's a lot of- - Yes. - Very transparent, yeah. - One of the HackerOne values is to be, transparency is very important into us. - Yeah. - And it goes through our programs as well. But it's also an educational thing, we want people to learn. Hackers really like teaching each other. And this is one of those ways we just do it. So you can see some of the programs that I've hacked on, that I've disclosed, but if you wanted to see more of them, you can actually go at the bottom of my page, and you can click on view more, and this shows all of the programs that I've submitted to. So you can see, I was actively hacking on Airbnb for a while, I've been dethroned as number one to number two, I've hacked Valve, I was number one, I'm number three, Rockstar Games, same thing, Yahoo, I've gone through 66, you name it. Yelp, Snapchat, I've hacked on these programs, Localize- - Is that rating based a number of hacks discovered, or- - So number of vulnerabilities, correct. So number of vulnerabilities. So you can see out of my 70 reports to Airbnb, 59 were valid, and they've given me this much reputation. The reputation point is what makes a difference in the leaderboard. And then 54 out of 55 with Valve, and then 32 out of 37 and all that stuff. So you can see my activity on all these, two out of five with Snapchat, and all of that stuff. So this is just on my basis of me personally as a hacker. But let's say you wanted to look at a company, you wanted to see what kind of vulnerabilities does this company have? You can do the same thing, go to a profile, HackerOne, you go to activity, you click on disclosed, and then it shows you all of these different vulnerabilities that have been disclosed to HackerOne. You can see if they were low, how much were they paid, what the title was, and click on 'em, read them. So you can also see the interaction with this team as well. So it doesn't have to be always just the same hacker, they could just be based on the program. But if you really want to learn, it's just something recommend to everybody as you read the activity feed is, you can actually go to hackerone.com/activity, you can look at these and you can go to disclosed, and you can see all of the different programs. And all the companies are on HackerOne publicly. You can see TikTok for example, 14 days ago, they disclosed this. You can click on it and read it. And this is the best ways to honestly learn. So sometimes they don't disclose the whole thing, they give you a general idea of how it worked. So you can't see all of it, but honestly it gives you an idea of how to do these things. You get to understand what kind of vulnerabilities they have. And the same thing with Bugcrowd, you can see there's CrowdStream, you can click on disclosed reports, and you can see sub-domain takeover for this government website, Log4Shell, which was huge, you can see someone disclosed to the Department of Interior, and if they have disclosed it fully, you can also read the entire thing. But you see how- - That's great, 'cause you've got all the history of what people are actually doing. - Correct. - And you can see the submissions as well. So you can see how to write a report, is that right? Or get an idea of what to do. - Correct, yeah. - It gives you an idea of, what did they include for the... This is exactly what it would look like for a hacker too when they submit it to this program. So you can see all of their information right here as well. And Log4Shell was huge, not too long ago, and people here could literally see how this person found it. Where it was an injection point, it was in this base right here. And how did they catch it? They used this net cat, and it came back and you could see the entire interaction, and then what the company said, what the hacker said, and then the entire interaction of its own as well. If you're new and you want to get into bug bounties, HackerOne has this company called Hacker101. To you go to Hacker101, you would need a HackerOne account, but this is where you can learn. You can go to getting started, you can learn how to get started, how to write good reports, how to ask for help, but even better you can go to videos right here, and you can see Stok, and you interviewed Stok recently, he did a video for Hacker101 on Java Script for hackers, that's featured right here, but you can see all of our different content here. So if you wanna learn about web hacking, there's all the different content you can learn. If you wanna learn from some of our top hackers, we have done two seasons of mentorship Monday, you can look at how to pen test, you'll see our guest, myself and RA when we interviewed them, and that's a really good place to start and also learn from others in the industry as well. So I highly recommend going to Hacker101 to learn, but the best part of it is, it's a CTF site, which is behind a login, but once you get a HackerOne account and you go into Hacker101 and play a CTF, what happens is, if you solve these CTF levels, if you solve 26 points, so put it this way, each flag in each level has a certain number of points. It goes anywhere from six points to 26 points, for example, right? If you get 26 points, that equals one private invitation. So all the programs that I've shown you are in the programs that are out there. These companies have private programs that are only open to a small number of hackers. So they get invited privately to inside the whole world being able to see it, like some of these programs that I showed you like TikTok for example, when anyone in the world that hack on them. These programs are designed to stay private, for people that haven't been given the privilege to get invited to hack on 'em. So you can get those invites if you go to Hacker 101 and solve all of the CTFs. The more CTFs you solve, the more points you get, and the more points you get, it equals to more invites as well. - How do I start? Let's say I wanna hack the PayPal or government website. What do I do? - You go to hackerone.com, you click log and you create an account. Let's just make one. Obviously we're a hacker, I'm gonna put Ben NahamSec. I think NahamSec is already taken by me. Well, let's try it, NahamSec2. You wanna give it an email address. Let's see if my email works. You wanna give it a password. You wanna give it a password here, and we're gonna create an account, and hopefully this works. Once you make your account, you'll see something similar to this, we may put you in the Hacker dashboard, I'm not sure. But if you get lost, just always click on the top and go to your Hacker dashboard. So this is what it looks like when you log in, it shows you a number of different things. It shows your stats, it shows the number of vulnerabilities you found, you can go to my programs. This is where your private invites would show, if you had anything, if you have any invites already, go to pending invites. But I want to talk about a few things in this setting. Let's start with the settings first. First of all, the settings, very straightforward, if you wanna upload your avatar, you wanna put your name, your username, your website, location, anything you wanna give up, that's not required, but you're welcome to put that information there. I'm gonna skip a lot of these things, the most important thing here is your tax documentation. If you wanna get paid at some point, they're gonna send you a link, it's gonna show somewhere in here. You have to file your tax documents. I don't think I have that on here, because this is not my main account, but I think on the payment tab is where it's going to ask you to do this. So it's a sign a tax form, you can click on it, and you won't get paid until you do that. So make sure you do that before you get paid. But invitation preference. This is very important. If you want to receive invites to private programs, you have to make sure this is on. This is on by default usually, but I can't just br sure enough, I wanna make sure it's on, you can always turn off if you don't want to. If you don't like cryptocurrency programs like I do, I don't like hacking on cryptocurrency programs. I don't wanna hack on any of those. You can turn it off, and if you have preference on how much money you want to make, you can also change that. But I think they don't allow you to do this until your balance, the average is a little bit higher than this, but once you make a little bit of money, you can change that right here. There is something I wanna make sure I highlight, and a lot of people don't know this. It's not really private information, but it's also not something that newbies know. If you do finish one of the CTFs and you get an invite and don't like it, you go to the program on the bottom-right corner of the page, I can't show that unfortunately on the stream, but if you go to the bottom-right of the program, I'm gonna pull up a fake program, in the bottom, it says, leave program, somewhere here. It's gonna say, leave program, and a pink button. Click that. There's gonna be a survey. If you fill in that survey and you leave the program, or you decline the invite, you don't wanna, you don't have to accept every invite, if you wanna decline it. But if you fill in that survey, what will happen is, they will send you another invite within 48 hours. So you can recycle through those. Just because you've been given a program and you don't like it, it's not the end of the world. Relieve the program or decline it. Because when you get an invite, you can actually see what the program looks like. It shows you some of this metadata at that top, it tells you what company it is, if you don't like it, decline the invite, get another one. So I just wanna make sure people understand that- - That's good advice, yeah. - You don't have to hack on these programs. You're getting one invite, make account for yourself. Now let's say you wanted to hack on a company like TikTok. So let's say you found a vulnerability, you've read all of these scope information, you've found the bug, what do you do? You go up here and you click on submit report, and here you get to pick the asset you found the vulnerability. The *tiktok.com means that the asset you found sits on tiktok.com. So it could be ads@tiktok.com, it could be test@tiktok.com, that goes all here. And the specific ones like ads business, you can select them right there. So let's say I found a vulnerability in developers. Okay, I'll click that. So the asset becomes that. And then you wanna type in the type of vulnerability that you found. So let's say I found the Cross-Site Scripting, I'm gonna type in cross, and I've found a reflected XSS, I select that. And then here is where the CVSS calculation happens. This is a very subjective thing, but it's a great way to communicate with the security team to make 'em understand how you have assessed the severity of your vulnerability. You can just go high or critical and just guess, but if you do that, you're not telling them why. This is where you make your case, it calculates it for you. If you're not familiar with CVSS, if you go to Hacker101.com on the main side, and you go know getting started, then you click on this, how to write a good report, we've broken now what CVSs and CWER. CWE is obviously the earlier step of the vulnerability type, and then CVSS calculated, you calculate how your vulnerability is. It's a critical, is it a medium severity, whatever else. And there's some examples for it too. I'm gonna try my best to explain these very quickly, but if you wanna learn 'em in depth, please go to that website on hacker101.com and learn it. So, first of all, attack vector, how are you accessing this particular bug? Or do you have to be on a network as in on the internet. This is where we are on the internet, I'm gonna click network, but if you have to be on a local, so let's say you're hacking on maybe a smart device, and need to be in a local environment, like a local network, you click local. If it's a phone for example, you have to have physical access to it, you go to physical. But for most of these bug bounty programs, especially when it's web, you're gotta go to network. Attack, complexity, very straightforward. Also, you can read the definitions here too. But pretty straightforward, how hard is it to export this thing? So if it's super easy, there's not much, it's low. But if they have to do a few different, like you have to bypass a few things, you've found some crazy export, you go high. Privilege required, it means, what kind of account do I need in order for me to exploit this? Do I have to register? If so, can I register on my own, or do I need to be invited, or do I need to pay for it? Or do I have to be a part of an organization? Or do I have to be an admin, for example, for this to work? So this is where you decide. If you don't have to register, then none. In some cases, if you can't self-register, you can still be none. If you have to be an admin account or an organization owner, then obviously that's gonna be high, because it requires a higher privilege. User interaction, does the user have to click or do anything for this to be exploited, other than just linking them to that thing? So for example, does the user have to go to their profile, enter something for this to work? Or search for something for this to work? Those are where you will have to agree on the user interaction. So we're gonna say no user interaction. The scope of this means, is this bug going to give you access to more than just one thing? So for example, is this going to give you access to a server? Can you execute commands on a server for example, or can you pivot through it, or whatever that is? You can do changed or unchanged, we'll do unchanged for this one. Confidentiality is pretty self-explained, how much confidential data can you get access to? Pretty much with this. And again, with every vulnerability, this definition could kind of change in how you approach it, but I just wanna generically, just go through all these definitions and talk about 'em. So let's say, with this vulnerability, you get access to their social security number. Probably on the higher end, especially if you're able to get everyone's social security number. Integrity is, can you modify this data? Could it be trusted? Could it be altered in any way? It could be taken in different, we're gonna say it's low. And then availability, can you decline access to this particular site or this functionality through this vulnerability? And if it's low, if you really can do it then it's high. If it's maybe low, and then if you can't, then it's none. So we're gonna say none. And if you go up here, you see it's medium 5.5. And these are what we call the CIAs, confidentiality, integrity and availability. These three could dictate how high your vulnerability goes, especially with the scope being changed. So if the scope is changed and all these are high, then it's gonna be critical, but if you click on all these, make sure you have an explanation so you can tell the company why you picked these. And you can do that in the report, and I'll show how you can do that. - Because they might say, it's not what you think it is. - Correct. Or they may not understand why you... The whole thing is, when I write a report, I assume they know nothing about the product, and they don't understand anything about what I'm doing. And I'm building a case for why they should pay me for a critical vulnerability versus medium by this report. So the title is where you wanna communicate what vulnerability you found. So let's say we found Log4J for example, Log4J in business.tiktok.com, leads to remote command execution, via file.php, or like the parameter. You wanna give 'em some information about their vulnerability? So what kind of vulnerability, what class of vulnerability? I know we said XXX earlier, but I'm gonna change it down here. What name, if it's a known vuln, what is it, where is it, and what does it lead to? And I will give a file name or a path and parameters vulnerable. And doesn't have to be in this order. But these are the information you wanna give them because it helps 'em understand where exactly this vulnerability is, and if somebody else has reported it already, unfortunately for the hacker, submitting this it's going to be a dub, but it helps them find this information faster. The next thing is a description, this is where you talk about your bug, you type in the summary, you can say, \"I've found a Log4J vulnerability while looking at this website, this parameter seems vulnerable, and it gave me RC,\" for example. Just a quick short, 140 to 180 characters like a tweet, you don't wanna write an essay unless it's something really important you have to reference to. And then the step to reproduce the bug is very important. The way I write this is, I go all the way to the beginning, and everything that I have to click on. So if it means log in, I go, log in to business.tiktok.com, or even I say, register a new account if you need one, and log in to business, you have to make they understand what's happening, you Wanna go all the way to the top, and tell 'em from the beginning. Let's say you have to click on a menu on the right-hand corner. So let's say you have to click on this top button on the right-hand side, I'm gonna say, click on the arrow pointing down, next to your avatar on the top-right corner and click settings. And I will also put a linked to settings right here. So if I go to settings, this is what the URL is for, I'm gonna go back and I'm gonna put that here, just so they can also see how that works. So they can directly go to it, or they know how to find it. Just because someone works at a company, doesn't mean they understand this particular product completely. Don't assume they know everything. And then you do that all the way through. What did you, what code did you ex, what payload did you put in? All that stuff goes here. And then if you have any supporting material or references, if you have a good Log4J reference or an article that you learned from it and you want 'em to see, you put it there, and then any screenshots or references go there. And this is where you build your case with CVSS. So what is the impact? With this vulnerability, I can execute on this side, and gain access to X, Y, and Z. This is very, very short because I don't have really a vuln, but the X, Y and Z is very important. Why are you saying this is confidential and integrity is high? Can you modify data? This is where you put that. You say, \"Hey, with this vulnerability, I can gain access to the server, I can execute commands, which means I can take down the server, modify files, or also access private data that's hosted on this server itself.\" And once that's all done, you can review your vulnerability here, you can click submit, I'm not gonna do that here, 'cause I wanna send them a spam report. But once you send this to them, they will receive a report, and what will happen is they will take a look at these reports and get back to you. There are a few terminology with reports, one is triage. In most cases, it means that they're looking at it, investigating it, and it may be valid, but in some cases it may mean that they've only looked at it and they're still investigating it. So they could come back and say, \"Hey, this is invalid, this is not a bug to us,\" they could say it's a duplicate, things may change. A duplicate means that it's already been reported by somebody else, or unfortunately, internally they knew about it. And it happens a lot of times, but the companies are very, very good at communicating that, they're getting better at it. Informative it means that, \"Thanks for the info, we don't consider this a bug, it's a functionality. It's not critical enough to us, it's informative. It's information that we we like, we're not gonna fix it.\" And not applicable is pretty much, \"Hey, this is completely not a vulnerability, it shouldn't be reported.\" It's out of scope for example, that proper doesn't belong to them and that kind of stuff. - So you've shown us how to submit a report of a bug that you found. For the actual hacking portion, you're just going to their website and trying things. Is that right for the URLs that are in scope? - Correct. - For PayPal or for Uber or one of those companies, you can basically hack anything on like paypal.com, or uber.com, is that right? - Correct. So let's look at PayPal really quick, just as an example since you mentioned it. So this is what PayPal's program looks like, and all through at the bottom is their scope. So PayPal actually owns some of these other ones, like Venmo, Paydiant, Braintree Gateway, and paypal.com. So you can hack on all of these. I enjoy doing this process called recon or reconnaissance. Reconnaissance is pretty much, it's a military term. You want to see what areas are friendly, what areas are not friendly. In our case, we just wanna know what areas are owned by this company. One of the ways you can do this is just opening up Google and typing in the site, and that brings up a lot of different PayPal sites. But there's this concept called Google Dorking. Google Dorking allows you to be very, very specific with your searches, and this is not just for hacking, but it becomes very, very helpful when you're hacking. To have this thing called site, you can add this to your search, and it would only search within that site, paypal.com. So you can see now it's only giving us PayPal results, www.PayPal. If you click on page nine, it's gonna give us ww. What you can do is, you can do a minus sign or tuck sign and say, I don't wanna see this domain. Oops, wait, lemme go back. So I type that in, and no longer shows any of the www domains, it now shows any payouts. You can do the same thing with payout or business. I can go demo, 'cause there's a bunch of 'em down at the bottom, and I'm gonna remove developer too. And that no longer shows those anymore. So you can do this with every domain that keeps seeing come up, and it gets rid of 'em. You can do other things, so you can actually search for particular things in the URL. So if I want to look for something that's for example, an admin page, you can type that in, it's going to go to this page, admin/admin.shtml. This thing has a donation with an email admin, but it's very specific, it shows you exactly that word. Let's say you want to look for a particular extension. Like you wanna look for PHP files. You do extension.php, that's not good. We're gonna do jsp, it brings that up for you. So you can click on it and see what those pages look like, if they're still up there then you can actually test them. You can do a number of different things. But those are my favorite ways of quickly looking at an asset. This alone is a really good way to do it. It's pretty much anything that Google has crawled and indexed, but it's not everything. But it's still a good place, this is one of the first things I do wanna hack on a new company. Just to gain an idea of how big this company is, how big that domain is, what kind of assets do they have, how do they name their assets and all that good stuff? - Do you have sort of a game plan, or a process or something that you go through? Like this would be one of them. You know the problem when you're starting out, to get that kinda knowledge and experience can be hard. - Yeah, absolutely. - What's your sort of thinking or game plan? - So I use a lot of what's called certificate transparency. Cert transparency is pretty much, anytime a company has a new sub-domain, so a sub-domain is that thing before it comes to the domain. So let me open up a notepad, it's gonna be dot com dot net, it could be dot cloud, whatever. Some companies may own multiple. We don't know that. We have to search that and figure out what domains a company owns. And I'll talk about a little bit of that in a little bit too, but I wanna talk about what a domain and sub-domain is. And then this is a domain, so it's paypal.com, and anything that comes before this is called a sub-domain. So www.paypal.com, that is a sub-domain. Ads, sub-domain. For example, for Google, if you go to drive.google.com, that's a sub-domain, mail.google.com, another sub-domain. Docs, sub-domain. So all the sub-domains that belong to this thing. There could also be sub-domains of sub-domains, we typically call those environments. It could be something like dev, so it could be mail.dev.google.com. That means that the developer environment, that they're deploying news stuff too, which is really important. We'll come back to that in a little bit. But this could be the developer's testing environment that's also accessible to people outside the organization. Sometimes they have new functionality that you can test, there's sometimes wounds that are thereby default, they're not supposed to be there, they forget about 'em, all that stuff. And it could also be the other way, it could be what we call a permutation. It be mail-dev, so that tells you that's a dev site of the same sub-domain, mail.google.com, and so we call that a permutation. So it could be either a dot, which could be a sub-domain of a sub-domain, put an environment, or it could be a permutation of that domain, which is mail-dev.google.com. It will all make sense in the bit I promise. So what you can do is you can do search transparency. 'Cause that was mentioned this, every time a sub-domain comes out, and every time you go to these domains, it redirects you to, so let's you go to mail.google.com. It always redirects you to htps.mail.google.com, right? Because that domain has an SSL certificate that also gets logged through these search transparency websites, so people know when a false certificate has been issued for a company. you can see out in there. So everybody's sub-domains have a cert, if they have a cert attach it. Again, not every sub-domain has cert, but almost 99% of them do, they gets logged in one of these companies like cert.sh, which they just have entire list of them. So what you can do is you can actually search for these. So I'm gonna type in paypal.com, and because of how big PayPal is, this may take a while, this percent sign means anything that has this pattern of paypal.com, dot paypal.com. I want you to show it to me. And after a few moments, - [Automated Voice] A few moments later - But it comes back and it gives you these. It gives you a lot of good information. It tells you, when was it logged, when was it first seen? It shows you the domain for it, it shows you who issued this and a ton of different information. What's cool about this is, some of these domains may not come up on Google, but you can see every single bit of 'em. And if you wanna look for a dev site, you can tap into the word dev, and you can see beta developers there. Is there a dash dev site, beta developer, API, let me zoom in a little bit so you can see that. - If you found a bug in their developer site, that would be something that you could submit, Is that right? - Correct, yes. So the developer sites, I personally like to go for the dev sites for multiple reasons. One is because it's built for testing, so if you take it down on accident, it's better than the main site coming down. But B, they're very loose in some cases. First of all, a lot of companies don't want this to be exposed. Some companies don't care, some companies do. If it's exposed, they may have log files, they may have more functionality, they may be looser to test, and it's just easier to test these out. So I always go for these just because they're more fun to look at, just because of the aspect that is a testing site that may have information that the regular site, that's a product site, or production version of it doesn't have that already. - Just to make sure, like when you look at the company, the specific company that they allow you to look at, all sub domains, is that right? - Correct, yes. So for cases of PayPal, they do this. But with Yahoo, they were very specific on what you can and you cannot hack. So keep that in mind, if you go outta scope, you may not get paid, they may ban you from their program, then they may be unhappy with you. So just make sure this says, it's star.paypal.com. So you can do all of this, and it gives you a list of all these sub-domains. If you're good with Python, you can write a Python script. So you can actually, if you want the output to be in JSON, because you want to parse it yourself with... If you want it to be in JSON, you wanna parse yourself with PayPal, with bash, whatever. You can also do that. There's also something else you can do with this. But before we do this, let's go to paypal.com itself, and take a look at their certificate. Do you click on that little log that shows that it has an SSL cert, we go to connection is secure, and we look at the security certificate, it says valid, we go to detail. There's a few things that are really important to look at. One is the issuer, you can see who issued it. Not really that important. There's a subject that's really important, because the subject here gives you the common name, which is a name put aside, as the organization that owns it, which is PayPal Inc, and an organization could own multiple domains. So if a company like PayPal says, \"Hey, hack everything we own, and you don't have a list of domains, knowing who the organization that owns the certificates are, is very important because then you can use something like that certification I showed earlier, and list all of the assets based on the organization, inside the domain, which I will show a bit. And it tells you where it was, the location sometimes could be helpful. Some companies are in very specific cities that nobody else is in, like Netflix is a big one, I didn't know this. My friend Dylan showed me this actually. And they're in a very, very specific city. There's no other tech companies in that city. So if you do base on city, you find all their internal domains as well. And then there's also the DNS down here, you can click on. It gives you more domains that are shared right here. These' are the alternative domain names that share the same exact certificate, and it gives you more domains to look at. It gives you an idea of what other domains they may have. So for example, PayPal objects is one, Venmo is one, if you didn't know it already existed, braintreegateway.com. But I wanna go back to what we just talked about, the subject, and I'm gonna copy PayPal Inc, as the organization. And we're gonna just jump back into start data stage. I'm not doing a lot of hacking really, it's mostly showing how I find more targets to look at- - Yeah, we're here to start with that. - Correct, so you you wanna see where it go? So you go right here, you go to the organization name, and you type in PayPal Inc, we can just PayPal, if you wanna show work anyways. Sometimes the names of the domains and companies don't match, for example, Yahoo used to be owned by Verizon Media, now they're Yahoo again, and they used to be called, Oath for a while. So those names can make a difference, especially if you wanna find all the assets that they own, coming up with that name is very important. - So you just clicked on advanced, and then it brought you to this page here. - Correct. There's number of ways you can do it. It's just, I wanna show the different things you can search by. So now you can see right here, there's a column that says, matching identity, which is PayPal, Inc. And now we see some other domains like paypalinc.com is one of 'em. We see some more qa, so remember when I say it might be a dev.qa is another one? It could be test, it could be a bunch of different things. Somehow tools.simility is owned by them. I would do a who is on this domain, to make sure it's owned by them and not some other company, but PayPal Corp is one of them. So if you're good at programming, if you're good at bash at least, or even Python, you can do it with Python, too. What you can do is, you can dump this into JSON format, so you go output equals JSON, and you can take the domains and then rerun the first query where it was looking all the domains, so the sub-domains of those domains, so you get a list of all the domains from here, and then you go back to the other search with bash, you code something that automates it, then you get a list of all those sub domains as well. And now you have like thousands of thousands of thousands of domains to look at. - I think a beginner would go to paypal.com and try and hit that straightaway. But what you're trying to do is find stuff that's more hidden, not- - Correct. - Obvious, yeah. - They can do both ways. There are some hackers that are really, really good at looking at the core site. And just because of people that have looked at the core site doesn't mean there are no bugs on there. Lemme make that clear. These companies are deploying new code every few weeks. New functionality, new changes, new things, right? If you get bored and you wanna find some other stuff, go here and look. Like just typing in admin right now, it's giving us admin.paypalinc, doesn't mean that you can access them, but there are some admin sites. Your admin that I applied at and bill me later, all those different admin sites you can look at. The whole idea isn't to just say hack on all of these, it's just I'm bored of looking at the core PayPal app, I wonder what other things they have. I'm just gonna go look for it. - But I like what you said about looking at dev sites, because if it's a dev site, they probably have done everything they need to, to make that code as secure as it should be. - Yeah, I know, so one of the things that I personally do, there are a ton of good open source tools out there. We can use them to gather more information on all these assets. So what I do is usually, I get a list of domains, I use tools like httpx, which is an open source tool on GitHub, just go to github@help.com, look for htpx it'll come up. I will feed all those domains, so I save them all into, like an alldomains.txt, and then I feed it into httpx, and httpx has a lot of different options, it allows you to get the page title. So it tells you what's on the title of this picture for this one, it says, powerful tools for your business. It will grab that for you, every single site for you and show it to you. It will show you if it's accessible or not. It will show you the response code. So if this site, it requires some sort of an http password, it would tell you that. So if you're not sure of response codes, look into them, when it tells you what that response code is, when it comes back. If a site is visible, like the one that I have on the screen right now, it comes back as 200, that doesn't exist, comes back as 404, it tells you what that is as a part of it as well. You can also take screenshots, there's a bunch of different screenshotting tools you can use. You can take screenshots at these sites. You can say, \"Hey, I want you to open up this file, I want you to do alldomains.txt, and I want you to screenshot 'em. And you can see what they look like at a high view. You can go, \"Oh, this one has a login, I'm interested. I wanna see what this site does,\" and go after it. - Well, that's interesting, yeah. - It all comes down to what you want to do. So if you are very new, what I want to recommend to you is, go to HackerOne, there are a ton of different programs you can hack on. There's two sides of this bug bounty thing. Before when the comments who are bug bounty hunters, come after me, please bear with me. I always say this, and I always get chased because of it, you shouldn't be doing a lot of work for free. I'm not saying go and give up your free time and work for free. What I'm trying to say is, go hack on programs that are not being hacked on by the pros, by the top million dollar hackers, by the full-time bug bounty hunters. If you're brand new, focus on learning. And I personally think that learning is a lot easier with programs that don't pay you. A lot of people who are gonna come after me, the top bug bounty hunters hate this piece of advice, but it's real. And I've done this with a lot of my students who I teach, people that I have mentored, I tell them, \"Go hack on a program like GM, Department of Defense, because hackers like me, who spend a lot of time on these programs, aren't hacking on them. 'Cause they're not paying bounties, and I'm doing this for money. So let's go to IBM for example. What I just showed you right here is very important for IBM. IBM is saying, IBM products. We don't care which ones, as long as it's owned by IBM, it could be ibm.com or any other websites or domains owned by IBM. So you can do what I just showed earlier, and find a list of all their big assets, and then go after them, and find these websites that you can self register. So if IBM has this developer sites, that's like for businesses for example, sign up. Go on there, look for vulnerabilities. Next thing, find this expense site that could be self-registered, make an account. The self-registered sites are the best because there's a reason why they require you to register and have an account. Go on there, look for bugs, look for idoors, look for XSS, look for SSRF, whatever you're good at. Make a list of the top three things you want to learn, and learn while hacking on programs like IBM that have a ton of assets, and a ton of the top hackers aren't looking at them- - So in other words, you're saying, because the competition is so high for all paid programs and the guys with lots of experience are already there, try and go somewhere else where they're not spending their time, and your likelihood of finding something is better, is that kind of the reasoning? - Correct, that's exactly what it is. It's just a program like Yahoo, don't get me wrong. If you can hack on Yahoo, great, awesome. Make your money, no, one's gonna tell you not to make money. But it's gonna be a lot harder because they have been around for years. If you go to these directory pages, there's a lot of companies on there, and a lot of people are looking at 'em, but with a company like IBM, it's so huge, and even if the pros were looking at 'em, there's so many assets that you can't even test 'em all at once. You can't automate a lot of it. - In life you gotta pay often for education. Sometimes you gotta put in the work before you get a return. So I can understand the logic of what you're saying, it makes sense. - Department of defense is another good one, who doesn't wanna hack the government? They have assets that date back to like 2008, that are still online for some God off for a reason. Who's gotta find them? See, this is one of our top hackers, CDL, he's still hacking on Department of Defense. If you go to his page, you can see he's checkmarked, he's one of the well known hackers out there, he's a really good dude as well. Very smart, you can see he's hacked on PayPal, Epic Games, Yahoo, but he's still going strong on the Department of Defense too. I do these kinds of programs for research purposes. If I wanna make a case for a research, they're great place for practice. And I still go to them. - Well, I think it's like you said, I mean, if you young and you wanna get a job somewhere, putting that on your CV, that you've hacked the Department of Defenses is gonna look really good? - Absolutely, and they can see here. If we go right here, all hackers, they can see who these hackers are, and they can verify that you have hacked on their programs before. I got my first job, so I did contract work for a while as a security engineer. My first job was purely because I hacked that company. I sent a report to the them, and they gave me like a product for a year for free, and I ended up working for them because I had hacked on 'em. But on my resume that I submitted for the interview, I had exactly this, I'd hacked some of these free programs, and I said, I had found XSS or SQL injections in these programs, and I had listed them. And that was a great way to show experience, because I've hacked real companies that have real products out in the world. And it's a really good way to showcase your experience as a hacker as well. - This is a problem a lot of people face. How do you get experience without experience? Companies won't give you a job, because they ask for all this crazy experience. But what you're saying here is, this is a great way to get experience without having to go through a gatekeeper, yeah? - Yeah, absolutely. First of all, it's a good place to learn. I don't think I've ever done a web class or training, honestly. From somebody who has products about teaching, I don't believe that you need to do that at all. I think you can learn all this stuff on your own. There's a number of books out there you can read, there's YouTube channel you can follow and watch, there's free content like Hacker101, the Burp Suite Website Academy, they're all free. I love calling bug bounties, the research playground. It's where you go and prove that this research, this idea, these bugs, your experience, whatever it is that you're working on is true. You can show that you have these experience to find these vulnerabilities online as well. - Some people might find it easier to follow someone, and you've got a course, haven't you, that you've created? - I've created a course, I don't think you need to take, as much as I'm supposed to be selling my course, you don't need to buy the course. Everything you want to learn with bug bounties is available for free, it's just there's a structured way of doing that. I can't learn from a class, I have to do things on my own. I need hands-on experience. The reason why I made that is because people want to learn from somebody in a structured way. Hacker101 CTF is a really good way to learn, and also connect yourself directly to these companies by getting invites to these private programs. - The way that you put that is the reason I think everyone should go and buy your course, because you're not trying to flog it, you created that to help people. In England we say it's horses for courses, so different options for different people. So if you like structured way, then go and get your course. But have you got any books that you could recommend? - I have a few, actually let me grab them. This one is called \"The Web Applications Hacker Handbook.\" What I like to call the hacker Bible. It talks about all the different vulnerabilities. It's pretty old, don't get me wrong. It's kind of old, but it's the one thing that I recommend to a lot of people. Burp Suite is a very well known tool that a lot of hackers use, it's by this company called PortSwigger. What it does is, it sits between your browser and the internet as a proxy. Every time you do something on the browser, it sends a request and Brooke, lets you see that request. It tells you the basics of it, I highly recommend it. If you get through this book, you're on the right path. If you wanna learn about mobile hacking and Android hacking, this is a good book. Not everyone wants to hack websites, so to mobile Android phones, this is a good one. If you want to learn Python for hacking purposes, pretty small book, really not a whole lot to read, but they give you some good examples of how to do things. I highly recommend checking it out. This was one of the books that I read in my early days. I don't even know why I bought this, I bought this on accident, I think. But it helped me a lot. Because I was doing a lot of like interviews for security engineering jobs. While I knew how these vulnerabilities existed, I couldn't explain how to fix them really. And getting an idea of how to fix things also helps you become a better hacker because you know how to deal with the quote unquote, fixes that may be in place and bypass them. These two books, however, are my favorites. This one is called the \"Real-World Bug Hunting,\" by Peter Yowarski, who was the top hacker of HackerOne. Originally it was an ebook. So if you do a Google search on HackerOne, and you put Peter Yowarski, and web hacking 101, you get the early version of this book for free. You just gotta do some hacking and Google search for it, I showed you how to search for things. Use that to find this book for free, an early version of it. The new version has a lot more data, he talks about different vulnerabilities in here, and I'm pretty sure he still has examples of 'em too. I think he analyzes different vulnerabilities right here. I don't think he can see that, but it shows you the bounty amount, the URL, the report number and all that stuff. So it actually analyzes how these vulnerabilities work. This is a recent book, I really enjoyed this, it's by a friend of mine, her name is Vicky Lee. If you're not familiar with Vicky, go to her website, she does an amazing job at writing technical content. I've never enjoyed reading more technical content in my life than reading some of Vicky's blog posts and stuff that she has done. Talks about different vulnerabilities. I think this pretty much covers all the big vulns that are out there from SQL injection to idoor, to recon, to remote code execution, access controls. I'm trying to see, there's some Android apps, API hacking. It's a like 400 pages, a really, really good book. I highly recommend going after this one as well. - What order would you read in, like if I was starting, and there's a lot of books, which one would you start with? Like number one, two, three. - Start with this one, Just because it teaches you a lot of basics. It's a little bit outdated, but I wanna call it speed read this, if you have to. And then the second one would be between these two, so doesn't matter which one you go after. I would say preferably this one, because this is more focused on what the vulnerabilities are, and it's gonna be similar to this one that I just showed, but this is more recent. There is more techniques in there, more recent vulns, more research has been done on some of these vulns. You may get more value at this reading, that you can get in combination of the other one. And then once you've read this one, the reason why I said read this one third is because this is examples from hactivity, and it explains it, and you can understand why these things work, because you know the vulnerability types as well. So you can see this one last. And then if you have more time and you wanna learn how to code, then I would go through the Python book, and then down the list of what I showed earlier. - If you like reading, the books are a great way to go. If you like watching videos, HackerOne's got free content that you've created and others have created, is that right? - Correct. So you can go to Hacker101 and learn. Honestly, there's so many content creators. This is one of the things that I say to people, not to sound like an older generation of hackers, but seven, eight years ago when I first started, none of these websites, none of these YouTube channels existed. The only way for learning was peer to peer. I would reach out to other hackers who are my friends, Big Shout is my friends, Smiggles, Zyte, ZLZ, Donut, there's a bunch of different NT, there's a lot of different people that I've reached out to in the beginning. And it was just learning from each other. And then people were blogging some other findings. So there were blog posts you can go read 'em, you can learn from this hactivity, now you can read 'em. But those were the only options. Now there's YouTube channels. You have the Stok's, you have Farra, you have all these different people that make content. I don't wanna name specific people, I don't wanna forget (drowns in crosstalk) - Give us some of your favorites, but I didn't wanna put you at the spot. Like give us like two that come to mind, and we'll just have the disclaimer that it's not everyone. - LiveOverflow, who I like to call EdOverflow who'll get this joke when he sees it. Stok is one that you have interviewed, his content creation is amazing, the way he comes across on a camera. He's so all natural when he explains things, but he does a lot of collaboration with other hackers. Fara Hawa I think I saw you said her last name. She works on Bugcrowd I believe. She explains different things, she breaks 'em down and explains 'em. Katie InsiderPhD, I haven't seen her make a lot of new content, I think she's busy with work. She has InsiderPhD. The cyber Mentor used to make a lot of good content, I don't know if he's doing it anymore. He's got his business going, he has a lot of certifications. If you wanna learn about certs, learn from a course again, he has 'em as well. Assetnote is a company, as a part of their marketing, they're doing what they call Bug Bounties Redacted, it just started doing that last week, when they talk about the bugs that they have found. And then WebSecurity Academy by PortSwigger, it requires Burp Suite, but they teach you how to use Burb Suite and how to find these different vulns, and it's a very, very good way to learn as well. If you wanna spend some money, big shout to TryHackMe, Hack the Box, Pen Tester Lab, there are a lot of different platforms that are learning platforms that you can learn from, CTF Challenge is a really good one, Bugbountyhunter.com is a really good one by Zseano. Zseano himself has a really good YouTube channel and content as well. And then last but not least, I also have a YouTube channel if you wanna come learn from me. And if you like the stuff that I did also, I do I'm on a stream. I do mostly stream than I'll make a lot of YouTube videos, to be honest, I like the one-on-one interaction of doing in live. - We've been going for a while, and I wanted to... I've got a whole list of questions here that I wanted to ask you, and we never got a chance for that. But I think we'll have to get you back for another one. Any lost thoughts? And I'll put all your social media stuff below, I'll make sure that people go and subscribe please. But any encouragement, lost thoughts for people who you might find this like overwhelming? - So if you're watching this and you want to really get into bug boundaries, go sign up. Go sign up on HackerOne, go sign up on Bugcrowd, whatever one looks better to you, Intigriti, whatever you like. Sign up, look for a program that you want to hack. Let's say, do you like cars? Go hack Ford, go hack GM. Do you like technology? Go hack IBM. Do you wanna hack the Department of Defense? Whatever one sounds interesting to you. Doesn't matter what other people say, what looks interesting to you is the one that you should go after. 'Cause then you have a little bit of passion of wanting to hack that company. And then make a list of vulns that you really want to learns, XSS is a really easy one. CSRF cross request forgery, really easy one. Idoor, really easy one. Those are the three I think you should start with. Go learn those, go do different levels at CTFs or whatever one can get your hands off, go do those offline, learn how they are, learn how to find them, and then find that company that you like and really focus on those three vulns. To find a cross that scripting, make it your goal, \"By the end of the month, I'm going to report a cross that scripting.\" Write it down, put it out there in the universe, and make it happen, and go, and actually look for those vulnerabilities. Once you get them one first vuln, if it's a duplicate, doesn't matter, you found the valid bug still. It doesn't matter, it's not a race. You found something valid, you should be proud of it even if it's a duplicate, but then continue building that momentum and hack and find more vulnerabilities. - Ben, thanks so much for sharing your wealth. this is years and years of knowledge and experience. And I really wanna talk about your journey a bit more in another interview, so thanks so much for sharing. - Of course, thanks for having me, and if anybody watching this, if have any questions, tweet at me, send me an email, I'd love to help everybody out, happy to help in any way possible. (upbeat music)",
    "transcript_keywords": [
        "Red Bull",
        "programs",
        "lot",
        "program",
        "things",
        "good",
        "hack",
        "thing",
        "make",
        "bug",
        "learn",
        "people",
        "give",
        "bug bounty",
        "company",
        "hackers",
        "companies",
        "click",
        "bounty",
        "hacker"
    ],
    "transcript_entity_values": [
        "a ton",
        "The Web Applications Hacker Handbook",
        "eight years ago",
        "YouTube",
        "three",
        "Stok",
        "one third",
        "JSON",
        "HostGator",
        "Apple",
        "32",
        "Java",
        "about a month",
        "CSRF",
        "CV",
        "Valve",
        "Donut",
        "Burp Suite",
        "XXX",
        "HackerOne",
        "two",
        "CDL",
        "CWER",
        "Europe",
        "Daycan",
        "second",
        "37",
        "66",
        "100",
        "YouTube",
        "Google",
        "WordPress",
        "50,000 miles",
        "Lyft, Snapchat",
        "jsp",
        "Python",
        "PortSwigger",
        "WebSecurity Academy",
        "JSON",
        "Intel",
        "NahamSec",
        "XSS",
        "David Bombal",
        "Bible",
        "20",
        "United Airlines",
        "between 6,000 and $40,000",
        "a few moments",
        "2013",
        "Facebook",
        "Venmo",
        "PHP",
        "Localize-",
        "Android",
        "Log4Shell",
        "Communify",
        "RC",
        "htps.mail.google.com",
        "API",
        "48 hours",
        "CVSS",
        "Vicky Lee",
        "NahamSec",
        "only three",
        "Snapchat",
        "GM",
        "55",
        "a couple hundred thousand",
        "PayPal, Inc.",
        "2008",
        "httpx",
        "Epic Games",
        "Z.",
        "Burb Suite",
        "CTF Challenge",
        "early days",
        "the Burp Suite Website Academy",
        "54",
        "14 days ago",
        "Stok",
        "Paydiant",
        "last week",
        "CTF",
        "one",
        "CrowdStream",
        "Braintree Gateway",
        "Seraphina",
        "Smiggles",
        "Valve",
        "140",
        "404",
        "Seraphina Brochess",
        "Zyte",
        "England",
        "DNS",
        "Department of Defense",
        "IBM",
        "5.5",
        "10,000",
        "Ford",
        "first",
        "59",
        "Vicky",
        "15",
        "European",
        "YesWeHack",
        "Ben",
        "Lemme",
        "the end of the month",
        "Yahoo",
        "sec",
        "Three",
        "SSL",
        "years",
        "the top million dollar",
        "Farra",
        "a month",
        "Zseano",
        "nine",
        "the United Airlines",
        "iPhone",
        "almost 99%",
        "ZLZ",
        "EdOverflow",
        "Pinterest",
        "Verizon Media",
        "SQL",
        "2014",
        "like millions and millions",
        "26",
        "the Department of Defense",
        "every few weeks",
        "six years",
        "Ben Sadeghipour",
        "Yahoo.net",
        "the Cross-Site Scripting",
        "First",
        "TikTok",
        "Dylan",
        "Synack",
        "every year",
        "Tesla",
        "Ben NahamSec",
        "Brooke",
        "Fara Hawa",
        "the Department of Defenses",
        "PayPal Corp",
        "six",
        "Rockstar Games",
        "180",
        "CWE",
        "Hactivity",
        "Bugbountyhunter.com",
        "TryHackMe",
        "200",
        "seven",
        "third",
        "Netflix",
        "five",
        "PayPal",
        "One",
        "httpx",
        "Peter Yowarski",
        "Y",
        "all three",
        "the last 90 days",
        "Katie",
        "number one",
        "Intigriti",
        "like thousands of thousands of thousands",
        "101",
        "70",
        "400",
        "Idoor",
        "Google Dorking",
        "max",
        "Airbnb",
        "two seasons",
        "a million",
        "PayPal Inc",
        "GitHub",
        "Red Bull",
        "a year",
        "the Railroad Retirement Board",
        "Monday",
        "United",
        "almost $22 million",
        "Bugcrowd",
        "Twitter",
        "28",
        "40,000",
        "the Department of Interior",
        "Zseano",
        "LiveOverflow",
        "yesterday"
    ],
    "transcript_entity_types": [
        "QUANTITY",
        "WORK_OF_ART",
        "DATE",
        "GPE",
        "CARDINAL",
        "PERSON",
        "QUANTITY",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "DATE",
        "ORG",
        "ORG",
        "PERSON",
        "PERSON",
        "ORG",
        "GPE",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "LOC",
        "NORP",
        "ORDINAL",
        "CARDINAL",
        "CARDINAL",
        "MONEY",
        "ORG",
        "ORG",
        "ORG",
        "QUANTITY",
        "PERSON",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "GPE",
        "ORG",
        "GPE",
        "ORG",
        "PERSON",
        "WORK_OF_ART",
        "CARDINAL",
        "ORG",
        "MONEY",
        "TIME",
        "DATE",
        "ORG",
        "PERSON",
        "ORG",
        "PERSON",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "TIME",
        "WORK_OF_ART",
        "PERSON",
        "ORG",
        "CARDINAL",
        "PERSON",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "DATE",
        "GPE",
        "ORG",
        "PERSON",
        "ORG",
        "ORG",
        "DATE",
        "ORG",
        "CARDINAL",
        "DATE",
        "ORG",
        "ORG",
        "DATE",
        "PRODUCT",
        "CARDINAL",
        "PRODUCT",
        "FAC",
        "PERSON",
        "PERSON",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "PERSON",
        "PERSON",
        "GPE",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "MONEY",
        "ORG",
        "ORDINAL",
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "NORP",
        "ORG",
        "PERSON",
        "PERSON",
        "DATE",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "DATE",
        "MONEY",
        "PERSON",
        "DATE",
        "PERSON",
        "CARDINAL",
        "ORG",
        "ORG",
        "PERCENT",
        "ORG",
        "PERSON",
        "ORG",
        "ORG",
        "ORG",
        "DATE",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "DATE",
        "DATE",
        "PERSON",
        "ORG",
        "ORG",
        "ORDINAL",
        "ORG",
        "PERSON",
        "PERSON",
        "DATE",
        "ORG",
        "PERSON",
        "PERSON",
        "PERSON",
        "ORG",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "GPE",
        "CARDINAL",
        "CARDINAL",
        "ORDINAL",
        "ORG",
        "CARDINAL",
        "ORG",
        "CARDINAL",
        "DATE",
        "PERSON",
        "ORG",
        "CARDINAL",
        "DATE",
        "PERSON",
        "CARDINAL",
        "PERSON",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "CARDINAL",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "DATE",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORG",
        "DATE",
        "ORG",
        "DATE",
        "ORG",
        "MONEY",
        "PERSON",
        "ORG",
        "CARDINAL",
        "MONEY",
        "ORG",
        "ORG",
        "ORG",
        "DATE"
    ],
    "vector": [
        -0.0909336730837822,
        -0.0008812038577161729,
        -0.012974982149899006,
        -0.038214702159166336,
        0.0038552244659513235,
        0.00917242281138897,
        0.10161862522363663,
        -0.007362410891801119,
        -0.02533448114991188,
        0.022286100313067436,
        -0.0032029745634645224,
        -0.020285511389374733,
        0.03670438006520271,
        -0.027542976662516594,
        0.022390007972717285,
        -0.0037273706402629614,
        0.04752427712082863,
        -0.032576143741607666,
        0.017208436504006386,
        -0.06904972344636917,
        -0.07011643052101135,
        -0.07623834908008575,
        0.02996288239955902,
        -0.044584281742572784,
        -0.03688345104455948,
        -0.018296491354703903,
        -0.028885425999760628,
        -0.01528304535895586,
        -0.0967416763305664,
        -0.05662574619054794,
        -0.036376141011714935,
        0.07119894027709961,
        -0.02187282405793667,
        0.02374638244509697,
        -0.023903748020529747,
        -0.02842036820948124,
        -0.011576232500374317,
        -0.040423985570669174,
        -0.009448413737118244,
        0.010882501490414143,
        -0.023344099521636963,
        -0.020970117300748825,
        -0.0464990958571434,
        -0.010592827573418617,
        -0.00912325456738472,
        -0.028965238481760025,
        -0.011008069850504398,
        0.04349800944328308,
        0.0022357769776135683,
        -0.008150886744260788,
        0.004555766470730305,
        -0.030983828008174896,
        0.0765669122338295,
        0.09034541249275208,
        -0.03893011808395386,
        -0.1116209477186203,
        0.03634003922343254,
        -0.003040725365281105,
        0.07462159544229507,
        -0.0025562848895788193,
        0.02114437334239483,
        0.07818824797868729,
        -0.05244247242808342,
        0.05689600110054016,
        0.024817833676934242,
        -0.013240347616374493,
        0.003268583444878459,
        0.07088468223810196,
        -0.0034914661664515734,
        -0.06857214123010635,
        -0.05873965099453926,
        -0.040407825261354446,
        -0.04114255681633949,
        0.03162765875458717,
        0.03104245848953724,
        0.0026573846116662025,
        0.014982441440224648,
        0.05032489448785782,
        -0.03256845846772194,
        -0.07703835517168045,
        -0.019222626462578773,
        0.044494807720184326,
        0.05563968047499657,
        0.0337185263633728,
        0.013667602092027664,
        0.05803646519780159,
        -0.0009820369305089116,
        0.03833946958184242,
        0.08219186961650848,
        0.0013970722211524844,
        0.050142209976911545,
        0.06280918419361115,
        0.04769129678606987,
        -0.02614695392549038,
        0.0581950768828392,
        -0.024652091786265373,
        0.02477537840604782,
        0.012467396445572376,
        -0.04600488021969795,
        0.0644335001707077,
        0.04165353626012802,
        0.018500758334994316,
        -0.01691475883126259,
        -0.05583513155579567,
        0.05088627338409424,
        0.052097223699092865,
        0.013005083426833153,
        0.0018484059255570173,
        0.035232242196798325,
        -0.007791927084326744,
        -0.022720972076058388,
        0.08177946507930756,
        0.028412068262696266,
        -0.09378063678741455,
        0.0026975730434060097,
        0.002449898049235344,
        -0.07179827988147736,
        0.076975017786026,
        0.013174423947930336,
        -0.03514701873064041,
        0.14176645874977112,
        0.07416202872991562,
        -0.03073691390454769,
        -0.05217327922582626,
        0.01008981466293335,
        0.06241105869412422,
        -0.1024027094244957,
        6.7381547587881e-33,
        0.09689439833164215,
        0.09841858595609665,
        -0.044361650943756104,
        -0.0023462511599063873,
        0.033872224390506744,
        -0.03658553957939148,
        -0.010606912896037102,
        0.10800143331289291,
        -0.03563755005598068,
        0.0756526067852974,
        0.026001283898949623,
        -0.029155991971492767,
        -0.0037300309631973505,
        -0.004626419395208359,
        0.016716646030545235,
        0.039335187524557114,
        -0.00956748891621828,
        -0.034407708793878555,
        0.035246361047029495,
        0.03991503641009331,
        -0.005412619095295668,
        -0.0897596925497055,
        0.026642361655831337,
        -0.01933373138308525,
        0.07061856985092163,
        0.06465300917625427,
        -0.03940621390938759,
        0.007565984036773443,
        0.05682089924812317,
        0.030621204525232315,
        0.01239532046020031,
        -0.0008922975976020098,
        0.07560113072395325,
        0.053476255387067795,
        -0.02960907481610775,
        -0.08921672403812408,
        0.03733157366514206,
        -0.13438619673252106,
        -0.04102804511785507,
        -0.0690893679857254,
        -0.06420326977968216,
        0.02138384059071541,
        -0.005596602335572243,
        -0.07516160607337952,
        -0.0022528846748173237,
        -0.014982685446739197,
        -0.013540660962462425,
        -0.056403614580631256,
        0.07548213750123978,
        0.020246772095561028,
        -0.05561042204499245,
        0.007230713963508606,
        0.0465114526450634,
        -0.025273172184824944,
        -0.030222449451684952,
        -0.07008443772792816,
        0.006609887350350618,
        -0.10450447350740433,
        -0.0185551680624485,
        0.10366462916135788,
        0.03349965810775757,
        -0.017936334013938904,
        0.022968299686908722,
        -0.033500317484140396,
        -0.10961504280567169,
        -0.018919100984930992,
        0.023835085332393646,
        0.07342085242271423,
        -0.007367631886154413,
        0.04309981316328049,
        -0.04921404644846916,
        0.06752290576696396,
        0.007428445387631655,
        0.047098930925130844,
        -0.07397950440645218,
        0.021737348288297653,
        0.08472912758588791,
        0.007827386260032654,
        0.007424885872751474,
        0.006788375787436962,
        -0.0002769314160104841,
        -0.073165662586689,
        0.09206147491931915,
        0.00308291451074183,
        -0.002371392212808132,
        0.10327116400003433,
        0.03740290552377701,
        -0.08637863397598267,
        0.05509050190448761,
        0.03154081478714943,
        -0.0626416802406311,
        -0.030073726549744606,
        -0.029232220724225044,
        0.022174544632434845,
        0.014516840688884258,
        -7.658872464013165e-33,
        -0.054864078760147095,
        0.0021700263023376465,
        -0.12490212172269821,
        -0.04871920868754387,
        0.06084369868040085,
        -0.0377340130507946,
        0.01564899832010269,
        -0.009176322259008884,
        0.041581667959690094,
        0.047149818390607834,
        -0.09703637659549713,
        0.03115903027355671,
        -0.019785411655902863,
        -0.04366045817732811,
        0.0965149849653244,
        -0.07216747850179672,
        0.04622788354754448,
        -0.005049279425293207,
        -0.07277887314558029,
        0.025373538956046104,
        0.04187937080860138,
        0.060374319553375244,
        -0.03327801451086998,
        -0.06089288368821144,
        0.05130251124501228,
        0.050323061645030975,
        0.010098032653331757,
        0.035509977489709854,
        0.038356442004442215,
        0.09229756146669388,
        0.029789192602038383,
        0.007054959423840046,
        -0.03989049792289734,
        0.06355389952659607,
        -0.02293515019118786,
        0.008757677860558033,
        0.018572358414530754,
        -0.03249740973114967,
        -0.016953621059656143,
        -0.03411567956209183,
        0.044404536485672,
        0.004569012671709061,
        -0.04998500272631645,
        -0.017683692276477814,
        -0.07305578887462616,
        -0.025040188804268837,
        -0.09852738678455353,
        0.023417893797159195,
        0.03072287328541279,
        -0.10146137326955795,
        0.03351787105202675,
        0.005155429244041443,
        0.06153082475066185,
        0.06949139386415482,
        -0.10367363691329956,
        0.021673591807484627,
        -0.027828307822346687,
        -0.04150569066405296,
        0.054393693804740906,
        -0.02193279005587101,
        -0.0472152978181839,
        0.02333907224237919,
        -0.007597811985760927,
        0.04842269420623779,
        0.02628718502819538,
        -0.034489039331674576,
        0.0023156253155320883,
        0.0830249935388565,
        -0.08181270956993103,
        -0.03547944501042366,
        0.047941096127033234,
        -0.09461155533790588,
        -0.00935444701462984,
        -0.06952981650829315,
        -0.04357219487428665,
        0.05137593671679497,
        -0.0033570509403944016,
        -0.02880324237048626,
        -0.10626456141471863,
        0.04468702897429466,
        0.09942736476659775,
        -0.037202488631010056,
        -0.009921237826347351,
        -9.647817933000624e-05,
        -0.03327866643667221,
        0.0821981281042099,
        0.0314335897564888,
        0.05694613605737686,
        0.03583405539393425,
        -0.04751214385032654,
        -0.05499134585261345,
        -0.06399533152580261,
        -0.05197961628437042,
        0.09435166418552399,
        0.07010006904602051,
        -5.207424180753151e-08,
        -0.002807005774229765,
        0.00798250362277031,
        -0.05466204136610031,
        0.04300190880894661,
        0.03279378265142441,
        -0.02042296528816223,
        -0.09933865070343018,
        0.02339581400156021,
        -0.0623495876789093,
        0.01149182952940464,
        0.025361811742186546,
        0.03724038973450661,
        -0.04619282856583595,
        -0.037800468504428864,
        0.004738312680274248,
        -0.007266263011842966,
        -0.14064690470695496,
        0.046567462384700775,
        -0.06767494231462479,
        -0.03436528146266937,
        -0.030039045959711075,
        0.03984899818897247,
        -0.03482584282755852,
        -0.0891495943069458,
        -0.07516787201166153,
        -0.026222363114356995,
        0.02247939631342888,
        0.026583485305309296,
        0.08149955421686172,
        0.015198244713246822,
        -0.08286041021347046,
        0.015509926714003086,
        0.003903405973687768,
        -0.04883093759417534,
        -0.01841701567173004,
        0.03676106035709381,
        -0.051449645310640335,
        -0.024973515421152115,
        0.03500315174460411,
        0.03708939626812935,
        -0.02296099066734314,
        -0.06097497045993805,
        0.04667246714234352,
        0.04797450825572014,
        -0.13019691407680511,
        -0.042515188455581665,
        -0.10585228353738785,
        0.0029088386800140142,
        0.08760561048984528,
        -0.08879710733890533,
        0.040413934737443924,
        -0.0698760524392128,
        0.04158056154847145,
        0.030208304524421692,
        0.041870683431625366,
        0.03395955637097359,
        0.014846556819975376,
        -0.041134901344776154,
        0.05397096276283264,
        -0.002535121515393257,
        0.047996338456869125,
        -0.13129445910453796,
        0.025506822392344475,
        0.029584087431430817
    ]
}