{
    "id": "oQD688R_JAo",
    "title": "You need to learn this! Unlock the Power of AI (Artificial Intelligence) // FREE CCNA 200-301 Course",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2024-10-11T14:00:49Z",
    "video_url": "https://www.youtube.com/watch?v=oQD688R_JAo",
    "category": "Science & Technology",
    "tags": [
        "chatgpt",
        "ai",
        "ccna",
        "ccna free",
        "free ccna",
        "artificial intelligence",
        "bard",
        "chatgtp",
        "chat gtp",
        "Gemini",
        "google gemini",
        "amazon ai",
        "chat gpt coding",
        "chatgpt hack",
        "terminator",
        "ai jobs",
        "ai robots",
        "machine learning",
        "cybersecurity",
        "cyber",
        "chatgpt chatbot",
        "google ai",
        "kali linux",
        "linux",
        "ccna course",
        "ccna free course",
        "free ccna course",
        "ccna v1.1",
        "ccna 2024",
        "ccna 200-301",
        "cisco ccna",
        "ccna training",
        "ccna full course",
        "new ccna",
        "ccna exam",
        "ccna study",
        "ccna 200-301 full course",
        "200-301",
        "hacking"
    ],
    "views": 22372,
    "likes": 837,
    "comments_count": 98,
    "description": "Big thanks to Cisco for sponsoring this video! You can access the free AI tutorial here:   // CCNA Complete Practical Course // Expect regular updates - the full course will be uploaded on my Tech Channel here:   // Courses to look at mentioned in the video // AI For Everyone:  Introduction to TensorFlow for Artificial Intelligence, Machine Learning, and Deep Learning:   // YouTube video REFERENCE // AI Firewalls are here! (Can your firewall do this?):   The real world truth about AI Hacking:   The new AI Cyber Defense you need to know about:   // David's SOCIAL //  Discord:   X:   Instagram:   LinkedIn:   Facebook:   TikTok:   YouTube:   // MY STUFF //     // SPONSORS //  Interested in sponsoring my videos? Reach out to my team here: sponsors@davidbombal.com  // MENU // 0:00 - The Complete Practical CCNA Course 00:26 - Hallucinations in AI Demo  03:01 - Free Training from Cisco U. (Sponsor)  04:48 - AI Hallucinations explained 05:14 - Retrieval- Augmented Generation (RAG) Explained 06:17 - Traditional coding Explained  09:14 - Machine Learning Explained  10:42 - Practical Demo of Machine Learning  15:09 - AI For the CCNA Exam  18:20 - How Traditional Programming Works  20:39 - Anti-Virus Software Anomalies Teaching  21:06 - Three Primary Ways of Machine Learning  21:33 - Supervised Learning  22:51 - Classification and Regression Algorithms 24:35 - Unsupervised Learning  26:43 - Reinforcement Learning  27:38 - Predictive AI and Generative AI 30:55 - Generative AI 33:50 - Using GEN AI in Network Operations  35:15 - Companies Using Personal Data To feed AI  35:52 - Security Concerns  38:16 - Outro   ccna ai artificial intelligence python ccna v1.1 kali linux ccna 200-301 linux 200-301 ubuntu cisco u free ccna chatgpt bard ai jobs lamda python neural network machine learning deep learning sentient google ai artificial intelligence google ai sentient google ai lamda google ai sentient conversation google ai alive ai jobs cisco free ccna course free ccna training new ccna cisco ccna ccna course ccna certification ccna training packet tracer ccna full course new ccna ccna exam ccna study ccna 200-301 full course cisco training ccna 200-301 course ccna 2024 network engineer free lab ccna course for beginners ccna security free cisco ccna fundamentals ccna full course 2024 ccna tutorial ccna networking  Please note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel!   Disclaimer: This video is for educational purposes only.  #ai #ccna #python",
    "description_links": [
        "https://davidbombal.wiki/aitutccna",
        "https://davidbombal.wiki/freeccnayt",
        "https://www.coursera.org/learn/ai-for-everyone",
        "https://www.coursera.org/learn/introduction-tensorflow",
        "https://youtu.be/n_-QuGvQXso",
        "https://youtu.be/YZqiWFyq-OE",
        "https://youtu.be/vI8eUH8uiMY",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/@davidbombal",
        "https://www.amazon.com/shop/davidbombal"
    ],
    "transcript": "this video is part of my complete practical CCNA course where I explain CCNA topics using physical devices and practical examples now you've probably heard of ChatGPT but have you heard of hallucinations and seen examples of hallucinations with AI or Artificial Intelligence AI is now part of the CCNA course but I want to show you some of the advantages and disadvantages of AI and here's a very simple example of hallucinations and I'll start with Midjourney let's ask it to create a YouTube thumbnail without an elephant keyword without an elephant I don't know if you agree but that's not a YouTube thumbnail without an elephant it's thumbnails that have elephants front and center okay let's try another one so imagine create a YouTube thumbnail showing a living room without an elephant while we're waiting for that to complete this is a good example of AI hallucinating AIs will confidently tell you the truth and just as confidently give you totally false information what about this here's the results of our thumbnails of a living room without an elephant and again I don't know if you agree but the elephants in these pictures are front and center so these are definitely not living rooms without elephants so that's Midjourney not doing such a good job lot of you may be thinking okay but what about ChatGPT so let's start with I really like like elephants and then we told that elephants are amazing creatures and some other information but now I'm going to tell it to generate an image of a living room without an elephant so image is being generated I don't know if you agree once again that's a living room that has an elephant in it and we told here here is the image of a cozy and modern living room without an elephant don't know about you but it's very easy to spot that elephant in the living room I hope you like the design if you have any other requests or need more images feel free to ask let's ask it to generate another image of a living room without an elephant don't know about you but I can easily spot a elephant in this living room notice right over there and we told that this is another stylish and elegant living room without an elephant this is a good example once again of an Artificial Intelligence hallucinating confidently telling you totally incorrect information so I've shown you two examples Midjourney as well as ChatGPT so once again hallucinations are where AI confidently gives you incorrect information in our example we told it to draw a room without an elephant as an example it hallucinated and said here's an image of a cozy and modern living room without an elephant this image is based on tutorials from Cisco U. they have free tutorials that help you understand AI for CCNA as well as a bunch of other free content really happy to say that this video is sponsored by Cisco and you get free access to the best written content to help you prepare for the Cisco CCNA AI section of the CCNA exam don't go and take your exam without having a look at this Cisco tutorial understanding Ai and LLMs as a network engineer again this is a free tutorial on Cisco U to help you prepare for your CCNA exam so make sure that you go through my video but also make sure that you read this tutorial and understand the contents of this tutorial before you go and take your exam so they cover topics such as supervised learning unsupervised learning the reinforcement learning and all the other topics that you need to know for the CCNA exam including predictive and generative AI so notice here they're talking about predictive AI generative AI generative AI GPTs they also discuss hallucinations and RAGs RAGs is a topic that you may struggle with there's a whole section here discussing what RAGs are and how they make AIS more accurate the CCNA exam is not focused just on pure AI we're looking at Cisco AI Ops in network operations and there's a section showing you the products that have AI built into them so make sure once again that you go through the Cisco tutorial I've linked it below it's free all you have to do is register on Cisco U and you can get access to this content fantastic to see that Cisco are making more content freely available and I'm really happy that they're sponsoring my channel allowing me to create more free content to help you change your life make sure that you go through my video but also go through the Cisco U tutorial on AI to help you prepare for your exam I'll link that as part of this video so once again here is an example of Dolly or ChatGPT creating a living room with an elephant in it even though we told it to create one without an elephant don't always believe what AIS tell you a lot of results could be totally incorrect often depends on the training data depends on how the AI is configured hallucinations are a real problem with AIS so in networking we obviously don't want hallucinations so you need to know this concept of Retrieval Augmented Generation or RAG which reduces hallucinations as well as out-of-date information so it's not just that the AI is giving you incorrect information it may be out ofate information basically what you do here is you combine the capabilities of a retrieval system and generative mode in this case we are basing the AI on specific data not just the internet which could have false and true information so as an example at what layers of the TCP model are routers the answer is routers operate at the internet layer of the TCP IP model in other words Layer 3 a prompt is sent to retrieval system based on a knowledge source with context and that prompt and context through the RAG gives you the correct answer. When you start learning about machine learning or AI gets really confusing with all the terms I found that this is a very good way to understand it and when I first learned I found that this was my aha moment if you like or this is where the light bulb went on in a few minutes time this will hopefully also make sense to you in traditional coding or programming what we do typically is we have if then statements we run code based on data so as an example very basic program if it's raining then take an umbrella otherwise take a hat that is an example of a very basic program here's another example and I want to give credit to Coursera introduction to TensorFlow if you really want to get into this in more detail have a look at that course fantastic course but for the CCNA you don't need that level of knowledge so another very simple example of coding if the ball strikes a brick the brick is removed so if ball collide brick remove brick and then we do something with the direction of the ball so it bounces off the brick as an example but if we miss the ball and it goes off screen we lose a life again very basic program in this kind of traditional programming we have rules which are set in our programming language if this then do this we also have data which could be variables or databases or something so we've got data and then we're applying rules to the data so the input is rules as well as data we have our traditional programming and then we get answers data could be it's r raining rule could be if it's raining then take umbrella simple programming with machine learning however we change the paradigm or way of thinking it's a totally new way of thinking here rather than rules and data we have answers and data and rules come out so notice we have swapped our rules and we have swapped our answers so rather than creating the rules we're allowing the machine to create the rules based on the answers and data that we give it this becomes really useful when data isn't clearcut as an example how would you code this example we want to determine what someone is doing so as an example are they walking we might code it based on if the speed is less than 4 mil an hour they're running if the speed is greater than four they are cycling if the speed is greater than 12 but what happens if they golfing or doing some other kind of activity how would we run patent recognition on that kind of data so it becomes very difficult at times to write code for patent recognition because there might be so many variations what happens in the real world is not always consistent as an example different people walk at different speeds different people run at different speeds different people cycle at different speeds and what about all the other activities such as golfing etc not easy to write code for every permutation or every example of an activity so with machine learning once again we change the paradigm here we get lots and lots of data so get lots of examples and then we add labels to the data to indicate what the data is so we are adding labels so that the machine knows this is a dog this is a cat this is walking this is running this is cycling etc etc so we've got lots of data and that's something very important to know with machine learning big requirement is the more data the better the machine learning is going to be more and more data is better and that's why you'll often see that companies that Implement AI are sucking up data all over the place ChatGPT as an example trying to get data from the full internet the more data the better the machine learning algorithm so rather than trying to code this with activity recognition we are telling the machine that this is working we telling the machine that this is running notice the label is running we are telling it that this is biking or cycling we are telling it that this is golfing we are telling the machine what activity the data contains and then we are allowing the machine to determine the answer so again notice the difference answers and data in rules out we are providing labeled data and then the machine determines the rules to recognize is it a dog is it a cat what is a it actually seeing now before we go any further let me show you a practical example of machine learning where you can program an AI without any code so Google have this teachable machine which allows you to train a computer to recognize your images sounds and poses it's a fast easy way to create machine learning models for your sites apps and more no expertise or coding is required here so this is fantastic so as an example you can get it trained on images sounds and posers now that's nice but let me show you practically how to train a computer so let's create two classes here let's make it simple cats and dogs I'm going to upload images so rather than using my camera I'm just going to upload some images so I'll just grab a few images here and as you can see various images of cats like leopards lions and domesticated cats are now uploaded let's upload images of dogs so I've got a few images of dogs here so I'll grab a few of them and upload those so here we've got two classes of images now for an AI to function well it needs lots of data I've only given it a little bit of data we've also added labels to the data so the AI knows that these are cats and these are dogs because I've correctly classified the data so we've given the AI the answers we've given the AI data now through machine learning rules will be created and we'll be able to test those rules so let's train the AI and there you go as simple as that we've been able to train the AI now it's showing an error because it can't access my webcam I don't want it to access my webcam I'm going to upload a different image and let's see if it classifies it properly so I'll upload this image it tells me that there's a 65% probability that this is is a dog 35% that it's a cat so got that right let's upload another image let's take this one 100% that's a dog upload another image let's try this one okay 89% that that's a dog let's try some cats now these images are not part of the original data but notice it correctly classified that as a cat take another image this one here that's 92% a cat so got that right 100% that's a cat okay but now let's trick it so I'm going to give it data that it hasn't seen before in this case a horse now the training data is only done on cats and dogs and now I've given it a curve ball something that's neither of those so it can only choose one of those two based on the data that it's been fed and this is the issue with machine learning or Artificial Intelligence you need to make sure that the data that's fed to it is the correct data that it's learning on a large data set a large amount of data and that the data is actually correct okay let's try a zebra thinks that's a cat and another horse 68% a cat 32% probability that that is a dog this software is fantastic however and notice you can download JS code if you want to put this into a browser you can download a TensorFlow version if you want to use this as part of Python and they also have a TensorFlow Lite model which works on mobile b or Edge TPUs so without having to code anything we have been able to create an AI that can recognize images now obviously I could create another data class here let's add horses and let's upload some images I'll only upload two images let's see if I can pick up the third one let's train the model now so here's an example where the data set is probably too small it still determines that this is a cat rather than a horse or dog and that's probably because I used the wrong image here I used a donkey and one image of a horse rather than more pictures of horses so again you need to have good data to train your AI this is again a paradigm shift from traditional programming in traditional programming we create rules like if it's raining take an umbrella if it's not raining it's the sun is out take a hat we have data and we write rules for that data so traditional programming gives us the answers here we have the answers and the the data and the machine learns the rules very different paradigm to traditional programming. Now let's talk about AI specifically for the CCNA exam this is found in 6.4 of the CCNA exam version 1.1 blueprint notice this section 6.0 is 10% of the exam and includes other topics such as Automation and programmability controller based software defined architectures etc but the section we're going to focus on in this video is explaining AI or Artificial Intelligence both generative and predictive notice those two you need to know the difference as well as machine learning in network operations notice this term Cisco are focusing specifically on AI in network operations not just general AI now in a lot of AI discussions you'll see they mention something called an artificial neural network based on the concept of a neural network in the brain so with AI we are looking at human intelligence simulated by computer systems where there's learning reasoning and self-correction I just need to make an important point about the differences in AI and then I'll come back to this about Cisco specific AI implementations there are different types of AI one of them is Artificial Narrow Intelligence we actually use a lot of this today an example would be a smart speaker or self-driving car this is not general intelligence this is AI for a specific use case very use useful when applied to something specifically another example that I like is detection of viruses so in antivirus systems they are using AI to detect anomalies detect software that isn't acting normally the hype these days if you like is around Gen AI or Generative Artificial Intelligence we've got examples like Claude we've got ChatGPT we've got Midjourney many examples of this out there and I've shown you some of these already the one that a lot of people are concerned about is Artificial General Intelligence or AGI this is where AI can do anything that a human can do and here you've seen many movies over the years the Terminator Series has been an example of this where the machines take over a lot of people are worried about this but generally most development has been on ANI and Generative AI a lot of the experts don't think we'll see AGI for many many years lots of hype out there about this but generally artificial intelligence is applied on narrow domains rather than replacing human beings but like all things in life we shall see experts have been wrong in the past we shall see what happens now from a Cisco point of view we have used Python Ansible, Terraform other Technologies like that to configure network devices for many years when coding those systems you have to explicitly code what you want the automation tool to do so as an example if you code a Python script to configure VLANs on a switch you have to have the data of VLANs to configure so you might have that in a text file you have the Python script pass that data and then SSH to a switch and then configure the VLANs very explicit instructions of what the script should do so this can save time because you're having a machine configure network devices and many network devices but you are programming the machine what to do remember what we're doing is providing rules we're providing data so as an example we may have a list of VLANs let's say VLAN 1 to 100 need to be configured so we store that in an Excel spreadsheet or CSV file or something so we're providing the data and then the rules are if that VLAN doesn't exist create the VLAN and then configure this VLAN on this specific port or whatever so we are programming the rules and the data and then the result is answers let's say a pass or fail with that configuration we have also updated the configuration of the switch using our Python script as an example so rules are set in our programming language if the VLAN isn't there create the VLAN perhaps you want to delete other vlans so so you might want to pass the configuration of the switch and only certain configurations are allowed on specific interfaces and then you test that against a variable or database that you've created however as explained not all situations and network challenges included can be addressed with static configuration we might need something to dynamically determine what is done in a network we'll need the AI to identify patterns looking for anomalies and then make changes based on what it's sees example that's often come up and I've interviewed people at Cisco about this before is the Cisco firewalls you can statically configure and we've done this for years firewall rules on firewalls the problem is you can't always anticipate what's going to happen you can't think about all the traffic patterns out there it's also very difficult to keep those firewall rules up to date it's also very difficult if people change jobs and we have hundreds or thousands of firewall rules would it not be nicer if the AI suggested firewall rules based on the traffic that it sees or when you interface with an AI that you use a generative AI interface so something like ChatGPTso you interact with the AI rather than hardcoding AI rules which can be very difficult to understand you are asking it questions about the rules and then analyzing the rules through a chat interface cyber security is a good example of where you want dynamic configuration based on anomalies you don't want to just look at static traffic or static configuration where you've thought of every possible situation because it's unlikely that you've done that think again about antivirus software where anomalies of behavior looked at to stop viruses so as an example again to teach antivirus we can provide data so good software bad software show it examples of malicious code tell it what's good software and then it can create the rules to determine is a new piece of software malicious or is it good now machines can learn in three primary ways first way is supervised learning that's what I've actually already demonstrated where you as a human help the machine learn as an example we told the machine that these were pictures of dogs these were pictures of cats the second option is unsupervised learning where the machine learns by itself doesn't need to be taught by a human and then we've got reinforcement learning so three options where a machine learns by trial and error basically learns from its mistakes so let's look at each of those in more detail so in supervised learning once again the AI is trained using labeled data sets so if you remember as I discussed before rather than having rules and data and then getting answers what we do here is we provide answers with the data and the machine learns the rules so we told the machine this is a dog we told the machine this is a cat now in this example which is more relevant to networking we may classify some applications as safe and some applications as malicious or traffic flows as safe and malicious so we helping the machine by giving it classified data in other words labels on the data and it can then learn the rules to determine when it sees something new what is good and what is bad so again with supervised learning this is a method where the AI is trained using labeled data sets we can use supervised machine learning to characterize Network traffic or predict security threats by telling the machine what is safe or or malicious traffic the AI systems can learn from the label data and can identify patterns and relationships between the different types of network activities this process involves feeding the algorithm both the data needed to analyze so the inputs and the expected outputs to teach it what to look for now going a bit deeper in supervised learning we have classification and regression algorithms so both regression and classification algorithms are supervised learning algorithms both these algorithms are used for prediction in machine learning and work with labeled data sets the main difference between regression and classification algorithms is that regression algorithms are used to predict continuous values such as price salary age and so forth classification algorithms on the other hand are used to predict or classify discrete values such as male or female true or false spam or not spam now unsupervised learning is different to supervised learning in that it does not rely on labeled data set we basically allow the AI to uncover patterns or groupings by itself so this obviously has a lot of potential in that we don't have to pre- classify the data we just let the machine discover stuff itself so we give it a bunch of data machine looks as an example for anomalies in the data so again with unsupervised learning we are not relying on pre-labeled data rather than doing that the algorithm is given the freedom to work through the data itself or sift through the data and uncover patterns or groupings by itself without human intervention this is really useful once again in networking for looking for anomalies so looking for traffic that's malicious as an example so we have our normal traffic on our Network let's look for anomalies or differences to the normal traffic to identify someone hacking the network or a worm working its way through the network so it allows the AI once again to look for unusual traffic patterns that deviate from what's considered normal or from your Baseline potentially flagging security breach without prior knowledge of what to look for now going a bit deeper into unsupervised learning we have dimensionality reduction clustering Association rules and the one that we most concerned with is anomaly detection so again what is unsupervised learning it's a type of machine learning that learns from data without human supervision unlike supervised learning unsupervised machine learning models are given unlabeled data and allowed to discover patterns and insights without any explicit guidance or instruction now you may not know this but unsupervised learning is actually used a lot in our daily lives they're used to help power personalized recommendations realtime translations or even automatically generate text images and other types of content so where is this most powerful it's best suited for more complex processing tasks such as organizing large data sets into clusters they are useful for identifying previously undetected patterns in data and can help identify features useful for characterizing data as an example think about the weather huge amount of data allow the machine to look for the patterns rather than us as humans trying to label the data for the machine so in this example here a machine learning model is clustering similar data points and then can create groups of clusters with natural demarcations so with clustering we are exploring raw unlabeled data and breaking it down into groups or clusters based on what is similar or what is different in the data examples here would include customer segmentation fraud detection image analysis the machine is basically splitting the data into natural groups by finding similar structures or patterns in the data now some more examples of unsupervised learning is anomaly detection where unsupervised clustering can process large data sets and discover data points that are not typical in the data set again from a security point of view let's look for traffic that deviates from our normal traffic recommendation engines are another place where this is used customer segmentation as mentioned is another place for detection as well and natural language processing now for the CCNA I wouldn't worry too much about the details of these but make sure that you understand the difference between supervised learning and unsupervised learning now the third way of learning is reinforcement learning in this example AI systems learn from the results of their actions it's kind of like the trial and error learning method so the machine does something was it a success yes or no the result comes back and the Machine can learn from the results of its actions so machine learning is a a dynamic learning process where the AI systems learn from the consequences of their actions you do this you get this result learn from that in the context of network operations this means that the system can refine Network performance by adjusting configurations and policies in response to real-time feedback aiming to achieve Optimal Performance this basically allows Network systems to dynamically adapt to network conditions change their configurations based on what's happening on the network the goal here is to optimize configurations and optimize network operations now something you really have to know for the CCNA exam is the two types of AI we've got predictive and generative AI with predictive we're looking at vast data sets and then predicting something so look at this curve predicting something generative AI is probably what most of us are familiar with like draw an iMac and then something is generated like this you may have used ChatGPT to create all kinds of things so as an example write a hollow World function in Python and there you go it's created that Hello World function in Python I could simply copy that code and use it whether that code is good or not depends uh again be careful of hallucinations be careful of badly written code let's create another one so create an OSPF configuration for a Cisco router and notice ChatGPT tells us a bit about OSPF explains the example scenario and then tells us how to do it and scrolling down notice it's building the code for us so tells us to type enable then conft set the host name of the router okay that's got nothing to do with OSPF but there you go it's configuring OSPF with process id1 enabling it on different interfaces and then exiting the configuration and telling us about the configuration now what's interesting with ChatGPT is notice I asked it previously to create something similar and here the output was very very different to what it did this time around it's generating configs on the Fly output may be different what you get with chat GPT may be very different to what I'm getting but now let's talk about predictive AI here we analyze historical data to forecast future outcomes this relies on machine learning algorithms to identify patterns and trends within vast data sets so again the machine is looking at current data and then is predicting what's going to happen so again predictive AI is where artificial intelligence analyzes historical data to forecast future outcomes it relies on the AI identifying patterns and Trends within the data enabling it to make educated predictions about what's going to happen in the future now the important part is in the context of network engineering predictive AI can enhance network performance reliability and security by anticipating problems before they arise and allowing for ProActive Management this is always the issue with with network management we know when there's a problem but can we predict a problem and this is where Predictive AI is very useful why didn't we look at indicators to tell us before the network melts so look at increase in utilization on interfaces look at other parameters and see indicators of a problem in the network rather than waiting for the network to break and then being told the network is down so again this can help us predict equipment failures Network performance issues to help us be proactive in network maintenance and Network performance optimization look for issues in the network like Network congestion as an example now with generative or gen we are going beyond prediction to create novel insights employing sophisticated machine learning models such as Generative Adversarial Networks or GANs and Transformer models so as an example we tell the AI to draw a switch and there we go so let's ask ChatGPT to generate an image of a network switch and there you go that kind of looks like a network switch it's got some interesting ports over here don't know what's going on over here but there is kind of a switch so it's created a new type of switch generate another image let's see what it does okay now it tells us it can't do it let try that telling us what we should do let's just take exactly what it's asked us to do and let's tell it to create the image that it's just told us the prom fall and there you go this according to ChatGPT is that kind of switch but what you'll notice is it's creating brand new images let's do one more generate a network switch icon that can be used in network topology diagrams and there you go that's not too bad actually gives us a good idea of what a switch would look like perhaps not too bad now the thing about Gen AI is it can create a wide array of outputs could be text could be images could be code I've shown you an example of code what about music there's controversy around AIs like this one but Suno allows me to create music so I've created quite a few of these but let's create a new one create a song about Cisco CCNA and then I simply click create and notice it's created something called Network dreams I've done quite a lot of these already but let's play this one so you can see on the right hand side here it's got the verses not great maybe you like this maybe you don't okay let's try another [Music] one interesting that it's saying routers rather than routers uh must be a British singer let's try one that I created a long time ago so Network dreams here that's another example of Gen AI in this case creating a song or multiple songs about the CCNA exam now particular kind of generative AI is called Generative Pre-Trained Transformer or GPT hence ChatGPT this has obviously become very popular thanks to its advanced language processing capabilities and I've just shown you a few examples of this I showed you how to generate images how to create code and even music so many options available with Gen AI GPTs now you can use generative AI in network operations it can simulate Network scenarios by creating realistic Network traffic patterns which allows you to test and evaluate Network performance under various conditions without affecting a live Network it can also automatically create optimal Network configurations based on current demands and predictive insights it also helps in developing potential solutions for network issues providing multiple options for optimization and remediation so Gen AI and Predictive AI are often used together in network operations predictive AI can identify and anticipate problems in the network while while Gen AI creates simulations and solutions to address those issues proactively so by combining the strength of both those two AIs Network administrators can make sure that their networks are more resilient and more dynamic in other words run better than we could without AI now big worries when it comes to AIs is firstly privacy confidential data being sent to the internet and stored in public AIs and security you don't want to post passwords or tokens on a public AI it's very worrying these days how companies are often sucking up our data and using that to train their AIs famous example that's touched me personally include Microsoft recall and Slack using all the personal data with in slack to train their AIs be careful what you put in a public and even a private AI system so again we need to be careful about security and privacy particularly when the information is shared through public instances of GPTs like ChatGPT are accessible to anyone without any specific security or privacy guarantees only use public GPTs like ChatGPT being the most famous one for non-confidential inquiries general inquiries such as asking about coding practices troubleshooting generic software issues or understanding technology concepts and also use it for learning and experimentation so explore AI capabilities and generate nonsensitive content through the public AIs I but don't use it for sensitive data never input or discuss any personal financial or operational data don't put your API keys in ChatGPT or your passwords or any information that could compromise security also avoid discussing details about your internal IT processes security setups or architectures that could provide a blueprint for potential hackers to attack your systems now private GPT instances are tailored for restricted use with enhanced security features they can handle more sensitive query under controlled access conditions however be careful about confidentiality don't expose highly sensitive information to a private GPT it's possible that through misconfiguration data could be leaked or security flaws could exist and someone could access that information think about data control and monitoring ensure that all data shared with GPTs is monitored and controlled anonymize your data use data masking to help avoid direct exposure of sensitive data lots of hackers have proven that they can circumvent the guard rails in ChatGPT and get it for instance to create malicious code there are GPTs out there that have no guard rails so it's possible for attackers to generate code that's malicious without anyone stopping them attackers can even use your AIs and your chatbots against you so they could use an injection attack on a chatbot famous example once again is where someone got a chatbot to sell him a car for $1 rather than talking to a salesman so people can circumvent the controls on chatbots and AIs to get them to do all kinds of things as an example you may have a chatbot that helps you create automation code but someone could use a injection attack to prompt it to write a script that erases the entire operating system of a Windows computer or a Linux computer so it's important with AIS to make sure that they don't accidentally share confidential information and you need to implement security to not allow anyone access to your Private GPT big issue these days with GPTs I've interviewed various Security Professionals and at the moment it feels like AIs are a bit of a wild west yeah it sounds like a bit of a wild west right it is wild wild west lots of exposure of data lots of issues when it comes to security with regards to GPTs",
    "transcript_keywords": [
        "machine learning",
        "data",
        "machine learning models",
        "modern living room",
        "living room",
        "create machine learning",
        "network",
        "Cisco CCNA",
        "machine learning rules",
        "CCNA exam",
        "Artificial Intelligence",
        "Generative Artificial Intelligence",
        "labeled data sets",
        "living room notice",
        "learning",
        "data sets",
        "machine",
        "Artificial Intelligence hallucinating",
        "learning unsupervised learning",
        "Intelligence hallucinating confidently"
    ],
    "transcript_entity_values": [
        "Microsoft",
        "these days",
        "Linux",
        "three",
        "SSH",
        "many years",
        "Association",
        "Cisco",
        "TensorFlow Lite",
        "Generative Artificial Intelligence",
        "Cisco U.",
        "CCNA AI",
        "two",
        "hundreds or thousands",
        "second",
        "YouTube",
        "an Artificial Intelligence",
        "Edge",
        "Google",
        "ProActive Management",
        "Python",
        "Dolly",
        "Artificial Intelligence AI",
        "10%",
        "the years",
        "API",
        "ANI",
        "Coursera",
        "89%",
        "3",
        "1",
        "VLAN",
        "a few minutes",
        "iMac",
        "one",
        "Artificial General Intelligence",
        "Retrieval Augmented Generation",
        "firstly",
        "100",
        "TCP",
        "Windows",
        "Transformer",
        "the Terminator Series",
        "Generative Adversarial Networks",
        "first",
        "1 to",
        "92%",
        "TensorFlow",
        "68%",
        "Midjourney",
        "less than 4 mil",
        "65%",
        "CCNA",
        "TensorFlow",
        "6.4",
        "years",
        "Cisco AI Ops",
        "AI",
        "Claude",
        "Predictive AI",
        "Cisco U",
        "35%",
        "Machine",
        "Gen AI",
        "Ansible",
        "Artificial Narrow Intelligence",
        "Optimal Performance",
        "RAG",
        "AIS",
        "Generative Pre-Trained Transformer",
        "this one 100%",
        "Artificial Intelligence",
        "Security Professionals",
        "CSV",
        "third",
        "JS",
        "Suno",
        "32%",
        "Hello World",
        "1.1",
        "Network",
        "Excel",
        "fed",
        "100%",
        "Generative AI",
        "AGI",
        "Baseline",
        "Implement AI",
        "OSPF",
        "Cisco",
        "CCNA",
        "Automation",
        "British",
        "Slack",
        "GPT",
        "Terraform"
    ],
    "transcript_entity_types": [
        "ORG",
        "DATE",
        "ORG",
        "CARDINAL",
        "ORG",
        "DATE",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORG",
        "ORG",
        "CARDINAL",
        "CARDINAL",
        "ORDINAL",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "PERCENT",
        "DATE",
        "ORG",
        "ORG",
        "ORG",
        "PERCENT",
        "CARDINAL",
        "MONEY",
        "ORG",
        "TIME",
        "ORG",
        "CARDINAL",
        "ORG",
        "ORG",
        "ORDINAL",
        "CARDINAL",
        "ORG",
        "PRODUCT",
        "ORG",
        "EVENT",
        "ORG",
        "ORDINAL",
        "CARDINAL",
        "PERCENT",
        "ORG",
        "PERCENT",
        "NORP",
        "MONEY",
        "PERCENT",
        "NORP",
        "WORK_OF_ART",
        "CARDINAL",
        "DATE",
        "ORG",
        "ORG",
        "PERSON",
        "ORG",
        "ORG",
        "PERCENT",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "ORG",
        "PERCENT",
        "ORG",
        "ORG",
        "ORG",
        "ORDINAL",
        "PRODUCT",
        "PERSON",
        "PERCENT",
        "ORG",
        "CARDINAL",
        "ORG",
        "PRODUCT",
        "ORG",
        "PERCENT",
        "ORG",
        "ORG",
        "PRODUCT",
        "ORG",
        "ORG",
        "GPE",
        "ORG",
        "ORG",
        "NORP",
        "ORG",
        "ORG",
        "ORG"
    ],
    "vector": [
        -0.07027079164981842,
        -0.04999137669801712,
        -0.03617587313055992,
        -0.004906948655843735,
        0.04583635926246643,
        -0.006334568839520216,
        -0.015210083685815334,
        -0.03530775010585785,
        -0.05687061324715614,
        -0.017231563106179237,
        -0.0438435934484005,
        -0.044475387781858444,
        0.016972839832305908,
        -0.015015020035207272,
        0.047025542706251144,
        0.043630748987197876,
        -0.0037058955058455467,
        -0.018914099782705307,
        -0.08098439127206802,
        -0.08780240267515182,
        0.023172320798039436,
        -0.04780763015151024,
        -0.028827955946326256,
        -0.060869283974170685,
        -0.11608391255140305,
        0.05112148076295853,
        0.04828418418765068,
        -0.09252240508794785,
        -0.028790151700377464,
        -0.026606159284710884,
        -0.01100301556289196,
        -0.013060289435088634,
        0.004783961456269026,
        0.019656658172607422,
        -0.018114516511559486,
        -0.026395345106720924,
        -0.07333505898714066,
        0.028818467631936073,
        0.05713897570967674,
        -0.0115400031208992,
        -0.03643036261200905,
        -0.00968075729906559,
        0.0053756143897771835,
        -0.021511036902666092,
        0.03790176287293434,
        0.03178783133625984,
        0.008805377408862114,
        -0.010607032105326653,
        0.07424218207597733,
        -0.017817219719290733,
        -0.08001714199781418,
        -0.00868697464466095,
        0.003630669554695487,
        0.0457262247800827,
        -0.015635095536708832,
        -0.026461562141776085,
        0.030833380296826363,
        -0.028671186417341232,
        0.022904181852936745,
        -0.04271569103002548,
        0.07006245851516724,
        -0.05620609596371651,
        0.017378972843289375,
        0.03066989965736866,
        -0.023861940950155258,
        0.027397777885198593,
        -0.02096516266465187,
        0.11505136638879776,
        0.06437195837497711,
        -0.048185791820287704,
        0.007693821098655462,
        0.012924300506711006,
        -0.06968171149492264,
        0.04579254612326622,
        0.07198645174503326,
        0.009019301272928715,
        0.03571555018424988,
        -0.05983654782176018,
        0.0894685760140419,
        -0.06995577365159988,
        0.06257864832878113,
        0.0013757706619799137,
        0.005446515046060085,
        0.0391516387462616,
        0.04940671846270561,
        0.018580598756670952,
        0.008031312376260757,
        0.009820712730288506,
        0.023938516154885292,
        0.029328051954507828,
        0.03906617313623428,
        0.02523169293999672,
        -0.03535144031047821,
        0.01090144645422697,
        0.09652567654848099,
        -0.007025460246950388,
        -0.01679963804781437,
        -0.061788324266672134,
        -0.08325088024139404,
        0.07288865745067596,
        0.0008202195749618113,
        -0.034058697521686554,
        -0.07145893573760986,
        -0.08373603969812393,
        -0.01370474323630333,
        0.08361116051673889,
        0.12124933302402496,
        0.02148265577852726,
        0.10191048681735992,
        0.049647387117147446,
        -0.04747043550014496,
        0.08577680587768555,
        -0.027001136913895607,
        -0.0896235927939415,
        0.026792168617248535,
        0.06978608667850494,
        -0.021624797955155373,
        0.08975893259048462,
        0.08430655300617218,
        0.06895920634269714,
        -0.014048281125724316,
        0.05129799246788025,
        0.024907780811190605,
        0.04002375155687332,
        0.04595658928155899,
        -0.06937304884195328,
        -0.08149665594100952,
        5.143813771010585e-33,
        -0.05937955901026726,
        0.07049797475337982,
        -0.07522867619991302,
        0.0047874245792627335,
        0.1452619880437851,
        -0.05153341591358185,
        0.07035671174526215,
        0.03030790016055107,
        -0.09196862578392029,
        0.0391741506755352,
        -0.04299909248948097,
        0.02348686382174492,
        -0.01927599310874939,
        0.002782238880172372,
        -0.02857419289648533,
        -0.01947459764778614,
        -0.04984608665108681,
        -0.08941179513931274,
        0.00507221557199955,
        -0.010380221530795097,
        0.047213442623615265,
        -0.0950586199760437,
        0.061935123056173325,
        0.053745806217193604,
        0.08435150235891342,
        -0.018039457499980927,
        0.026970883831381798,
        -0.003824451705440879,
        0.09131418168544769,
        0.027480728924274445,
        -0.08710246533155441,
        0.020212627947330475,
        -0.07054059952497482,
        0.01847313530743122,
        0.053485795855522156,
        0.024171780794858932,
        -0.04371125251054764,
        -0.05209166556596756,
        -0.04895447567105293,
        -0.0017578353872522712,
        -0.04911549389362335,
        0.0031135044991970062,
        -0.05315468832850456,
        -0.07297587394714355,
        -0.06090591102838516,
        -0.002071410184726119,
        -0.011819214560091496,
        -0.028356878086924553,
        -0.028630757704377174,
        -0.048672210425138474,
        -0.04905521124601364,
        -0.034406691789627075,
        -0.08108561486005783,
        -0.08855319768190384,
        -0.015235559083521366,
        -0.07365089654922485,
        -0.01020009908825159,
        0.015335969626903534,
        0.04694730415940285,
        0.009308547712862492,
        0.05954504758119583,
        0.024513714015483856,
        -0.014677997678518295,
        0.10915879160165787,
        -0.08715177327394485,
        0.04132496565580368,
        -0.05244535580277443,
        0.028730690479278564,
        0.11037666350603104,
        -0.1103430837392807,
        -0.03511776030063629,
        0.013426312245428562,
        0.010283066891133785,
        0.006048877723515034,
        -0.029415111988782883,
        0.0139671191573143,
        -0.0025673387572169304,
        -0.05178162828087807,
        -0.03741232305765152,
        0.027633385732769966,
        -0.05815218761563301,
        -0.020683664828538895,
        0.06736838072538376,
        0.04335666820406914,
        -0.002165646757930517,
        -0.03616075590252876,
        -0.023503029718995094,
        -0.005845563020557165,
        -0.01861538551747799,
        0.058582521975040436,
        -0.0011362446239218116,
        -0.02650565840303898,
        0.07094237208366394,
        0.05703798308968544,
        -0.03526635840535164,
        -5.531016100041677e-33,
        -0.05674310401082039,
        0.03697369992733002,
        -0.019267436116933823,
        -0.04178427532315254,
        0.029223956167697906,
        -0.029952766373753548,
        0.006296439096331596,
        0.022297950461506844,
        0.06850403547286987,
        0.026311853900551796,
        0.0015438749687746167,
        0.054081059992313385,
        -0.004825160373002291,
        -0.04920231178402901,
        -0.02537553571164608,
        -0.07282806187868118,
        0.002382084261626005,
        -0.005103615112602711,
        -0.03735107555985451,
        -0.04651439189910889,
        0.013316096737980843,
        0.09462104737758636,
        -0.10074939578771591,
        -0.058476779609918594,
        -0.002201931783929467,
        0.05047033354640007,
        0.030831679701805115,
        0.09276590496301651,
        0.10061971843242645,
        0.04090944677591324,
        0.03313005343079567,
        0.07014302164316177,
        -0.08865246176719666,
        0.0752725824713707,
        0.003065396100282669,
        0.09442193806171417,
        0.09299536049365997,
        0.04755978286266327,
        -0.04168781265616417,
        -0.04248493164777756,
        0.07127529382705688,
        0.017649240791797638,
        -0.10724164545536041,
        -0.0198359452188015,
        -0.031508669257164,
        0.0175619013607502,
        0.0032572520431131124,
        -0.00591246597468853,
        -0.06000185385346413,
        -0.004730816464871168,
        0.05498262867331505,
        -0.026770126074552536,
        -0.0020548354368656874,
        -0.02696223184466362,
        -0.05752576142549515,
        0.04364920035004616,
        0.08596137166023254,
        0.044274941086769104,
        0.07235439866781235,
        0.05094485729932785,
        -0.005362686235457659,
        -0.05817343667149544,
        -0.014698601327836514,
        0.03522950038313866,
        -0.006147546693682671,
        -0.029499979689717293,
        -0.05885826796293259,
        0.13869240880012512,
        0.012816411443054676,
        -0.004252774640917778,
        -0.04262884706258774,
        0.09526458382606506,
        -0.0013610867317765951,
        0.05276035889983177,
        -0.037043653428554535,
        -0.0009799156105145812,
        0.010603106580674648,
        -0.05531098693609238,
        -0.049416251480579376,
        -0.003955521155148745,
        0.006590808741748333,
        -0.041850462555885315,
        -0.06116064637899399,
        0.07288163155317307,
        0.03667878359556198,
        0.05182836204767227,
        0.07365519553422928,
        0.042929407209157944,
        0.01552530750632286,
        0.008426928892731667,
        -0.0816187933087349,
        0.010524386540055275,
        -0.022884314879775047,
        0.027099452912807465,
        -0.014762057922780514,
        -5.7751726956212224e-08,
        -0.0628032237291336,
        -0.003866837127134204,
        0.023800715804100037,
        0.03306782990694046,
        0.03217749670147896,
        0.05714617297053337,
        -0.04649439826607704,
        -0.06524825841188431,
        -0.013146346434950829,
        -0.08498353511095047,
        0.013288396410644054,
        0.01960826851427555,
        0.002075017197057605,
        -0.0071290526539087296,
        -0.009517926722764969,
        0.020289570093154907,
        -0.03281807154417038,
        -0.0073595233261585236,
        0.03556554391980171,
        -0.04412931948900223,
        0.040363993495702744,
        -0.07787302136421204,
        -0.03257227689027786,
        0.0020497192163020372,
        -0.02948666363954544,
        -0.05311024188995361,
        -0.014711953699588776,
        0.023873895406723022,
        -0.0896119773387909,
        0.017195461317896843,
        -0.09085576236248016,
        -0.022749295458197594,
        0.07618950307369232,
        -0.03423760458827019,
        0.040106646716594696,
        0.0651412233710289,
        -0.02516746148467064,
        -0.10773442685604095,
        -0.0007481258362531662,
        -0.009513423778116703,
        -0.04683499038219452,
        -0.016867507249116898,
        0.05494071915745735,
        -0.03451403230428696,
        0.011328514665365219,
        -0.06682009249925613,
        -0.07818426936864853,
        -0.09556211531162262,
        0.10818708688020706,
        0.01738007180392742,
        0.07612444460391998,
        0.005701314192265272,
        0.0473826602101326,
        0.055936459451913834,
        0.11317472904920578,
        0.06369335949420929,
        0.015860429033637047,
        -0.03567105159163475,
        0.006768177263438702,
        0.11893674731254578,
        0.027948040515184402,
        0.02397054433822632,
        -0.04986468702554703,
        -0.008477596566081047
    ]
}